<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_assist_deliver_detail_child:外协发货明细子表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2020-04-27
 -->
<mapper namespace="com.xy.vmes.deecoop.assist.dao.AssistDeliverDetailChildMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_assist_deliver_detail_child
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_assist_deliver_detail_child
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'assistDeliverDetailChild' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','deliverId','外协发货单id',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','deliverDtlId','外协发货明细id',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','outDtlId','出库单明细id',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','inDtlId','入库单明细id',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','productId','原材料id(系统货品表id)',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','unitId','单位id',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','ratio','用料比例',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','count','发货数量',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','cuser','创建用户id',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','cdate','创建时间',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','uuser','修改用户id',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','udate','修改时间',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','remark','备注',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistDeliverDetailChild','isdisable','是否启用(0:已禁用 1:启用)',14, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''), 'assistDeliverDetailChild', 'productCode', '货品编码', 15, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistDeliverDetailChild', 'productName', '货品名称', 16, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistDeliverDetailChild', 'productSpec', '规格型号', 17, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistDeliverDetailChild', 'productGenre', '货品属性id', 18, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistDeliverDetailChild', 'productGenreName', '货品属性', 19, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistDeliverDetailChild', 'productType', '货品类型id', 20, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistDeliverDetailChild', 'productProperty', '自定义属性', 21, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistDeliverDetailChild', 'unitName', '单位', 22, '1', '1', '1', '0', now(), 'admin'),
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.AssistDeliverDetailChild">
        select
        id id,
        deliver_id deliverId,
        deliver_dtl_id deliverDtlId,
        out_dtl_id outDtlId,
        in_dtl_id inDtlId,

        orderDtl_child_id orderDtlChildId,
        product_id productId,
        unit_id unitId,
        ratio ratio,
        count count,

        cuser cuser,
        cdate cdate,
        uuser uuser,
        udate udate,
        remark remark,

        isdisable isdisable
        from vmes_assist_deliver_detail_child
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test='id != null and id != ""' >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""'>
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        detailChild.id id,
        detailChild.deliver_id deliverId,
        detailChild.deliver_dtl_id deliverDtlId,
        detailChild.out_dtl_id outDtlId,
        detailChild.in_dtl_id inDtlId,

        detailChild.orderDtl_child_id orderDtlChildId,
        detailChild.product_id productId,
        detailChild.unit_id unitId,
        round(detailChild.ratio, 2) ratio,
        round(detailChild.count, 2) count,

        detailChild.cuser cuser,
        detailChild.cdate cdate,
        detailChild.uuser uuser,
        detailChild.udate udate,
        detailChild.remark remark,
        detailChild.isdisable isdisable,

        <!--货品表(原材料信息)-->
        product.code sysProductCode,
        product.source_code custProductCode,
        CASE
        WHEN product.source_code is null THEN product.code
        WHEN product.source_code is not null THEN product.source_code
        ELSE null
        END productCode,
        product.name productName,
        product.spec productSpec,
        product.genre productGenre,
        product.property productProperty,
        unitName.name unitName

        from vmes_assist_deliver_detail_child detailChild
            left join vmes_product product on detailChild.product_id = product.id
            left join vmes_dictionary unitName on detailChild.unit_id = unitName.id

        <where>
            <if test="deliverDtlId != null and deliverDtlId != ''" >
                and detailChild.deliver_dtl_id = #{deliverDtlId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>

        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

</mapper>