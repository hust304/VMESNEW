<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_assist_plan_detail_child:外协订单明细原材料 Mapper.xml
创建人：刘威 自动创建
创建时间：2020-04-25
 -->
<mapper namespace="com.xy.vmes.deecoop.assist.dao.AssistPlanDetailChildMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_assist_plan_detail_child
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		plan_dtl_id planDtlId,<!-- 采购计划明细id -->
		product_id productId,<!-- 原材料id(系统货品表id) -->
		unit_id unitId,<!-- 单位id -->
		ratio ratio,<!-- 用料比例 -->
		count count,<!-- 原材料数量(单据单位) -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		remark remark,<!-- 备注 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{planDtlId},<!-- 采购计划明细id -->
		#{productId},<!-- 原材料id(系统货品表id) -->
		#{unitId},<!-- 单位id -->
		#{ratio},<!-- 用料比例 -->
		#{count},<!-- 原材料数量(单据单位) -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{remark},<!-- 备注 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  自动创建，禁止修改-->
    <sql id="Column">
        '采购计划明细id'  planDtlId,
        '原材料id(系统货品表id)'  productId,
        '单位id'  unitId,
        '用料比例'  ratio,
        '原材料数量(单据单位)'  count,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr!=""' >
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.AssistPlanDetailChild">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr!=""' >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- 自动创建，禁止修改-->
    <update id="updateByDefined" parameterType="com.yvan.PageData" >
        update
        <include refid="tableName"></include>
        set  ${updateStr} ,udate = now()
        where
        ${queryStr}
    </update>


    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'AssistPlanDetailChild' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','parentId','外协件id',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','productId','原材料id(系统货品表id)',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','unitId','单位id',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','ratio','用料比例',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','count','用料数量',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','cuser','创建用户id',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','cdate','创建时间',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','uuser','修改用户id',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','udate','修改时间',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','remark','备注',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'AssistPlanDetailChild','isdisable','是否启用(0:已禁用 1:启用)',11, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''), 'AssistPlanDetailChild', 'productCode', '货品编码', 12, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'AssistPlanDetailChild', 'productName', '货品名称', 13, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'AssistPlanDetailChild', 'productSpec', '规格型号', 14, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'AssistPlanDetailChild', 'productGenre', '货品属性id', 15, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'AssistPlanDetailChild', 'productGenreName', '货品属性', 16, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'AssistPlanDetailChild', 'productType', '货品类型id', 17, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'AssistPlanDetailChild', 'productProperty', '自定义属性', 18, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'AssistPlanDetailChild', 'unitName', '单位', 19, '1', '1', '1', '0', now(), 'admin')
    </insert>


    <!-- mybatis中 insert into select 批量生成uuid时 用replace去掉"-"只生成一个uuid
    这种情况生成uuid是带【‘-’】的，长度为36位，数据库定义好id是32位
    所以就想直接用replace替换掉【‘-’】不就可以了，可是…..
    报错： Duplicate entry ‘4534c15dc2a111e6a9ab000ec6c596eb’ for key ‘PRIMARY’，显然主键冲突了，
    REPLACE (UUID(), ‘-‘, ”) 仅执行了一次
    怎么办呢，加个group
    -->

    <insert id="insertAssistPlanDetailChild" parameterType="com.yvan.PageData" useGeneratedKeys="true" keyProperty="id">
        insert into vmes_assist_plan_detail_child(id,plan_dtl_id,product_id,unit_id,ratio,count,remark,cuser,cdate,uuser,udate)
        select replace(tab.id, '-', ''),plan_dtl_id,product_id,unit_id,ratio,ratio*count count,remark,cuser,cdate,uuser,udate from (
            select
                uuid() id,
                #{planDtlId} plan_dtl_id,product_id,unit_id,ratio,#{count} count,remark,
                #{cuser} cuser,now() cdate,#{uuser} uuser,now() udate
            from vmes_assist_product_detail where parent_id = #{assistProductId} group by id
        )tab
    </insert>




    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.AssistPlanDetailChild">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test='id != null and id != ""' >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>


            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""'>
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        plan_dtl_id planDtlId,<!-- 采购计划明细id -->
        product_id productId,<!-- 原材料id(系统货品表id) -->
        unit_id unitId,<!-- 单位id -->
        ratio ratio,<!-- 用料比例 -->
        count count,<!-- 原材料数量(单据单位) -->
        cuser cuser,<!-- 创建用户id -->
        cdate cdate,<!-- 创建时间 -->
        uuser uuser,<!-- 修改用户id -->
        udate udate,<!-- 修改时间 -->
        remark remark,<!-- 备注 -->
        isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
        id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '采购计划明细id'  planDtlId,
            '原材料id(系统货品表id)'  productId,
            '单位id'  unitId,
            '用料比例'  ratio,
            '原材料数量(单据单位)'  count,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            'id' id_hide
    </sql>
     -->


    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        detailChild.id id,
        detailChild.plan_dtl_id planDtlId,
        detailChild.product_id productId,
        detailChild.unit_id unitId,
        round(ifnull(detailChild.ratio, 0), 2) ratio,
        round(ifnull(detailChild.count, 0), 2) count,

        detailChild.cuser cuser,
        detailChild.cdate cdate,
        detailChild.uuser uuser,
        detailChild.udate udate,
        detailChild.remark remark,

        detailChild.isdisable isdisable,

        <!--货品表-->
        product.code sysProductCode,
        product.source_code custProductCode,
        CASE
        WHEN product.source_code is null THEN product.code
        WHEN product.source_code is not null THEN product.source_code
        ELSE null
        END productCode,
        product.name productName,
        product.spec productSpec,
        product.genre productGenre,
        product.property productProperty,
        unitName.name unitName

        from vmes_assist_plan_detail_child detailChild
        left join vmes_product product on detailChild.product_id = product.id
        left join vmes_dictionary unitName on detailChild.unit_id = unitName.id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
            <if test="planDtlId != null and planDtlId != ''" >
                and detailChild.plan_dtl_id = #{planDtlId}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        detailChild.id id,
        detailChild.plan_dtl_id planDtlId,
        detailChild.product_id productId,
        detailChild.unit_id unitId,
        round(ifnull(detailChild.ratio, 0), 2) ratio,
        round(ifnull(detailChild.count, 0), 2) count,

        detailChild.cuser cuser,
        detailChild.cdate cdate,
        detailChild.uuser uuser,
        detailChild.udate udate,
        detailChild.remark remark,

        detailChild.isdisable isdisable,

        <!--货品表-->
        product.code sysProductCode,
        product.source_code custProductCode,
        CASE
        WHEN product.source_code is null THEN product.code
        WHEN product.source_code is not null THEN product.source_code
        ELSE null
        END productCode,
        product.name productName,
        product.spec productSpec,
        product.genre productGenre,
        product.property productProperty,
        unitName.name unitName

        from vmes_assist_plan_detail_child detailChild
        left join vmes_product product on detailChild.product_id = product.id
        left join vmes_dictionary unitName on detailChild.unit_id = unitName.id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
            <if test="planDtlId != null and planDtlId != ''" >
                and detailChild.plan_dtl_id = #{planDtlId}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>




</mapper>