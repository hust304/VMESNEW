<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_assist_product_detail:外协件原材料 Mapper.xml
创建人：陈刚 自动创建
创建时间：2020-04-19
 -->
<mapper namespace="com.xy.vmes.deecoop.assist.dao.AssistProductDetailMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_assist_product_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_assist_product_detail
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'assistProductDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'assistProductDetail','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','parentId','外协件id',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','productId','原材料id(系统货品表id)',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','unitId','单位id',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','ratio','用料比例',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','cuser','创建用户id',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','cdate','创建时间',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','uuser','修改用户id',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','udate','修改时间',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','remark','备注',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'assistProductDetail','isdisable','是否启用(0:已禁用 1:启用)',10, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''), 'assistProductDetail', 'productCode', '货品编码', 11, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistProductDetail', 'productName', '货品名称', 12, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistProductDetail', 'productSpec', '规格型号', 13, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistProductDetail', 'productGenre', '货品属性id', 14, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistProductDetail', 'productGenreName', '货品属性', 15, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistProductDetail', 'productType', '货品类型id', 16, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistProductDetail', 'productProperty', '自定义属性', 17, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'assistProductDetail', 'unitName', '单位', 19, '1', '1', '1', '0', now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.AssistProductDetail">
        select
        id id,
        parent_id parentId,
        product_id productId,
        unit_id unitId,
        ratio ratio,

        cuser cuser,
        cdate cdate,
        uuser uuser,
        udate udate,
        remark remark,

        isdisable isdisable
        from vmes_assist_product_detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test='id != null and id != ""' >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <if test='parentId != null and parentId != ""' >
                and parent_id = #{parentId}
            </if>
            <if test='inParentIds != null and inParentIds != ""' >
                and parent_id in (${inParentIds})
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""'>
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            prodDtl.id id,
            prodDtl.parent_id parentId,
            prodDtl.product_id productId,
            prodDtl.unit_id unitId,
            round(ifnull(prodDtl.ratio, 0), 2) ratio,

            prodDtl.cuser cuser,
            prodDtl.cdate cdate,
            prodDtl.uuser uuser,
            prodDtl.udate udate,
            prodDtl.remark remark,

            prodDtl.isdisable isdisable,

            <!--货品表-->
            product.code sysProductCode,
            product.source_code custProductCode,
            CASE
            WHEN product.source_code is null THEN product.code
            WHEN product.source_code is not null THEN product.source_code
            ELSE null
            END productCode,
            product.name productName,
            product.spec productSpec,
            product.genre productGenre,
            product.property productProperty,
            unitName.name unitName

        from vmes_assist_product_detail prodDtl
            left join vmes_product product on prodDtl.product_id = product.id
            left join vmes_dictionary unitName on prodDtl.unit_id = unitName.id
        <where>
            <if test="parentId != null and parentId != ''" >
                and prodDtl.parent_id = #{parentId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>


</mapper>