<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_customer:客户供应商表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-09-18
 -->
<mapper namespace="com.xy.vmes.deecoop.base.dao.CustomerMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_customer
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		company_id companyId,<!-- 公司ID-组织架构 -->
		qrcode qrcode,<!-- 二维码-(图片相对路径) -->
		code code,<!-- 客户编码 -->
		name name,<!-- 客户名称 -->
		name_en nameEn,<!-- 英文名称 -->
		genre genre,<!-- 属性(1:客户 2:供应商) -->
		province province,<!-- 省 -->
		remark remark,<!-- 备注 -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{companyId},<!-- 公司ID-组织架构 -->
		#{qrcode},<!-- 二维码-(图片相对路径) -->
		#{code},<!-- 客户编码 -->
		#{name},<!-- 客户名称 -->
		#{nameEn},<!-- 英文名称 -->
		#{genre},<!-- 属性(1:客户 2:供应商) -->
		#{province},<!-- 省 -->
		#{remark},<!-- 备注 -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '公司ID-组织架构'  companyId,
        '二维码-(图片相对路径)'  qrcode,
        '客户编码'  code,
        '客户名称'  name,
        '英文名称'  nameEn,
        '属性(1:客户 2:供应商)'  genre,
        '省'  province,
        '备注'  remark,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Customer">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from <include refid="tableName"/>
        where
            id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		    #{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update <include refid="tableName"/>
            set isdisable = '0', udate = now()
        where
            id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'customer' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'customer','companyId','公司ID-组织架构',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','qrcode','二维码-(图片相对路径)',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','code','客户编码',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','name','客户名称',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','nameEn','英文名称',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','genre','属性(1:客户 2:供应商)',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','province','省',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','remark','备注',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','cuser','创建用户id',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','cdate','创建时间',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','uuser','修改用户id',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','udate','修改时间',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','isdisable','是否启用(0:已禁用 1:启用)',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'customer','id','id',0, '1','1','1','0',now(), 'admin')
    </insert>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Customer">
        select <include refid="Field"/>
        from <include refid="tableName"/>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="code != null and code != ''" >
                        and code=#{code}
                    </if>
                    <if test="name != null and name != ''" >
                        and name=#{name}
                    </if>
                    <if test="companyId != null and companyId != ''" >
                        and company_id=#{companyId}
                    </if>
                    <if test="genre != null and genre != ''" >
                        and genre=#{genre}
                    </if>
                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        id id,
        code code,
        name name,
        name_en nameEn,
        CASE
          WHEN genre = '1' THEN '客户'
          WHEN genre = '2' THEN '供应商'
        ELSE null
        END genreName,
        genre genre,
        province province,
        remark remark,
        isdisable isdisable,
        company_id companyId,

        qrcode qrcode,
        cuser cuser,
        cdate cdate,
        uuser uuser,
        udate udate
    </sql>

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select <include refid="Field1"/>
        from <include refid="tableName"/>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="code != null and code != ''">
                and code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select <include refid="Field1"/>
        from <include refid="tableName"/>
        <where>
            <if test="code != null and code != ''">
                and code LIKE CONCAT(CONCAT(#{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and name LIKE CONCAT(CONCAT(#{name}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and company_id=#{currentCompanyId}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>

        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

</mapper>