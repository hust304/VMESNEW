<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_employee:员工表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-07-23
 -->
<mapper namespace="com.xy.vmes.deecoop.dao.EmployeeMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_employee
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		user_id userId,<!-- 系统用户ID -->
		company_id companyId,<!-- 公司ID-组织架构 -->
		code code,<!-- 员工编号 -->
		type type,<!-- 员工类型 数据字典:sys_employee_type -->
		name name,<!-- 员工姓名 -->
		name_en nameEn,<!-- 员工英文名 -->
		photo photo,<!-- 员工照片 -->
		icon icon,<!-- 员工图片 -->
		mobile mobile,<!-- 手机号码 -->
		email email,<!-- 邮箱地址 -->
		sex sex,<!-- 性别(1:男0:女) 数据字典:sys_employee_sex -->
		birthday birthday,<!-- 出生日期(yyyy-mm-dd) -->
		entry_date entryDate,<!-- 入职日期(yyyy-mm-dd) -->
		native_place nativePlace,<!-- 籍贯 -->
		political political,<!-- 政治面貌 数据字典:sys_employee_political -->
		identity_number identityNumber,<!-- 身份证号 -->
		marital marital,<!-- 婚姻状况(1:已婚 0:未婚) 数据字典:sys_employee_marital -->
		isdisable isdisable,<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		column_1 column1,<!-- 预留字段 -->
		column_2 column2,<!-- 预留字段 -->
		column_3 column3,<!-- 预留字段 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{userId},<!-- 系统用户ID -->
		#{companyId},<!-- 公司ID-组织架构 -->
		#{code},<!-- 员工编号 -->
		#{type},<!-- 员工类型 数据字典:sys_employee_type -->
		#{name},<!-- 员工姓名 -->
		#{nameEn},<!-- 员工英文名 -->
		#{photo},<!-- 员工照片 -->
		#{icon},<!-- 员工图片 -->
		#{mobile},<!-- 手机号码 -->
		#{email},<!-- 邮箱地址 -->
		#{sex},<!-- 性别(1:男0:女) 数据字典:sys_employee_sex -->
		#{birthday},<!-- 出生日期(yyyy-mm-dd) -->
		#{entryDate},<!-- 入职日期(yyyy-mm-dd) -->
		#{nativePlace},<!-- 籍贯 -->
		#{political},<!-- 政治面貌 数据字典:sys_employee_political -->
		#{identityNumber},<!-- 身份证号 -->
		#{marital},<!-- 婚姻状况(1:已婚 0:未婚) 数据字典:sys_employee_marital -->
		#{isdisable},<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{column1},<!-- 预留字段 -->
		#{column2},<!-- 预留字段 -->
		#{column3},<!-- 预留字段 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '系统用户ID'  userId,
        '公司ID-组织架构'  companyId,
        '员工编号'  code,
        '员工类型 数据字典:sys_employee_type'  type,
        '员工姓名'  name,
        '员工英文名'  nameEn,
        '员工照片'  photo,
        '员工图片'  icon,
        '手机号码'  mobile,
        '邮箱地址'  email,
        '性别(1:男0:女) 数据字典:sys_employee_sex'  sex,
        '出生日期(yyyy-mm-dd)'  birthday,
        '入职日期(yyyy-mm-dd)'  entryDate,
        '籍贯'  nativePlace,
        '政治面貌 数据字典:sys_employee_political'  political,
        '身份证号'  identityNumber,
        '婚姻状况(1:已婚 0:未婚) 数据字典:sys_employee_marital'  marital,
        '是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '预留字段'  column1,
        '预留字段'  column2,
        '预留字段'  column3,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="PageData.keywords!= null and PageData.keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Employee">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="PageData.keywords!= null and PageData.keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Employee">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>


                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->



</mapper>