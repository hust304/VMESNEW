<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_finance_bill:应收/应付单 Mapper.xml
创建人：刘威 自动创建
创建时间：2019-11-07
 -->
<mapper namespace="com.xy.vmes.deecoop.finance.dao.FinanceBillMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_finance_bill
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		code code,<!-- 编码 -->
		business_id businessId,<!-- 业务ID -->
		company_id companyId,<!-- 企业ID -->
		customer_id customerId,<!-- 客户/供应商ID -->
		type type,<!-- 单据类型 (0:收款单 1:付款单 2:减免单 3:退款单 4:发货账单 5:发退货账单 6:收货账单 7:收退货账单) -->
		amount amount,<!-- 金额 -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		remark remark,<!-- 备注 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		state state,<!-- 状态（0：待提交 1：待审核 2：已审核 -1：已取消） -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{code},<!-- 编码 -->
		#{businessId},<!-- 业务ID -->
		#{companyId},<!-- 企业ID -->
		#{customerId},<!-- 客户/供应商ID -->
		#{type},<!-- 单据类型 (0:收款单 1:付款单 2:减免单 3:退款单 4:发货账单 5:发退货账单 6:收货账单 7:收退货账单) -->
		#{amount},<!-- 金额 -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{remark},<!-- 备注 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{state},<!-- 状态（0：待提交 1：待审核 2：已审核 -1：已取消） -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  自动创建，禁止修改-->
    <sql id="Column">
        '编码'  code,
        '业务ID'  businessId,
        '企业ID'  companyId,
        '客户/供应商ID'  customerId,
        '单据类型 (0:收款单 1:付款单 2:减免单 3:退款单 4:发货账单 5:发退货账单 6:收货账单 7:收退货账单)'  type,
        '金额'  amount,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        '状态（0：待提交 1：待审核 2：已审核 -1：已取消）'  state,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr!=""' >
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.FinanceBill">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr!=""' >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- 自动创建，禁止修改-->
    <update id="updateByDefined" parameterType="com.yvan.PageData" >
        update
        <include refid="tableName"></include>
        set  ${updateStr} ,udate = now()
        where
        ${queryStr}
    </update>


    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'FinanceBill' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'FinanceBill','customerCode','客户编码',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','customerName','客户名称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','customerId','客户/供应商ID',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','type','单据类型',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','typeName','单据类型',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','amount','金额',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','cuser','制单人id',7, '1','1','1','0',now(), 'admin'),
			(replace(uuid(), '-', ''),'FinanceBill','cuserName','制单人',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','cdate','日期',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','suser','审核人id',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','suserName','审核人',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','sdate','审核时间',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','remark','备注',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','isdisable','是否启用',14, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','state','状态',15, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceBill','id','id',0, '1','1','1','0',now(), 'admin')




        delete from vmes_column where model_code = 'FinanceReceiveView' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'FinanceReceiveView','code','客户编码',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','name','客户名称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','typeName','客户类型',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','currentPeriod','期间',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','accountDays','账期（天）',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','beginPlus','应收款（期初）',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','beginMinus','预收款（期初）',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','nowPlus','发生额（本期）',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','nowMinus','收款金额（本期）',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','endPlus','应收款（当前）',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','endMinus','预收款（当前）',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','overdue','逾期货款',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'FinanceReceiveView','id','id',0, '1','1','1','0',now(), 'admin')

    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.FinanceBill">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test='id != null and id != ""' >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>


            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""'>
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        code code,<!-- 编码 -->
        business_id businessId,<!-- 业务ID -->
        company_id companyId,<!-- 企业ID -->
        customer_id customerId,<!-- 客户/供应商ID -->
        type type,<!-- 单据类型 (0:收款单 1:付款单 2:减免单 3:退款单 4:发货账单 5:发退货账单 6:收货账单 7:收退货账单) -->
        amount amount,<!-- 金额 -->
        cuser cuser,<!-- 创建用户id -->
        cdate cdate,<!-- 创建时间 -->
        uuser uuser,<!-- 修改用户id -->
        udate udate,<!-- 修改时间 -->
        remark remark,<!-- 备注 -->
        isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
        state state,<!-- 状态（0：待提交 1：待审核 2：已审核 -1：已取消） -->
        id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '编码'  code,
            '业务ID'  businessId,
            '企业ID'  companyId,
            '客户/供应商ID'  customerId,
            '单据类型 (0:收款单 1:付款单 2:减免单 3:退款单 4:发货账单 5:发退货账单 6:收货账单 7:收退货账单)'  type,
            '金额'  amount,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            '状态（0：待提交 1：待审核 2：已审核 -1：已取消）'  state,
            'id' id_hide
    </sql>
     -->


    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
            <if test='currentCompanyId != null and currentCompanyId != ""'>
                and company_id LIKE CONCAT(CONCAT('%', #{currentCompanyId}),'%')
            </if>
            <if test='code != null and code != ""'>
                and code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test='name != null and name != ""'>
                and name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        customer.id customerId,
        customer.code customerCode,
        customer.name customerName,
        cuser.id cuser,
        cuser.user_name cuserName,
        DATE_FORMAT(bill.cdate,'%Y-%m-%d %T') cdate,
        suser.id suser,
        suser.user_name suserName,
        DATE_FORMAT(bill.sdate,'%Y-%m-%d %T') sdate,
        bill.id,
        bill.code,
        round(ifnull(bill.amount,0),2) amount,
        bill.state,
        case when bill.state='0'then '待提交' when bill.state='1' then '待审核' when bill.state='2' then '已审核'
        when bill.state='-1' then '已取消'  else null end stateName,
        bill.type,
        case  when bill.type='0' then '收款单' when bill.type='1' then '付款单' when bill.type='2' then '减免单' when bill.type='3' then '退款单'
        when bill.type='4' then '发货账单' when bill.type='5' then '发退货账单' when bill.type='6' then '收货账单' when bill.type='7' then '收退货账单' else null end typeName,
        bill.remark
        from vmes_finance_bill bill
        left join vmes_customer customer  on customer.id = bill.customer_id
        left join vmes_user suser on bill.suser = suser.id

        left join vmes_user cuser on bill.cuser = cuser.id
        left join vmes_department dept on dept.id = cuser.dept_id

        <where>

            <if test='dataType != null and dataType == "0"'>
                and cuser.id = #{currentUserId}
            </if>
            <if test='dataType != null and dataType == "1"'>
                and dept.id_${deptLayer} = #{deptRId}
            </if>

            <if test='currentCompanyId != null and currentCompanyId != ""'>
                and bill.company_id = #{currentCompanyId}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
            <if test='stateStr != null and stateStr != ""' >
                and bill.state in (${stateStr})
            </if>

            <if test='customerCode != null and customerCode != ""'>
                and customer.code LIKE CONCAT(CONCAT('%', #{customerCode}),'%')
            </if>
            <if test='customerName != null and customerName != ""'>
                and customer.name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>




    <!-- 自动创建，可以修改 -->
    <select id="getFinanceBillDetail"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select cdate,period,round(ifnull(receiveAmount,0),2) receiveAmount,round(ifnull(occurAmount,0),2) occurAmount,typeName,remark from
        (
        select
        DATE_FORMAT(bill.cdate,'%Y-%m-%d %T') cdate,
        bill.period,
        case when bill.type='0' then bill.amount else null end receiveAmount ,
        case when bill.type in ('2','3','4') then bill.amount else null end occurAmount ,
        case when bill.type='0' then '收款单' when bill.type='1' then '付款单' when bill.type='2' then '减免单' when bill.type='3' then '退款单'
        when bill.type='4' then '发货账单' when bill.type='5' then '发退货账单' when bill.type='6' then '收货账单' when bill.type='7' then '收退货账单' else null end typeName,
        bill.remark
        from vmes_customer customer
        left join vmes_finance_bill bill on customer.id = bill.customer_id
        <where>
            and bill.type in ('0','2','3','4')
            and bill.state = '2'
            <if test='period != null and period != ""'>
                and bill.period = #{period}
            </if>
            <if test='currentCompanyId != null and currentCompanyId != ""'>
                and bill.company_id = #{currentCompanyId}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
            <if test='customerId != null and customerId != ""'>
                and customer.id LIKE CONCAT(CONCAT('%', #{customerId}),'%')
            </if>
            <if test='customerCode != null and customerCode != ""'>
                and customer.code LIKE CONCAT(CONCAT('%', #{customerCode}),'%')
            </if>
            <if test='customerName != null and customerName != ""'>
                and customer.name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
            </if>
        </where>

        union all

        select
        case when base.cdate is  null then DATE_FORMAT(NOW(),'%Y-%m-01 00:00:00') else DATE_FORMAT(base.cdate,'%Y-%m-01 00:00:00') end cdate,
        case when base.period is  null then DATE_FORMAT(NOW(),'%Y%m') else base.period end period,
        case when (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
        then (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_plus > 0 then base.begin_plus else null end beginPlus,
        case when (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
        then (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_minus > 0 then base.begin_minus else null end beginMinus,
        '上期结转' typeName,
        case when base.remark is null then null else base.remark end remark
        from vmes_customer customer
        left join vmes_finance_base base on customer.id = base.customer_id and base.period = #{period}
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
            <if test='customerId != null and customerId != ""'>
                and customer.id LIKE CONCAT(CONCAT('%', #{customerId}),'%')
            </if>
            <if test='customerCode != null and customerCode != ""'>
                and customer.code LIKE CONCAT(CONCAT('%', #{customerCode}),'%')
            </if>
            <if test='customerName != null and customerName != ""'>
                and customer.name LIKE CONCAT(CONCAT('%', #{customerName}),'%')
            </if>
            <if test='currentCompanyId != null and currentCompanyId != ""'>
                and customer.company_id = #{currentCompanyId}
            </if>
        </where>
        ) tab
        order by cdate asc
    </select>



    <!-- 自动创建，可以修改 -->
    <select id="getFinanceReceiveView"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select id,code,name,type,typeName,province,currentPeriod,balance,accountDays,round(ifnull(beginPlus,0),2) beginPlus,round(ifnull(beginMinus,0),2) beginMinus,round(ifnull(nowPlus,0),2) nowPlus,round(ifnull(nowMinus,0),2) nowMinus,
        <![CDATA[ case when nowPlus-nowMinus+beginPlus-beginMinus>0 then round(ifnull(nowPlus-nowMinus+beginPlus-beginMinus,0),2) else 0.00 end endPlus ]]>,
        <![CDATA[ case when nowPlus-nowMinus+beginPlus-beginMinus<0 then round(ifnull(-(nowPlus-nowMinus+beginPlus-beginMinus),0),2) else 0.00 end endMinus ]]>,
        null overdue
        from (

          select id,code,name,type,typeName,province,provinceName,currentPeriod,balance,accountDays,beginPlus,beginMinus,sum(nowPlus) nowPlus,sum(nowMinus) nowMinus from (
            select
            customer.id,
            customer.code,
            customer.name,
            customer.type,
            type.name typeName,
            customer.province province,
            province.name provinceName,
            period.current_period currentPeriod,
            round(ifnull(customer.balance,0),2) balance,
            round(ifnull(customer.account_days,0),2) accountDays,


            <![CDATA[
            case when (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
            then (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_plus > 0 then base.begin_plus else 0.00 end beginPlus   ,
            case when (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
            then (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_minus > 0 then base.begin_minus else 0.00 end beginMinus   ,
            ]]>


            0.0000 nowPlus,
            ifnull(nowMinusBill.amount,0) nowMinus

            from vmes_customer customer
            left join vmes_dictionary type on customer.type = type.id
            left join vmes_dictionary province on customer.province = province.id
            left join vmes_finance_period period on period.company_id = customer.company_id
            left join vmes_finance_base base on base.customer_id = customer.id and base.type = '0' and base.isdisable = '1' and base.period = period.current_period
            left join vmes_finance_bill nowMinusBill on nowMinusBill.customer_id = customer.id and nowMinusBill.type in ('0') and nowMinusBill.state = '2' and nowMinusBill.isdisable = '1' and nowMinusBill.period = period.current_period


            <where>
                <!--客户  df7cb67fca4148bc9632c908e4a7fdea-->
                <if test='genre != null and genre != ""'>
                    and customer.genre LIKE CONCAT(CONCAT('%', #{genre}),'%')
                </if>

                <if test='code != null and code != ""'>
                    and customer.code LIKE CONCAT(CONCAT('%', #{code}),'%')
                </if>

                <if test='name != null and name != ""'>
                    and customer.name LIKE CONCAT(CONCAT('%', #{name}),'%')
                </if>

                <if test='currentPeriod != null and currentPeriod != ""'>
                    and period.current_period LIKE CONCAT(CONCAT('%', #{currentPeriod}),'%')
                </if>

                <if test='currentCompanyId != null and currentCompanyId != ""'>
                    and customer.company_id = #{currentCompanyId}
                </if>
                <!--queryStr 自定义sql查询语句-->
                <if test='queryStr != null and queryStr != ""' >
                    and ${queryStr}
                </if>

            </where>

            union all

            select
            customer.id,
            customer.code,
            customer.name,
            customer.type,
            type.name typeName,
            customer.province province,
            province.name provinceName,
            period.current_period currentPeriod,
            round(ifnull(customer.balance,0),2) balance,
            round(ifnull(customer.account_days,0),2) accountDays,


            <![CDATA[
                case when (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
                then (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_plus > 0 then base.begin_plus else 0.00 end beginPlus   ,
                case when (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
                then (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_minus > 0 then base.begin_minus else 0.00 end beginMinus   ,
                ]]>


            ifnull(nowPlusBill.amount,0) nowPlus,
            0.0000 nowMinus

            from vmes_customer customer
            left join vmes_dictionary type on customer.type = type.id
            left join vmes_dictionary province on customer.province = province.id
            left join vmes_finance_period period on period.company_id = customer.company_id
            left join vmes_finance_base base on base.customer_id = customer.id and base.type = '0' and base.isdisable = '1' and base.period = period.current_period
            left join vmes_finance_bill nowPlusBill on nowPlusBill.customer_id = customer.id and nowPlusBill.type in ('2','3','4') and nowPlusBill.state = '2' and nowPlusBill.isdisable = '1' and nowPlusBill.period = period.current_period


            <where>
                <!--客户  df7cb67fca4148bc9632c908e4a7fdea-->
                <if test='genre != null and genre != ""'>
                    and customer.genre LIKE CONCAT(CONCAT('%', #{genre}),'%')
                </if>

                <if test='code != null and code != ""'>
                    and customer.code LIKE CONCAT(CONCAT('%', #{code}),'%')
                </if>

                <if test='name != null and name != ""'>
                    and customer.name LIKE CONCAT(CONCAT('%', #{name}),'%')
                </if>

                <if test='currentPeriod != null and currentPeriod != ""'>
                    and period.current_period LIKE CONCAT(CONCAT('%', #{currentPeriod}),'%')
                </if>

                <if test='currentCompanyId != null and currentCompanyId != ""'>
                    and customer.company_id = #{currentCompanyId}
                </if>
                <!--queryStr 自定义sql查询语句-->
                <if test='queryStr != null and queryStr != ""' >
                    and ${queryStr}
                </if>

            </where>

          ) t
        group by t.id
        )tab
    </select>




    <!-- 自动创建，可以修改 -->
    <select id="getFinanceReceiveGroup"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <![CDATA[ sum(case when nowPlus-nowMinus+beginPlus-beginMinus>0 then round(ifnull(nowPlus-nowMinus+beginPlus-beginMinus,0),2) else 0.00 end) nowReceiveAmount ]]>,
        <![CDATA[ sum(case when nowPlus-nowMinus+beginPlus-beginMinus<0 then round(ifnull(-(nowPlus-nowMinus+beginPlus-beginMinus),0),2) else 0.00 end) preReceiveAmount ]]>
        from (

        select id,code,name,type,typeName,province,provinceName,currentPeriod,balance,accountDays,beginPlus,beginMinus,sum(nowPlus) nowPlus,sum(nowMinus) nowMinus from (
        select
        customer.id,
        customer.code,
        customer.name,
        customer.type,
        type.name typeName,
        customer.province province,
        province.name provinceName,
        period.current_period currentPeriod,
        round(ifnull(customer.balance,0),2) balance,
        round(ifnull(customer.account_days,0),2) accountDays,


        <![CDATA[
            case when (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
            then (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_plus > 0 then base.begin_plus else 0.00 end beginPlus   ,
            case when (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
            then (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_minus > 0 then base.begin_minus else 0.00 end beginMinus   ,
            ]]>


        0.0000 nowPlus,
        ifnull(nowMinusBill.amount,0) nowMinus

        from vmes_customer customer
        left join vmes_dictionary type on customer.type = type.id
        left join vmes_dictionary province on customer.province = province.id
        left join vmes_finance_period period on period.company_id = customer.company_id
        left join vmes_finance_base base on base.customer_id = customer.id and base.type = '0' and base.isdisable = '1' and base.period = period.current_period
        left join vmes_finance_bill nowMinusBill on nowMinusBill.customer_id = customer.id and nowMinusBill.type in ('0') and nowMinusBill.state = '2' and nowMinusBill.isdisable = '1' and nowMinusBill.period = period.current_period


        <where>
            <!--客户  df7cb67fca4148bc9632c908e4a7fdea-->
            <if test='genre != null and genre != ""'>
                and customer.genre LIKE CONCAT(CONCAT('%', #{genre}),'%')
            </if>
            <if test='currentCompanyId != null and currentCompanyId != ""'>
                and customer.company_id = #{currentCompanyId}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>

        </where>

        union all

        select
        customer.id,
        customer.code,
        customer.name,
        customer.type,
        type.name typeName,
        customer.province province,
        province.name provinceName,
        period.current_period currentPeriod,
        round(ifnull(customer.balance,0),2) balance,
        round(ifnull(customer.account_days,0),2) accountDays,


        <![CDATA[
                case when (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
                then (select t.begin_plus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_plus > 0 then base.begin_plus else 0.00 end beginPlus   ,
                case when (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) > 0
                then (select t.begin_minus from vmes_finance_history t where t.customer_id = customer.id and t.isdisable = '1' order by t.period desc LIMIT 1) when base.begin_minus > 0 then base.begin_minus else 0.00 end beginMinus   ,
                ]]>


        ifnull(nowPlusBill.amount,0) nowPlus,
        0.0000 nowMinus

        from vmes_customer customer
        left join vmes_dictionary type on customer.type = type.id
        left join vmes_dictionary province on customer.province = province.id
        left join vmes_finance_period period on period.company_id = customer.company_id
        left join vmes_finance_base base on base.customer_id = customer.id and base.type = '0' and base.isdisable = '1' and base.period = period.current_period
        left join vmes_finance_bill nowPlusBill on nowPlusBill.customer_id = customer.id and nowPlusBill.type in ('2','3','4') and nowPlusBill.state = '2' and nowPlusBill.isdisable = '1' and nowPlusBill.period = period.current_period


        <where>
            <!--客户  df7cb67fca4148bc9632c908e4a7fdea-->
            <if test='genre != null and genre != ""'>
                and customer.genre LIKE CONCAT(CONCAT('%', #{genre}),'%')
            </if>
            <if test='currentCompanyId != null and currentCompanyId != ""'>
                and customer.company_id = #{currentCompanyId}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>

        </where>

        ) t
        group by t.id
        )tab
    </select>


</mapper>