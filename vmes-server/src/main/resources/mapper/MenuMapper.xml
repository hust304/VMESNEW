<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_menu:系统功能菜单 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-07-31
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.MenuMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_menu
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		pid pid,<!-- 上级id-根root -->
		company_id companyId,<!-- 公司ID-组织架构 -->
		model_code modelCode,<!-- 菜单编号(表名,类名) -->
		name name,<!-- 菜单名称 -->
		serial_number serialNumber,<!-- 菜单顺序 -->
		icon icon,<!-- 菜单图标 -->
		type type,<!--  -->
		url url,<!-- 模块List链接地址 -->
		isleaf isleaf,<!-- 是否叶子节点(1:叶子节点0:非叶子节点) 数据字典:sys_isleaf -->
		layer layer,<!-- 菜单级别(最大支持4层) -->
		isdisable isdisable,<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		id_0 id0,<!-- 根root节点ID -->
		id_1 id1,<!-- 一级节点ID -->
		id_2 id2,<!-- 二级节点ID -->
		id_3 id3,<!-- 三级节点ID -->
		id_4 id4,<!-- 四级节点ID -->
		id_5 id5,<!-- 五级节点ID -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{pid},<!-- 上级id-根root -->
		#{companyId},<!-- 公司ID-组织架构 -->
		#{modelCode},<!-- 菜单编号(表名,类名) -->
		#{name},<!-- 菜单名称 -->
		#{serialNumber},<!-- 菜单顺序 -->
		#{icon},<!-- 菜单图标 -->
		#{type},<!--  -->
		#{url},<!-- 模块List链接地址 -->
		#{isleaf},<!-- 是否叶子节点(1:叶子节点0:非叶子节点) 数据字典:sys_isleaf -->
		#{layer},<!-- 菜单级别(最大支持4层) -->
		#{isdisable},<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{id0},<!-- 根root节点ID -->
		#{id1},<!-- 一级节点ID -->
		#{id2},<!-- 二级节点ID -->
		#{id3},<!-- 三级节点ID -->
		#{id4},<!-- 四级节点ID -->
		#{id5},<!-- 五级节点ID -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '上级id-根root'  pid,
        '公司ID-组织架构'  companyId,
        '菜单编号(表名,类名)'  modelCode,
        '菜单名称'  name,
        '菜单顺序'  serialNumber,
        '菜单图标'  icon,
        ''  type,
        '模块List链接地址'  url,
        '是否叶子节点(1:叶子节点0:非叶子节点) 数据字典:sys_isleaf'  isleaf,
        '菜单级别(最大支持4层)'  layer,
        '是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '根root节点ID'  id0,
        '一级节点ID'  id1,
        '二级节点ID'  id2,
        '三级节点ID'  id3,
        '四级节点ID'  id4,
        '五级节点ID'  id5,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="PageData.keywords!= null and PageData.keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Menu">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="PageData.keywords!= null and PageData.keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Menu">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>


                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->



</mapper>