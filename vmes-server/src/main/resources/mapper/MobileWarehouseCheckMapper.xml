<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：手机端盘点
创建人：房兆琦
创建时间：2018-10-16
 -->
<mapper namespace="com.xy.vmes.deecoop.mobile.dao.MobileWarehouseCheckMapper">


    <select id="listWarehouseCheckByAduiting" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        checkexecute.id id,
        detail.product_id productId,
        detail.id detailId,
        wcheck.id parentId,
        warehouse.path_name pathName,
        detail.warehouse_id warehouseId,
        product.code productCode,
        product.name productName,
        product.spec spec,
        genre.name genreName,
        unit.name unitName,
        detail.code code,
        checkexecute.state,
        round(ifnull(detail.stock_count, 0), 2) stockCount

        from vmes_warehouse_check_execute checkexecute
        left join vmes_warehouse_check_detail detail  on checkexecute.detail_id = detail.id
        left join vmes_warehouse_check wcheck on wcheck.id = detail.parent_id
        left join vmes_product product on detail.product_id = product.id
        left join vmes_product_unit produnit on produnit.product_id = product .id and produnit.type = '1'
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary genre on product.genre = genre.id
        left join vmes_warehouse warehouse on warehouse.id = detail.warehouse_id
        <where>
            <if test="currentCompanyId != null and currentCompanyId != ''" >
                and wcheck.company_id=#{currentCompanyId}
            </if>
            and detail.state = '2'
            and checkexecute.state = '0'
        </where>
        order by detail.cdate desc

    </select>


    <select id="listWarehouseCheckByAduited" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        checkexecute.id id,
        detail.product_id productId,
        detail.id detailId,
        wcheck.id parentId,
        warehouse.path_name pathName,
        detail.warehouse_id warehouseId,
        product.code productCode,
        product.name productName,
        product.spec spec,
        genre.name genreName,
        unit.name unitName,
        detail.code code,
        checkexecute.state,
        round(ifnull(detail.stock_count, 0), 2) stockCount

        from vmes_warehouse_check_execute checkexecute
        left join vmes_warehouse_check_detail detail  on checkexecute.detail_id = detail.id
        left join vmes_warehouse_check wcheck on wcheck.id = detail.parent_id
        left join vmes_product product on detail.product_id = product.id
        left join vmes_product_unit produnit on produnit.product_id = product .id and produnit.type = '1'
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary genre on product.genre = genre.id
        left join vmes_warehouse warehouse on warehouse.id = detail.warehouse_id
        <where>
            <if test="currentCompanyId != null and currentCompanyId != ''" >
                and wcheck.company_id =# {currentCompanyId}
            </if>
            <if test="currentUserId != null and currentUserId != ''" >
                and checkexecute.audit_id = #{currentUserId}
            </if>
            and checkexecute.state in ('2','3')
        </where>
        order by checkexecute.cdate desc

    </select>


    <!-- 手机端获取盘点信息 -->
    <select id="findWarehouseCheck"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        detail.product_id productId,
        detail.id detailId,
        wcheck.id parentId,
        warehouse.path_name pathName,
        detail.warehouse_id warehouseId,
        product.code productCode,
        product.name productName,
        product.spec spec,
        genre.name genreName,
        unit.name unitName,
        detail.code code,
        round(ifnull(detail.stock_count, 0), 2) stockCount

        from vmes_warehouse_check_detail detail
        left join vmes_warehouse_check wcheck on wcheck.id = detail.parent_id
        left join vmes_product product on detail.product_id = product.id
        left join vmes_product_unit produnit on produnit.product_id = product .id and produnit.type = '1'
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary genre on product.genre = genre.id
        left join vmes_warehouse warehouse on warehouse.id = detail.warehouse_id
        <where>
            <if test="detailId != null and detailId != ''" >
                and detail.id = #{detailId}
            </if>
        </where>


    </select>



    <!-- 手机端获取盘点信息 -->
    <select id="findWarehouseCheckById"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        checkexecute.id id,
        detail.product_id productId,
        detail.id detailId,
        wcheck.id parentId,
        warehouse.path_name pathName,
        detail.warehouse_id warehouseId,
        product.code productCode,
        product.name productName,
        product.spec spec,
        genre.name genreName,
        unit.name unitName,
        detail.code code,
        checkexecute.state,
        round(ifnull(detail.stock_count, 0), 2) stockCount,
        round(ifnull(checkexecute.count, 0), 2) checkCount

        from vmes_warehouse_check_execute checkexecute
        left join vmes_warehouse_check_detail detail  on checkexecute.detail_id = detail.id
        left join vmes_warehouse_check wcheck on wcheck.id = detail.parent_id
        left join vmes_product product on detail.product_id = product.id
        left join vmes_product_unit produnit on produnit.product_id = product .id and produnit.type = '1'
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary genre on product.genre = genre.id
        left join vmes_warehouse warehouse on warehouse.id = detail.warehouse_id
        <where>
            <if test="id != null and id != ''" >
                and checkexecute.id = #{id}
            </if>
        </where>


    </select>

</mapper>