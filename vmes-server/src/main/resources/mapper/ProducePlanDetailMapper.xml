<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_produce_plan_detail:生产计划明细 Mapper.xml
创建人：陈刚 自动创建
创建时间：2020-02-27
 -->
<mapper namespace="com.xy.vmes.deecoop.produce.dao.ProducePlanDetailMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_produce_plan_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_produce_plan_detail
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_produce_plan_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentIds != null and parentIds != ''" >
                and parent_id in (${parentIds})
            </if>
        </where>
    </update>

    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ProducePlanDetail">
        select
        id id,
        parent_id parentId,
        product_id productId,
        unit_id unitId,
        count count,

        begin_date beginDate,
        end_date endDate,
        plan_date planDate,
        state state,
        cuser cuser,

        cdate cdate,
        uuser uuser,
        udate udate,
        remark remark,
        isdisable isdisable
        from vmes_produce_plan_detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test='id != null and id != ""' >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="state != null and state != ''" >
                and state = #{state}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""'>
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- ********************************************************************************************************** -->
    <insert id="producePlanDetail" >
        delete from vmes_column where model_code = 'producePlanDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'producePlanDetail','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','parentId','生产计划id',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','productId','货品id',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','unitId','计量单位id(单据单位)',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','count','计划数量',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','beginDate','计划开始日期(yyyy-MM-dd)',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','endDate','计划结束日期(yyyy-MM-dd)',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','planDate','计划完成日期(业务反写字段)(yyyy-MM-dd)',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','state','状态 (0:待生产 1:生产中 2:已完成 -1:已取消)',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','cuser','创建用户id',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','cdate','创建时间',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','uuser','修改用户id',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','udate','修改时间',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','remark','备注',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','isdisable','是否启用(0:已禁用 1:启用)',14, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'producePlanDetail','productCode','货品编码',15, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','productName','货品名称',16, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','productSpec','规格型号',17, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','productGenre','属性ID',18, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','productProperty','自定义属性',19, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','unitName','计量单位',20, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'producePlanDetail','orderDtlId','销售订单明细id',21, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','jsonStr','按货品合并JsonString',22, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'producePlanDetail','bomId','bomId',23, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','code','产品计划号',24, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','operType','操作类型(add:添加, edit:修改)',25, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','planDtlId','生产计划明细id',26, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','sysDate','系统时间(yyyy-MM-dd)',27, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','orderCode','订单号',28, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''), 'producePlanDetail', 'expectDate', '约定交期', 29, '1', '1', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''),'producePlanDetail','fineCount','合格数',30, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'producePlanDetail','badCount','不合格数',31, '1','1','1','0',now(), 'admin'),
    </insert>

    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id planDtlId,
            detail.id id,
            detail.code code,
            detail.parent_id parentId,
            detail.product_id productId,
            detail.unit_id unitId,
            round(ifnull(detail.count, 0), 2) count,

            DATE_FORMAT(detail.begin_date,'%Y-%m-%d') beginDate,
            DATE_FORMAT(detail.end_date,'%Y-%m-%d') endDate,
            detail.plan_date planDate,
            detail.state state,
            detail.cuser cuser,

            detail.cdate cdate,
            detail.uuser uuser,
            detail.udate udate,
            detail.remark remark,
            detail.isdisable isdisable,

            CASE
            WHEN detail.state = '0' THEN '待生产'
            WHEN detail.state = '1' THEN '生产中'
            WHEN detail.state = '2' THEN '已完成'
            WHEN detail.state = '-1' THEN '已取消'
            ELSE null
            END stateName,

            <!--货品表-->
            bom.id bomId,
            product.code sysProductCode,
            product.source_code custProductCode,
            CASE
            WHEN product.source_code is null THEN product.code
            WHEN product.source_code is not null THEN product.source_code
            ELSE null
            END productCode,
            product.name productName,
            product.spec productSpec,
            product.genre productGenre,
            product.property productProperty,
            unitName.name unitName,

            round(sum(ifnull(warehouseOut.set_count,0)),2) setCount,

            <!--货品单位(单据单位)-->
            prodUnit.np_formula n2pFormula,
            prodUnit.n2p_is_scale n2pIsScale,
            prodUnit.n2p_decimal_count n2pDecimalCount,

            prodUnit.pn_formula p2nFormula,
            prodUnit.p2n_is_scale p2nIsScale,
            prodUnit.p2n_decimal_count p2nDecimalCount,

            <!--生产计划明细检验报工-->
            round(ifnull(qualityDtl.fine_count, 0), 2) fineCount,
            round(ifnull(qualityDtl.bad_count, 0), 2) badCount,

            <!--页面传递参数字段 -->
            DATE_FORMAT(now(),'%Y-%m-%d') sysDate,
            '' operType,
            '' orderCode,
            '' expectDate,
            '' orderDtlId,
            '' jsonStr

        from vmes_produce_plan_detail detail
            left join vmes_produce_plan plan on detail.parent_id = plan.id
            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary unitName on detail.unit_id = unitName.id
            left join vmes_product_unit prodUnit on (detail.product_id = prodUnit.product_id and detail.unit_id = prodUnit.unit)
            left join vmes_warehouse_out warehouseOut on (detail.code = warehouseOut.business_code and plan.company_id = warehouseOut.company_id)
            left join (
                select t1.*,t0.prod_id,t0.layer
                from vmes_bom_tree t0 left join vmes_bom t1 on  t1.id = t0.bom_id
                where t1.isdefault = '1'
            ) bom on product.id = bom.prod_id and bom.layer = 0

            <!--按(生产计划明细id)汇总查询-生产计划明细检验报工表-->
            left join (
                select
                    a.plan_dtl_id,
                    round(sum(ifnull(a.fine_count,0)), 2) fine_count,
                    round(sum(ifnull(a.bad_count,0)), 2) bad_count
                from vmes_produce_plan_quality_detail a
                    left join vmes_produce_plan b on a.plan_id = b.id
                <where>
                    <if test="currentCompanyId != null and currentCompanyId != ''" >
                        and b.company_id = #{currentCompanyId}
                    </if>
                </where>
                group by a.plan_dtl_id
            ) qualityDtl on detail.id = qualityDtl.plan_dtl_id
        <where>
            <if test="ids != null and ids != ''" >
                and detail.id in (${ids})
            </if>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="state != null and state != ''" >
                and detail.state = #{state}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>

        </where>
        group by detail.id
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- ********************************************************************************************************** -->
    <insert id="MaterialRequisitionGroup" >
        delete from vmes_column where model_code = 'MaterialRequisitionGroup' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','productCode','货品编码',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','productName','货品名称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','productSpec',' 规格/型号',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','productGenre','货品属性ID',4, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','productGenreName','货品属性',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','unitName','计量单位',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','warehouseOutCode','领料出库单号',7, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','productProperty','自定义属性',8, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','warehouseOutId',' 领料出库ID',10, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','productId','产品ID',11, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','code','产品计划号',12, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','deptName','申请部门',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','makeName','申请人',14, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','setCount','领取套数',15, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','cdate','申请时间',16, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','remark','备注',17, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisitionGroup','id','id',0, '1','0','1','0',now(), 'admin')

    </insert>

    <select id="getMaterialRequisitionGroup" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id id,
            detail.code code,

            <!--货品表-->
            product.id productId,
            CASE
            WHEN product.source_code is null THEN product.code
            WHEN product.source_code is not null THEN product.source_code
            ELSE null
            END productCode,
            product.name productName,
            product.spec productSpec,
            product.genre productGenre,
            product.property productProperty,
            unitName.name unitName,

            round(sum(ifnull(warehouseOut.set_count,0)),2) setCount

        from vmes_produce_plan_detail detail
            left join vmes_produce_plan plan on detail.parent_id = plan.id
            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary unitName on detail.unit_id = unitName.id
            left join vmes_product_unit prodUnit on (detail.product_id = prodUnit.product_id and detail.unit_id = prodUnit.unit)
            left join vmes_warehouse_out warehouseOut on (detail.code = warehouseOut.business_code and plan.company_id = warehouseOut.company_id)
            left join vmes_user user on user.id = warehouseOut.make_id
            left join vmes_department dept on dept.id = user.dept_id

        <where>
            <if test="ids != null and ids != ''" >
                and detail.id in (${ids})
            </if>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="state != null and state != ''" >
                and detail.state = #{state}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>

        </where>
        group by detail.id
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- ********************************************************************************************************** -->
    <insert id="MaterialRequisition" >
        delete from vmes_column where model_code = 'MaterialRequisition' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'MaterialRequisition','productCode','货品编码',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','productName','货品名称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','productSpec',' 规格/型号',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','productGenre','货品属性ID',4, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','productGenreName','货品属性',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','unitName','计量单位',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','warehouseOutCode','领料出库单号',7, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'MaterialRequisition','productProperty','自定义属性',8, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','warehouseOutId',' 领料出库ID',10, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','productId','产品ID',11, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','code','产品计划号',12, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','deptName','申请部门',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','makeName','申请人',14, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','setCount','领取套数',15, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','cdate','申请时间',16, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','remark','备注',17, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'MaterialRequisition','id','id',0, '1','0','1','0',now(), 'admin')

    </insert>

    <select id="getMaterialRequisition" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        detail.id id,
        detail.code code,

        <!--货品表-->
        product.id productId,
        CASE
        WHEN product.source_code is null THEN product.code
        WHEN product.source_code is not null THEN product.source_code
        ELSE null
        END productCode,
        product.name productName,
        product.spec productSpec,
        product.genre productGenre,
        product.property productProperty,
        unitName.name unitName,

        ifnull(warehouseOut.id,'null') warehouseOutId,
        warehouseOut.code warehouseOutCode,
        dept.name deptName,
        user.user_name makeName,
        DATE_FORMAT(warehouseOut.cdate,'%Y-%m-%d') cdate,
        round(ifnull(warehouseOut.set_count,0),2) setCount

        from vmes_produce_plan_detail detail
        left join vmes_produce_plan plan on detail.parent_id = plan.id
        left join vmes_product product on detail.product_id = product.id
        left join vmes_dictionary unitName on detail.unit_id = unitName.id
        left join vmes_product_unit prodUnit on (detail.product_id = prodUnit.product_id and detail.unit_id = prodUnit.unit)
        left join vmes_warehouse_out warehouseOut on (detail.code = warehouseOut.business_code and plan.company_id = warehouseOut.company_id)
        left join vmes_user user on user.id = warehouseOut.make_id
        left join vmes_department dept on dept.id = user.dept_id

        <where>
            <if test="ids != null and ids != ''" >
                and detail.id in (${ids})
            </if>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="state != null and state != ''" >
                and detail.state = #{state}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>

        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>


</mapper>