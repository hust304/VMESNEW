<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：产品计价单位 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-11-15
 -->
<mapper namespace="com.xy.vmes.deecoop.base.dao.ProductUnitMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_product_unit
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		product_id productId,<!-- 产品(vmes_product.id) -->
		unit unit,<!-- 计价单位(字典表-vmes_dictionary.id) -->
		code code,<!-- 编码 -->
		name name,<!-- 名称 -->
		np_formula npFormula,<!-- 计量单位转换计价单位 -->
		pn_formula pnFormula,<!-- 计价单位转换计量单位 -->
		isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		remark remark,<!-- 备注 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{productId},<!-- 产品(vmes_product.id) -->
		#{unit},<!-- 计价单位(字典表-vmes_dictionary.id) -->
		#{code},<!-- 编码 -->
		#{name},<!-- 名称 -->
		#{npFormula},<!-- 计量单位转换计价单位 -->
		#{pnFormula},<!-- 计价单位转换计量单位 -->
		#{isdisable},<!-- 是否禁用(0:已禁用 1:启用) -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{remark},<!-- 备注 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '产品(vmes_product.id)'  productId,
        '计价单位(字典表-vmes_dictionary.id)'  unit,
        '编码'  code,
        '名称'  name,
        '计量单位转换计价单位'  npFormula,
        '计价单位转换计量单位'  pnFormula,
        '是否禁用(0:已禁用 1:启用)'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '备注'  remark,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ProductUnit">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'ProductUnit' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'ProductUnit','productId','货品Id',1, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','code','货品编码',2, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','name','货品名称',3, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','nunit','计量单位Id',4, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','nunitName','计量单位',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','punit','计价单位Id',6, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','punitName','计价单位',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','npFormula','计量单位转换计价单位',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','pnFormula','计价单位转换计量单位',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','isdisable','是否启用',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','cdate','创建时间',11, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','cuser','创建人账号',12, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','udate','修改时间',13, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','uuser','修改人账号',14, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','remark','备注',15, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'ProductUnit','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.ProductUnit">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>


                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        pu.product_id productId,<!-- 产品(vmes_product.id) -->
        pu.unit punit,<!-- 计价单位(字典表-vmes_dictionary.id) -->
        punit.name punitName,
        product.code code,<!-- 编码 -->
        product.name name,<!-- 名称 -->
        product.unit nunit,
        nunit.name nunitName,
        pu.np_formula npFormula,<!-- 计量单位转换计价单位 -->
        pu.pn_formula pnFormula,<!-- 计价单位转换计量单位 -->
        pu.isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) -->
        pu.cdate cdate,<!-- 创建时间 -->
        pu.cuser cuser,<!-- 创建人账号 -->
        pu.udate udate,<!-- 修改时间 -->
        pu.uuser uuser,<!-- 修改人账号 -->
        pu.remark remark,<!-- 备注 -->
        pu.id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '产品(vmes_product.id)'  productId,
            '计价单位(字典表-vmes_dictionary.id)'  unit,
            '编码'  code,
            '名称'  name,
            '计量单位转换计价单位'  npFormula,
            '计价单位转换计量单位'  pnFormula,
            '是否禁用(0:已禁用 1:启用)'  isdisable,
            '创建时间'  cdate,
            '创建人账号'  cuser,
            '修改时间'  udate,
            '修改人账号'  uuser,
            '备注'  remark,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_product_unit pu
        left join vmes_product product on product.id = pu.product_id
        left join vmes_dictionary nunit on product.unit = nunit.id
        left join vmes_dictionary punit on pu.unit = punit.id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="productId != null and productId != ''">
                and product.product_id = #{productId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_product_unit pu
        left join vmes_product product on product.id = pu.product_id
        left join vmes_dictionary nunit on product.unit = nunit.id
        left join vmes_dictionary punit on pu.unit = punit.id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="productId != null and productId != ''">
                and product.id = #{productId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>