<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_purchase_order:采购订单 Mapper.xml
创建人：刘威 自动创建
创建时间：2019-03-05
 -->
<mapper namespace="com.xy.vmes.deecoop.purchase.dao.PurchaseOrderMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_purchase_order
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		company_id companyId,<!-- 企业ID-组织架构 -->
		apply_id applyId,<!-- 申请人 -->
		dept_id deptId,<!-- 申请部门 -->
		supplier_id supplierId,<!-- 供应商 -->
		code code,<!-- 采购订单编码 -->
		total total,<!-- 合计金额 -->
		discount discount,<!-- 折扣金额 -->
		amount amount,<!-- 采购金额 -->
        receipt_amount receiptAmount,<!-- 开票金额 -->
		type type,<!-- 采购订单类型-(字典表-vmes_dictionary.id) -->
		state state,<!-- 状态(0:待提交 1:待审核 2:采购中 3:已完成 -1:已取消) -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		remark remark,<!-- 备注 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{companyId},<!-- 企业ID-组织架构 -->
		#{applyId},<!-- 申请人 -->
		#{deptId},<!-- 申请部门 -->
		#{supplierId},<!-- 供应商 -->
		#{code},<!-- 采购订单编码 -->
		#{total},<!-- 合计金额 -->
		#{discount},<!-- 折扣金额 -->
		#{amount},<!-- 采购金额 -->
		#{type},<!-- 采购订单类型-(字典表-vmes_dictionary.id) -->
		#{state},<!-- 状态(0:待提交 1:待审核 2:采购中 3:已完成 -1:已取消) -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{remark},<!-- 备注 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '企业ID-组织架构'  companyId,
        '申请人'  applyId,
        '申请部门'  deptId,
        '供应商'  supplierId,
        '采购订单编码'  code,
        '合计金额'  total,
        '折扣金额'  discount,
        '采购金额'  amount,
        '采购订单类型-(字典表-vmes_dictionary.id)'  type,
        '状态(0:待提交 1:待审核 2:采购中 3:已完成 -1:已取消)'  state,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.PurchaseOrder">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- 自动创建，禁止修改-->
    <update id="updateByDefined" parameterType="com.yvan.PageData" >
        update
        <include refid="tableName"></include>
        set  ${updateStr} ,udate = now()
        where
        ${queryStr}
    </update>


    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'PurchaseOrder' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'PurchaseOrder','code','采购单号',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','supplierName','供应商',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','applyName','申请人',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','deptName','申请部门',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','amount','采购金额',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','cdate','制单日期',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','remark','备注',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','state','状态',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','companyId','企业ID-组织架构',9, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','applyId','申请人',10, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','deptId','申请部门',11, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','supplierId','供应商',12, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','total','合计金额',13, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','discount','折扣金额',14, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','amount','采购金额',15, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','receiptAmount','收票金额',16, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','type','采购订单类型',17, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','cuser','创建用户id',18, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','uuser','修改用户id',19, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','udate','修改时间',20, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','isdisable','是否启用',21, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','receiptState','收票状态',22, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseOrder','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.PurchaseOrder">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <if test="supplierId != null and supplierId != ''" >
                and supplier_id = #{supplierId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        DISTINCT
        purchaseOrder.company_id companyId,<!-- 企业ID-组织架构 -->
        purchaseOrder.apply_id applyId,<!-- 申请人 -->
        apply.user_name applyName,
        purchaseOrder.dept_id deptId,<!-- 申请部门 -->
        dept.name deptName,
        purchaseOrder.supplier_id supplierId,<!-- 供应商 -->
        supplier.name supplierName,
        purchaseOrder.code code,<!-- 采购订单编码 -->
        round(ifnull(purchaseOrder.total, 0),2) total,<!-- 合计金额 -->
        round(ifnull(purchaseOrder.discount, 0),2) discount,<!-- 折扣金额 -->
        round(ifnull(purchaseOrder.amount, 0),2) amount,<!-- 采购金额 -->
        round(ifnull(purchaseOrder.receipt_amount, 0),2) receiptAmount,<!-- 收票金额 -->
        case when ifnull(purchaseOrder.receipt_amount, 0)=0 then '0'<!-- 收票状态：未收票 -->
        <![CDATA[when ifnull(purchaseOrder.receipt_amount, 0)>0 and ifnull(purchaseOrder.receipt_amount, 0)<ifnull(purchaseOrder.amount, 0) then '1']]><!-- 收票状态：部分收票 -->
        <![CDATA[when ifnull(purchaseOrder.receipt_amount, 0)>=ifnull(purchaseOrder.amount, 0) then '2']]><!-- 收票状态：已收票 -->
        else null end receiptState,
        purchaseOrder.type type,<!-- 采购订单类型-(字典表-vmes_dictionary.id) -->
        purchaseOrder.state state,<!-- 状态(0:待提交 1:待审核 2:采购中 3:已完成 -1:已取消) -->
        purchaseOrder.cuser cuser,<!-- 创建用户id -->
        DATE_FORMAT(purchaseOrder.cdate,'%Y-%m-%d') cdate,<!-- 创建时间 -->
        purchaseOrder.uuser uuser,<!-- 修改用户id -->
        purchaseOrder.udate udate,<!-- 修改时间 -->
        purchaseOrder.remark remark,<!-- 备注 -->
        purchaseOrder.isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
        purchaseOrder.id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '企业ID-组织架构'  companyId,
            '申请人'  applyId,
            '申请部门'  deptId,
            '供应商'  supplierId,
            '采购订单编码'  code,
            '合计金额'  total,
            '折扣金额'  discount,
            '采购金额'  amount,
            '采购订单类型-(字典表-vmes_dictionary.id)'  type,
            '状态(0:待提交 1:待审核 2:采购中 3:已完成 -1:已取消)'  state,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_purchase_order purchaseOrder
        left join vmes_purchase_order_detail detail on detail.parent_id = purchaseOrder.id
        left join vmes_product product on product.id = detail.product_id
        left join vmes_user apply on apply.id = purchaseOrder.apply_id
        left join vmes_department dept on dept.id = purchaseOrder.dept_id
        left join vmes_customer supplier on supplier.id = purchaseOrder.supplier_id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and purchaseOrder.company_id = #{currentCompanyId}
            </if>
            <if test="state != null and state != ''">
                and purchaseOrder.state = #{state}
            </if>
            <if test="code != null and code != ''">
                and purchaseOrder.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="supplierName != null and supplierName != ''">
                and supplier.name LIKE CONCAT(CONCAT('%', #{supplierName}),'%')
            </if>
            <if test="productCode != null and productCode != ''">
                and product.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
            </if>
            <if test="productName != null and productName != ''">
                and product.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_purchase_order purchaseOrder
        left join vmes_purchase_order_detail detail on detail.parent_id = purchaseOrder.id
        left join vmes_product product on product.id = detail.product_id
        left join vmes_user apply on apply.id = purchaseOrder.apply_id
        left join vmes_department dept on dept.id = purchaseOrder.dept_id
        left join vmes_customer supplier on supplier.id = purchaseOrder.supplier_id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="id != null and id != ''">
                and purchaseOrder.id = #{id}
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and purchaseOrder.company_id = #{currentCompanyId}
            </if>
            <if test="state != null and state != ''">
                and purchaseOrder.state = #{state}
            </if>
            <if test="code != null and code != ''">
                and purchaseOrder.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="supplierName != null and supplierName != ''">
                and supplier.name LIKE CONCAT(CONCAT('%', #{supplierName}),'%')
            </if>
            <if test="productCode != null and productCode != ''">
                and product.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
            </if>
            <if test="productName != null and productName != ''">
                and product.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!--按(企业id,供应商id)汇总 vmes_purchase_order-->
    <select id="findPurchaseOrderBySupplier" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            company_id companyId,
            supplier_id supplierId,
            sum(amount) amount
        from vmes_purchase_order
        <where>
            <if test="companyId != null and companyId != ''">
                and company_id = #{companyId}
            </if>
            <if test="supplierId != null and supplierId != ''">
                and supplier_id = #{supplierId}
            </if>
            <if test="dateByNow != null and dateByNow != ''">
                and date_format(cdate, '%Y%m') = #{dateByNow}
            </if>
            and company_id is not null and supplier_id is not null and isdisable = '1'
        </where>
        group by company_id,supplier_id
    </select>

</mapper>