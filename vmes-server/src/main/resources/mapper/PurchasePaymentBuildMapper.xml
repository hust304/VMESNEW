<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_purchase_payment_build:供应商付款初期设定 Mapper.xml
创建人：陈刚 自动创建
创建时间：2019-03-12
 -->
<mapper namespace="com.xy.vmes.deecoop.purchase.dao.PurchasePaymentBuildMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_purchase_payment_build
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_purchase_payment_build
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'purchasePaymentBuild' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'purchasePaymentBuild','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','supplierId','供应商id',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','supplierCode','供应商编码',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','supplierName','供应商名称',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','paymentPeriod','付款期间',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','paymentPeriodDate','付款期间',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','beginPlus','应付款(期初)',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','beginMinus','预付款(期初)',4, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'purchasePaymentBuild','beginValue','付款值(期初)',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','cuser','创建用户id',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','cdate','创建时间',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','cdateStr','创建时间',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','uuser','修改用户id',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','udate','修改时间',9, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'purchasePaymentBuild','remark','备注',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','isdisable','是否启用(0:已禁用 1:启用)',11, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'purchasePaymentBuild','isBuild','状态id',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'purchasePaymentBuild','isBuildName','状态',12, '1','1','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.PurchasePaymentBuild">
        select
        id id,
        supplier_id supplierId,
        payment_period paymentPeriod,
        payment_period_date paymentPeriodDate,
        begin_plus beginPlus,

        begin_minus beginMinus,
        begin_value beginValue,
        cuser cuser,
        cdate cdate,
        uuser uuser,

        udate udate,
        remark remark,
        isdisable isdisable
        from vmes_purchase_payment_build
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        build.id id,
        customer.id supplierId,
        customer.code supplierCode,
        customer.name supplierName,
        period.payment_period paymentPeriod,
        date_format(period.payment_period_date, '%Y-%m-%d') paymentPeriodDate,
        round(ifnull(build.begin_plus, 0), 2) beginPlus,

        round(ifnull(build.begin_minus, 0), 2) beginMinus,
        round(ifnull(build.begin_value, 0), 2) beginValue,
        build.cuser cuser,
        build.cdate cdate,
        DATE_FORMAT(build.cdate,'%Y-%m-%d %T') cdateStr,
        build.uuser uuser,

        build.udate udate,
        build.remark remark,
        build.isdisable isdisable,

        CASE
        WHEN build.supplier_id is not null THEN 'Y'
        WHEN build.supplier_id is null THEN 'N'
        ELSE null
        END isBuild,
        CASE
        WHEN build.supplier_id is not null THEN '已设定'
        WHEN build.supplier_id is null THEN '未设定'
        ELSE null
        END isBuildName

        from vmes_customer customer
        left join vmes_purchase_payment_build build on customer.id = build.supplier_id
        left join vmes_purchase_company_period period on customer.company_id = period.company_id
        <where>
            <if test="currentCompanyId != null and currentCompanyId != ''" >
                and customer.company_id = #{currentCompanyId} and customer.genre = '49c0a7ebcb4c4175bd5195837a6a9a13' and customer.isdisable = '1'
            </if>
            <if test="supplierId != null and supplierId != ''" >
                and customer.id = #{supplierId}
            </if>
            <if test="supplierIds != null and supplierIds != ''" >
                and customer.id in (${supplierIds})
            </if>
            <if test="supplierIdsByNotIn != null and supplierIdsByNotIn != ''" >
                and customer.id not in (${supplierIdsByNotIn})
            </if>

            <if test="supplierCode != null and supplierCode != ''" >
                and customer.code = #{supplierCode}
            </if>
            <if test="supplierName != null and supplierName != ''" >
                and customer.name = #{supplierName}
            </if>

            <if test="'true' == isNotBuild" >
                and build.supplier_id is null
            </if>
            <if test="'true' == isBuild" >
                and build.supplier_id is not null
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>

        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

</mapper>