<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_purchase_sign_detail:采购签收明细 Mapper.xml
创建人：刘威 自动创建
创建时间：2019-03-12
 -->
<mapper namespace="com.xy.vmes.deecoop.purchase.dao.PurchaseSignDetailMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_purchase_sign_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_purchase_sign_detail
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_purchase_sign_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
        </where>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="PurchaseSignDetail" >
        delete from vmes_column where model_code = 'PurchaseSignDetail';
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'PurchaseSignDetail','id','id',0, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','parentId','采购签收单ID',1, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','orderDetailId','采购订单明细ID',2, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','inDetailId','入库单明细id',3, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','productId','产品ID',4, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'PurchaseSignDetail','arriveCount','到货数量',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','cuser','创建用户id',6, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','cdate','创建时间',7, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','uuser','修改用户id',8, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','udate','修改时间',9, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'PurchaseSignDetail','remark','备注',10, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','isdisable','是否启用(0:已禁用 1:启用)',11, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','orderId','采购订单id',12, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','quality','质检属性id (1:免检 2:检验)',13, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','qualityType','检验方式id (1:全检 2:抽检)',14, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'PurchaseSignDetail','qualityCount','(实际)检验数量',15, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','badCount','(检验)不合格数量',16, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','retreatCount','(检验)退货数量',17, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','receiveCount','(检验)让步接收数量',18, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','qualityInDtlId','(检验入库)入库单明细id',19, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'PurchaseSignDetail','receiveInDtlId','(检验让步接收入库)入库单明细id',20, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','state','签收明细状态id',21, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','orderUnit','单据单位id',22, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'productCode', '货品编码', 23, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'productName', '货品名称', 24, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'productSpec', '规格型号', 25, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'productGenre', '货品属性id', 26, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'productGenreName', '货品属性', 27, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),

            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'productProperty', '自定义属性', 28, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'orderUnitName', '单位', 29, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),

            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'n2pFormula', 'n2pFormula', 30, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'n2pIsScale', 'n2p:是否需要四舍五入', 31, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'n2pDecimalCount', 'n2p:保留小数位数', 32, '1', '0', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'p2nFormula', 'p2nFormula', 33, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'p2nIsScale', 'p2n:是否需要四舍五入', 34, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'p2nDecimalCount', 'p2n:保留小数位数', 35, '1', '0', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'qualityName', '是否质检', 36, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'qualityTypeName', '检验方式', 37, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'stateName', '状态', 38, '1', '0', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'inParentId', '(免检)入库单id', 39, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'supplierId', '供应商id', 40, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'supplierName', '供应商名称', 41, '1', '0', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'inCode', '(免检)入库单编码', 42, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'qualityInParentId', '(检验入库)入库单id', 43, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'qualityInCode', '(检验入库)入库单编码', 44, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'receiveInParentId', '(检验让步接收入库)入库单id', 45, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'receiveInCode', '让步接收单', 46, '1', '0', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'signInParentId', '合格入库单id', 47, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'PurchaseSignDetail', 'signInCode', '合格入库单', 48, '1', '0', '1', '0', now(), 'admin'),

    </insert>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.PurchaseSignDetail">
        select
        id id,
        parent_id parentId,
        order_detail_id orderDetailId,
        in_detail_id inDetailId,
        product_id productId,

        arrive_count arriveCount,
        cuser cuser,
        cdate cdate,
        uuser uuser,
        udate udate,

        remark remark,
        isdisable isdisable,
        order_id orderId,
        quality quality,
        quality_type qualityType,

        quality_count qualityCount,
        bad_count badCount,
        retreat_count retreatCount,
        receive_count receiveCount,
        quality_inDtl_id qualityInDtlId,

        receive_inDtl_id receiveInDtlId,
        state state,
        order_unit orderUnit,
        quality_fine_count qualityFineCount,
        quality_bad_count qualityBadCount
        from vmes_purchase_sign_detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <if test="parentId != null and parentId != ''">
                and parent_id = #{parentId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id id,
            detail.parent_id parentId,
            detail.order_detail_id orderDetailId,
            detail.in_detail_id inDetailId,
            detail.product_id productId,

            round(ifnull(detail.arrive_count, 0), 2) arriveCount,
            detail.cuser cuser,
            detail.cdate cdate,
            detail.uuser uuser,
            detail.udate udate,

            detail.remark remark,
            detail.isdisable isdisable,
            detail.order_id orderId,
            detail.quality quality,
            detail.quality_type qualityType,

            round(ifnull(detail.quality_count, 0), 2) qualityCount,
            round(ifnull(detail.bad_count, 0), 2) badCount,
            round(ifnull(detail.retreat_count, 0), 2) retreatCount,
            round(ifnull(detail.receive_count, 0), 2) receiveCount,
            detail.quality_inDtl_id qualityInDtlId,

            detail.receive_inDtl_id receiveInDtlId,
            detail.state state,
            detail.order_unit orderUnit,

            CASE
            WHEN detail.quality = '1' THEN '免检'
            WHEN detail.quality = '2' THEN '检验'
            ELSE null
            END qualityName,

            CASE
            WHEN detail.quality_type = '1' THEN '全检'
            WHEN detail.quality_type = '2' THEN '抽检'
            ELSE null
            END qualityTypeName,

            CASE
            WHEN detail.state = '1' THEN '检验中'
            WHEN detail.state = '2' THEN '已完成'
            WHEN detail.state = '-1' THEN '已取消'
            ELSE null
            END stateName,

            <!--货品表-->
            product.code sysProductCode,
            product.source_code custProductCode,
            CASE
              WHEN product.source_code is null THEN product.code
              WHEN product.source_code is not null THEN product.source_code
            ELSE null
            END productCode,
            product.name productName,
            product.spec productSpec,
            product.property productProperty,
            product.genre productGenre,
            genre.name productGenreName,
            orderUnit.name orderUnitName,

            <!--发货单明细货品单位: 单位换算公式-->
            prodUnitPrice.np_formula n2pFormula,
            prodUnitPrice.pn_formula p2nFormula,

            prodUnitPrice.n2p_is_scale n2pIsScale,
            prodUnitPrice.n2p_decimal_count n2pDecimalCount,

            prodUnitPrice.p2n_is_scale p2nIsScale,
            prodUnitPrice.p2n_decimal_count p2nDecimalCount,

            <!--关联采购订单-->
            orderDtl.parent_id orderId,
            purchaseOrder.supplier_id supplierId,
            supplier.name supplierName,

            <!--(免检)入库单-->
            inDetail.parent_id inParentId,
            inParent.code inCode,
            <!--(检验入库)入库单-->
            qualityInDtl.parent_id qualityInParentId,
            qualityInParent.code qualityInCode,
            <!--(检验让步接收入库)入库单-->
            receiveInDtl.parent_id receiveInParentId,
            receiveInParent.code receiveInCode,

            <!--java 类实现(signInParentId,signInCode-->
            '' signInParentId,
            '' signInCode
        from vmes_purchase_sign_detail detail
            left join vmes_dictionary orderUnit on detail.order_unit = orderUnit.id
            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary genre on product.genre = genre.id
            left join vmes_product_unit prodUnitPrice on (detail.product_id = prodUnitPrice.product_id and detail.order_unit = prodUnitPrice.unit)

            <!--关联采购订单明细-->
            left join vmes_purchase_order_detail orderDtl on detail.order_detail_id = orderDtl.id
            left join vmes_purchase_order purchaseOrder on detail.order_id = purchaseOrder.id
            left join vmes_customer supplier on purchaseOrder.supplier_id = supplier.id

            <!--关联(免检)入库单明细-->
            left join vmes_warehouse_in_detail inDetail on detail.in_detail_id = inDetail.id
            left join vmes_warehouse_in inParent on inDetail.parent_id = inParent.id

            <!--关联(检验入库)入库单明细-->
            left join vmes_warehouse_in_detail qualityInDtl on detail.quality_inDtl_id = qualityInDtl.id
            left join vmes_warehouse_in qualityInParent on qualityInDtl.parent_id = qualityInParent.id

            <!--关联(检验让步接收入库)入库单明细-->
            left join vmes_warehouse_in_detail receiveInDtl on detail.receive_inDtl_id = receiveInDtl.id
            left join vmes_warehouse_in receiveInParent on receiveInDtl.parent_id = receiveInParent.id

            <!--(采购订单明细id)-退货完成数量-退货明细汇总-->
            left join (
            select
                order_detail_id,
                sum(count) count,
                sum(amount) amount
                from vmes_purchase_retreat_detail
                where state = '3'
                group by order_detail_id
            ) retreatDetail on detail.order_detail_id = retreatDetail.order_detail_id

        <where>
            <if test="signDtlId != null and signDtlId != ''">
                and detail.id = #{signDtlId}
            </if>
            <if test="parentId != null and parentId != ''">
                and detail.parent_id = #{parentId}
            </if>
            <if test="quality != null and quality != ''">
                and detail.quality = #{quality}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>

        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


</mapper>