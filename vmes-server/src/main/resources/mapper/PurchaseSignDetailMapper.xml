<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_purchase_sign_detail:采购签收明细 Mapper.xml
创建人：刘威 自动创建
创建时间：2019-03-12
 -->
<mapper namespace="com.xy.vmes.deecoop.purchase.dao.PurchaseSignDetailMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_purchase_sign_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_purchase_sign_detail
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="PurchaseSignDetail" >
        delete from vmes_column where model_code = 'PurchaseSignDetail';
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'PurchaseSignDetail','productCode','产品编码',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','productName','产品名称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','spec','规格/型号',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','genre','属性',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','genreId','属性ID',5, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','unit','单位',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','unitId','单位ID',7, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','arriveCount','到货数量',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','parentId','采购签收单ID',9, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','orderDetailId','采购订单明细ID',10, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','inDetailId','入库单明细id',11, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','productId','产品ID',12, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','cuser','创建用户id',13, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','cdate','创建时间',14, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','uuser','修改用户id',15, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','udate','修改时间',16, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','remark','备注',17, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','isdisable','是否启用(0:已禁用 1:启用)',18, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.PurchaseSignDetail">
        select
        id id,
        parent_id parentId,
        order_detail_id orderDetailId,
        in_detail_id inDetailId,
        product_id productId,

        arrive_count arriveCount,
        cuser cuser,
        cdate cdate,
        uuser uuser,
        udate udate,

        remark remark,
        isdisable isdisable,
        order_id orderId,
        quality quality,
        quality_type qualityType,

        quality_count qualityCount,
        bad_count badCount,
        retreat_count retreatCount,
        receive_count receiveCount,
        quality_inDtl_id qualityInDtlId,

        receive_inDtl_id receiveInDtlId,
        state state
        from vmes_purchase_sign_detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        detail.id id,
        detail.parent_id parentId,
        detail.order_detail_id orderDetailId,
        detail.in_detail_id inDetailId,
        detail.product_id productId,

        detail.arrive_count arriveCount,
        detail.cuser cuser,
        detail.cdate cdate,
        detail.uuser uuser,
        detail.udate udate,

        detail.remark remark,
        detail.isdisable isdisable,
        detail.order_id orderId,
        detail.quality quality,
        detail.quality_type qualityType,

        detail.quality_count qualityCount,
        detail.bad_count badCount,
        detail.retreat_count retreatCount,
        detail.receive_count receiveCount,
        detail.quality_inDtl_id qualityInDtlId,

        detail.receive_inDtl_id receiveInDtlId,
        detail.state state,

        <!--货品表-->
        product.code sysProductCode,
        product.source_code custProductCode,
        CASE
          WHEN product.source_code is null THEN product.code
          WHEN product.source_code is not null THEN product.source_code
        ELSE null
        END productCode,
        product.name productName,
        product.spec,
        genre.name genre,
        genre.id genreId,
        unit.name unit,
        unit.id unitId,

        <!--到货数量:= 签收数量 - (已完成)退货数量 -->
        round((ifnull(detail.arrive_count, 0) - ifnull(retreatDetail.count, 0)), 2) arriveCount

        from
        vmes_purchase_sign_detail detail
        left join vmes_product product on product.id = detail.product_id
        left join vmes_product_unit produnit on produnit.product_id = product.id and produnit.type = 1
        left join vmes_dictionary genre on product.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary type on product.type = type.id

        <!--(采购订单明细id)-退货完成数量-退货明细汇总-->
        left join (
        select
            order_detail_id,
            sum(count) count,
            sum(amount) amount
            from vmes_purchase_retreat_detail
            where state = '3'
            group by order_detail_id
        ) retreatDetail on detail.order_detail_id = retreatDetail.order_detail_id

        <where>
            <if test="parentId != null and parentId != ''">
                and detail.parent_id = #{parentId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>

        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>