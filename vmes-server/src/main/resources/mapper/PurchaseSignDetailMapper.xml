<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_purchase_sign_detail:采购签收明细 Mapper.xml
创建人：刘威 自动创建
创建时间：2019-03-12
 -->
<mapper namespace="com.xy.vmes.deecoop.purchase.dao.PurchaseSignDetailMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_purchase_sign_detail
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		parent_id parentId,<!-- 采购签收单ID -->
		order_detail_id orderDetailId,<!-- 采购订单明细ID -->
		in_detail_id inDetailId,<!-- 入库单明细id -->
		product_id productId,<!-- 产品ID -->
		arrive_count arriveCount,<!-- 到货数量 -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		remark remark,<!-- 备注 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{parentId},<!-- 采购签收单ID -->
		#{orderDetailId},<!-- 采购订单明细ID -->
		#{inDetailId},<!-- 入库单明细id -->
		#{productId},<!-- 产品ID -->
		#{arriveCount},<!-- 到货数量 -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{remark},<!-- 备注 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '采购签收单ID'  parentId,
        '采购订单明细ID'  orderDetailId,
        '入库单明细id'  inDetailId,
        '产品ID'  productId,
        '到货数量'  arriveCount,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.PurchaseSignDetail">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- 自动创建，禁止修改-->
    <update id="updateByDefined" parameterType="com.yvan.PageData" >
        update
        <include refid="tableName"></include>
        set  ${updateStr} ,udate = now()
        where
        ${queryStr}
    </update>


    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'PurchaseSignDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'PurchaseSignDetail','productCode','产品编码',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','productName','产品名称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','spec','规格/型号',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','genre','属性',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','genreId','属性ID',5, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','unit','单位',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','unitId','单位ID',7, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','arriveCount','到货数量',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','parentId','采购签收单ID',9, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','orderDetailId','采购订单明细ID',10, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','inDetailId','入库单明细id',11, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','productId','产品ID',12, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','cuser','创建用户id',13, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','cdate','创建时间',14, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','uuser','修改用户id',15, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','udate','修改时间',16, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','remark','备注',17, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','isdisable','是否启用(0:已禁用 1:启用)',18, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'PurchaseSignDetail','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.PurchaseSignDetail">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>


            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        detail.parent_id parentId,<!-- 采购签收单ID -->
        detail.order_detail_id orderDetailId,<!-- 采购订单明细ID -->
        detail.in_detail_id inDetailId,<!-- 入库单明细id -->
        detail.product_id productId,<!-- 产品ID -->
        round(ifnull(detail.arrive_count, 0), 2) arriveCount,<!-- 到货数量 -->
        detail.cuser cuser,<!-- 创建用户id -->
        detail.cdate cdate,<!-- 创建时间 -->
        detail.uuser uuser,<!-- 修改用户id -->
        detail.udate udate,<!-- 修改时间 -->
        detail.remark remark,<!-- 备注 -->
        detail.isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->

        product.code productCode,
        product.name productName,
        product.spec,
        genre.name genre,
        genre.id genreId,
        unit.name unit,
        unit.id unitId,

        detail.id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '采购签收单ID'  parentId,
            '采购订单明细ID'  orderDetailId,
            '入库单明细id'  inDetailId,
            '产品ID'  productId,
            '到货数量'  arriveCount,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_purchase_sign_detail detail
        left join vmes_product product on product.id = detail.product_id
        left join vmes_product_unit produnit on produnit.product_id = product.id and produnit.type = 1
        left join vmes_dictionary genre on product.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary type on product.type = type.id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="parentId != null and parentId != ''">
                and detail.parent_id = #{parentId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_purchase_sign_detail detail
        left join vmes_product product on product.id = detail.product_id
        left join vmes_product_unit produnit on produnit.product_id = product.id and produnit.type = 1
        left join vmes_dictionary genre on product.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary type on product.type = type.id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="parentId != null and parentId != ''">
                and detail.parent_id = #{parentId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>