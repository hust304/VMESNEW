<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_role:角色 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-07-30
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.RoleMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_role
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		company_id companyId,<!-- 公司ID-组织架构 -->
		name name,<!-- 角色名称 -->
		isdisable isdisable,<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{companyId},<!-- 公司ID-组织架构 -->
		#{name},<!-- 角色名称 -->
		#{isdisable},<!-- 是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '公司ID-组织架构'  companyId,
        '角色名称'  name,
        '是否禁用(1:已禁用 0:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="PageData.keywords!= null and PageData.keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Role">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <if test="PageData!= null"><!-- 关键词检索 -->
            where 1=1
            <if test="PageData.keywords!= null and PageData.keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
						 or
						字段2 LIKE CONCAT(CONCAT('%', #{PageData.keywords}),'%')
					-->
                )
            </if>
        </if>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.Role">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id !=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>
                    <if test="name != null and name != ''" >
                        and name = #{name}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and isdisable = #{isdisable}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <sql id="RoleColumn">
        'id' id,
        '公司ID' companyID,
        '公司编码' companyCode,
        '所属公司' companyName,
        '角色名称' roleName,

        '创建时间' cdate,
        '创建人' cuseName,
        '创建人账号' cuse,
        '是否启用' isdisable
    </sql>
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
            <include refid="RoleColumn" />
        from dual
    </select>

    <sql id="RoleField">
        a.id,
        a.company_id companyID,
        b.code companyCode,
        b.name companyName,
        a.name roleName,

        a.cdate,
        a.cuser,
        c.user_name cuseName,
        a.isdisable
    </sql>
    <select id="getDataList" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            <include refid="RoleField" />
        from vmes_role a
            left join vmes_department b on a.company_id = b.id and b.isdisable = '0'
            left join vmes_user c on (a.cuser = c.user_code and a.company_id = c.company_id) and c.isdisable = '0'
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id !=''" >
                and a.id = #{id}
            </if>
            <if test="companyID != null and companyID != ''" >
                and a.company_id = #{companyID}
            </if>
            <if test="companyCode != null and companyCode != ''" >
                and b.code = #{companyCode}
            </if>
            <if test="companyName != null and companyName != ''" >
                and b.name = #{companyName}
            </if>
            <if test="roleName != null and roleName != ''" >
                and a.name = #{roleName}
            </if>
            <if test="cuser != null and cuser != ''" >
                and a.cuser = #{cuser}
            </if>
            <if test="cuseName != null and cuseName != ''" >
                and c.user_name = #{cuseName}
            </if>
            <if test="isdisable != null and isdisable != ''" >
                and a.isdisable = #{isdisable}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
    </select>

    <update id="updateDisableByIds" parameterType="java.lang.String" >
        update <include refid="tableName" />
        set isdisable = 1
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>



</mapper>