<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_sale_deliver_detail:发货明细 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-12-15
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleDeliverDetailMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_sale_deliver_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_sale_deliver_detail
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">

    </sql>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <!-- 发货单明细(先计价) -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleDeliverDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'id', 'id', 0, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'parentId', '发货单ID', 1, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'orderId', '订单id', 2, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'orderDetaiId', '订单明细ID', 3, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'sysOrderCode', '订单编号', 4, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'priceCount', '结算数量', 5, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productId', 'productId', 5, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productCode', '货品编码', 6, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productName', '货品名称', 7, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productSpec', '规格型号', 8, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productGenre', '货品属性id', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productGenreName', '货品属性', 10, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'orderUnitName', '单位', 11, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'orderUnit', '单位id', 11, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'priceUnit', '计价单位id', 12, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'priceUnitName', '计价单位', 12, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'orderCount', '发货数量', 13, '1', '1', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productPrice', '货品单价', 14, '1', '1', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'sum', '发货金额', 15, '1', '1', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'deliverDate', '发货日期', 16, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'remark', '备注', 17, '1', '1', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'cuser', '创建用户id', 18, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'cdate', '创建时间', 19, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'uuser', '修改用户id', 20, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'udate', '修改时间', 21, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'state', '发货状态(0:待发货 1:已发货 -1:已取消)', 22, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'outDetailId', '出单明细id', 24, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'isdisable', '是否启用(0:已禁用 1:启用)', 25, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'priceType', '计价类型(1:先计价 2:后计价)', 26, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'stateName', '发货状态', 26, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'deliverCode', '发货单号', 26, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'orderDetailCount', '订购数量', 26, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),

            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'nowDeliverCount', '发货数量', 27, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'nowDeliverSum', '发货金额', 28, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),

            (replace(uuid(), '-', ''),'saleDeliverDetail','customerId','客户id',29, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','customerName','客户名称',29, '1','1','1','0',now(), 'admin'),

    </insert>

    <!-- 发货单明细(后计价) -->
    <insert id="insertColumnByPrice" >
        delete from vmes_column where model_code = 'saleDeliverDetailByPrice' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'id', 'id', 0, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'parentId', '发货单ID', 1, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'orderId', '订单id', 2, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'orderDetaiId', '订单明细ID', 3, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'sysOrderCode', '订单编号', 4, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'priceCount', '结算数量', 5, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'productId', 'productId', 5, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'productCode', '货品编码', 6, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'productName', '货品名称', 7, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'productSpec', '规格型号', 8, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'productGenre', '货品属性id', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'productGenreName', '货品属性', 10, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'orderUnitName', '单位', 11, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'orderUnit', '单位id', 11, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'priceUnit', '计价单位id', 12, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'priceUnitName', '计价单位', 12, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'orderCount', '发货数量', 13, '1', '1', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'productPrice', '货品单价', 14, '1', '1', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'sum', '发货金额', 15, '1', '1', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'deliverDate', '发货日期', 16, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'remark', '备注', 17, '1', '1', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'cuser', '创建用户id', 18, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'cdate', '创建时间', 19, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'uuser', '修改用户id', 20, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'udate', '修改时间', 21, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'state', '发货状态(0:待发货 1:已发货 -1:已取消)', 22, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'outDetailId', '出单明细id', 24, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'isdisable', '是否启用(0:已禁用 1:启用)', 25, '1', '0', '1', '0', '2018-12-16 11:15:19', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'priceType', '计价类型(1:先计价 2:后计价)', 26, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'stateName', '发货状态', 26, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'deliverCode', '发货单号', 26, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetailByPrice', 'orderDetailCount', '订购数量', 26, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin')

    </insert>




    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_sale_deliver_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="parentIds != null and parentIds != ''" >
                and ${parentIds}
            </if>
        </where>
    </update>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleDeliverDetail">
        select
            id id,
            parent_id parentId,
            order_id orderId,
            order_detai_id orderDetaiId,
            out_detail_id outDetailId,

            product_id productId,
            state state,
            order_unit orderUnit,
            order_count orderCount,
            price_unit priceUnit,

            price_count priceCount,
            product_price productPrice,
            sum sum,
            deliver_date deliverDate,
            cuser cuser,

            cdate cdate,
            uuser uuser,
            udate udate,
            remark remark,
            isdisable isdisable,

            in_detail_id inDetailId

        from vmes_sale_deliver_detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="orderId != null and orderId != ''" >
                and order_id = #{orderId}
            </if>
            <if test="orderDtlId != null and orderDtlId != ''" >
                and order_detai_id = #{orderDtlId}
            </if>
            <if test="productId != null and productId != ''" >
                and product_id = #{productId}
            </if>

            <!--发货状态(0:待发货 1:已发货 -1:已取消)-->
            <if test="state != null and state != ''" >
                and state = #{state}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id id,
            detail.parent_id parentId,
            detail.order_id orderId,
            detail.order_detai_id orderDetaiId,
            detail.out_detail_id outDetailId,

            detail.product_id productId,
            detail.state state,
            case when detail.state = '0' then '待发货'
            when detail.state = '1' then '已发货'
            else '已取消' end stateName,
            detail.order_unit orderUnit,
            round(ifnull(detail.order_count, 0), 2) orderCount,
            detail.price_unit priceUnit,

            round(ifnull(detail.price_count, 0), 2) priceCount,
            round(ifnull(detail.product_price, 0), <include refid="com.xy.vmes.deecoop.common.CommonMapper.SYS_PRICE_DEFAULT"></include>) productPrice,
            round(ifnull(detail.sum, 0), 2) sum,
            DATE_FORMAT(detail.deliver_date,'%Y-%m-%d') deliverDate,
            detail.cuser cuser,

            DATE_FORMAT(detail.cdate,'%Y-%m-%d %T') cdate,
            detail.uuser uuser,
            DATE_FORMAT(detail.udate,'%Y-%m-%d %T') udate,
            detail.remark remark,
            detail.isdisable isdisable,

            CASE
                WHEN detail.sum = 0 THEN '未结算'
                WHEN detail.sum > 0 THEN '已结算'
            ELSE null
            END sumStateName,

            deliver.deliver_code deliverCode,
            deliver.customer_id customerId,
            customer.name customerName,
            orderDetail.order_count orderDetailCount,

            saleOrder.sys_code sysOrderCode,
            saleOrder.price_type priceType,
            orderUnit.name orderUnitName,
            priceUnit.name priceUnitName,

            <!--货品表-->
            product.code sysProductCode,
            product.source_code custProductCode,
            CASE
              WHEN product.source_code is null THEN product.code
              WHEN product.source_code is not null THEN product.source_code
            ELSE null
            END productCode,
            product.name productName,
            product.spec productSpec,
            product.genre productGenre,
            product.property property,
            product.picture_code pictureCode,
            genre.name productGenreName,

            <!--发货单明细货品单位: 单位换算公式-->
            prodUnitPrice.np_formula n2pFormula,
            prodUnitPrice.pn_formula p2nFormula,

            prodUnitPrice.n2p_is_scale n2pIsScale,
            prodUnitPrice.n2p_decimal_count n2pDecimalCount,

            prodUnitPrice.p2n_is_scale p2nIsScale,
            prodUnitPrice.p2n_decimal_count p2nDecimalCount

        <if test="'true' == isNeedRetreat">
            ,round((ifnull(detail.order_count, 0) - ifnull(retreatDtl.orderCount, 0)), 2) nowDeliverCount
            ,round((ifnull(detail.sum, 0) - ifnull(retreatDtl.orderSum, 0)), 2) nowDeliverSum
        </if>

        from vmes_sale_deliver_detail detail
            left join vmes_sale_order_detail orderDetail on orderDetail.id = detail.order_detai_id
            left join vmes_sale_deliver deliver on detail.parent_id = deliver.id
            left join vmes_customer customer on deliver.customer_id = customer.id
            left join vmes_sale_order saleOrder on detail.order_id = saleOrder.id

            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary genre on product.genre = genre.id
            left join vmes_dictionary orderUnit on detail.order_unit = orderUnit.id
            left join vmes_dictionary priceUnit on detail.price_unit = priceUnit.id

            left join vmes_product_unit prodUnitPrice on (detail.product_id = prodUnitPrice.product_id and detail.order_unit = prodUnitPrice.unit)

            <if test="'true' == isNeedRetreat">
                <!--(订单明细id)-退货完成数量-退货明细汇总-->
                left join (
                    select
                        deliver_detail_id,
                        sum(order_count) orderCount,
                        sum(order_sum) orderSum
                    from vmes_sale_retreat_detail
                    where <![CDATA[ state <> '-1' ]]>
                    group by deliver_detail_id
                ) retreatDtl on detail.id = retreatDtl.deliver_detail_id

            </if>
        <where>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="orderId != null and orderId != ''" >
                and detail.order_id = #{orderId}
            </if>
            <if test="orderDetaiId != null and orderDetaiId != ''" >
                and detail.order_detai_id = #{orderDetaiId}
            </if>
            <if test="state != null and state != ''" >
                and detail.state = #{state}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!--发货单明细与出库单明细 关联查询-->
    <select id="findDeliverDetailByOutDetail" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
          deliverDtl.parent_id deliverId,
          deliverDtl.id deliverDtlId,
          deliverDtl.out_detail_id outDtlId,

          outDtl.parent_id outParentId,
          outDtl.state outDtlState
        from vmes_sale_deliver_detail deliverDtl
          left join vmes_warehouse_out_detail outDtl on deliverDtl.out_detail_id = outDtl.id
        <where>
            <if test="deliverId != null and deliverId != ''" >
                and deliverDtl.parent_id = #{deliverId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
    </select>

    <!--清除订单明细与发货明细的关联关系(发货单取消)-->
    <update id="updateOrderDetailByCancelDeliver" parameterType="com.yvan.PageData" >
        update vmes_sale_order_detail set deliver_detail_id = null
        where deliver_detail_id in (
            select id
            from vmes_sale_deliver_detail
            where parent_id = #{deliverId}
        )
    </update>



</mapper>