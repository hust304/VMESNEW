<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_sale_deliver_detail:发货明细 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-12-15
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleDeliverDetailMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_sale_deliver_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_sale_deliver_detail
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_sale_deliver_detail
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		id id,
		parent_id parentId,
		order_id orderId,
		order_detai_id orderDetaiId,
		out_detail_id outDetailId,
		state state,
		product_price productPrice,
		count count,
		last_number lastNumber,
		sum sum,
		date date,
		cuser cuser,
		cdate cdate,
		uuser uuser,
		udate udate,
		remark remark,
		isdisable isdisable
    </sql>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleDeliverDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'saleDeliverDetail','parentId','发货单ID',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','orderId','订单ID',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','orderDetaiId','订单明细ID',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','outDetailId','出单明细id',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','state','发货状态(0:待发货 1:已发货 -1:已取消)',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','productPrice','货品单价',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','count','发货数量',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','lastNumber','结算数量(后计价)',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','sum','发货金额',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','date','发货日期',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','cuser','创建用户id',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','cdate','创建时间',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','uuser','修改用户id',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','udate','修改时间',14, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','remark','备注',15, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','isdisable','是否启用(0:已禁用 1:启用)',16, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail','id','id',0, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'saleDeliverDetail', 'sysOrderCode', '订单编号', 2, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''),'saleDeliverDetail', 'priceType', '计价类型(1:先计价 2:后计价)', 10, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'priceUnit', '计价单位id', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'priceUnitName', '单位', 8, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),

            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productCode', '货品编码', 2, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productName', '货品名称', 3, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productSpec', '规格型号', 4, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productGenre', '货品属性id', 5, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productGenreName', '货品属性', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleDeliverDetail', 'productId', 'productId', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin')

    </insert>

    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_sale_deliver_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="parentIds != null and parentIds != ''" >
                and ${parentIds}
            </if>
        </where>
    </update>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleDeliverDetail">
        select
        id id,
        parent_id parentId,
        order_id orderId,
        order_detai_id orderDetaiId,
        out_detail_id outDetailId,

        product_id productId,
        state state,
        product_price productPrice,
        count count,
        last_number lastNumber,

        sum sum,
        deliver_date deliverDate,
        cuser cuser,
        cdate cdate,
        uuser uuser,

        udate udate,
        remark remark,
        isdisable isdisable
        from vmes_sale_deliver_detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="orderId != null and orderId != ''" >
                and order_id = #{orderId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        detail.id id,
        detail.parent_id parentId,
        detail.order_id orderId,
        detail.order_detai_id orderDetaiId,
        detail.out_detail_id outDetailId,

        detail.product_id productId,
        detail.state state,
        round(ifnull(detail.product_price, 0), 2) productPrice,
        round(ifnull(detail.count, 0), 2) count,
        round(ifnull(detail.last_number, 0), 2) lastNumber,

        round(ifnull(detail.sum, 0), 2) sum,
        DATE_FORMAT(detail.deliver_date,'%Y-%m-%d') deliverDate,
        detail.cuser cuser,
        detail.cdate cdate,
        DATE_FORMAT(detail.cdate,'%Y-%m-%d %T') cdate,
        detail.uuser uuser,

        DATE_FORMAT(detail.udate,'%Y-%m-%d %T') udate,
        detail.remark remark,
        detail.isdisable isdisable,

        saleOrder.sys_code sysOrderCode,
        saleOrder.price_type priceType,

        orderDtl.price_unit priceUnit,
        priceUnit.name priceUnitName,

        <!--货品表-->
        product.code productCode,
        product.name productName,
        product.spec productSpec,
        product.genre productGenre,
        genre.name productGenreName

        from vmes_sale_deliver_detail detail
            left join vmes_sale_order saleOrder on detail.order_id = saleOrder.id
            left join vmes_sale_order_detail orderDtl on detail.order_detai_id = orderDtl.id
            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary priceUnit on orderDtl.price_unit = priceUnit.id
            left join vmes_dictionary genre on product.genre = genre.id
        <where>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="orderId != null and orderId != ''" >
                and detail.order_id = #{orderId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!--发货单明细与出库单明细 关联查询-->
    <select id="findDeliverDetailByOutDetail" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
          deliverDtl.parent_id deliverId,
          deliverDtl.id deliverDtlId
          deliverDtl.out_detail_id outDtlId,

          outDtl.parent_id outParentId,
          outDtl.state outDtlState
        from vmes_sale_deliver_detail deliverDtl
          left join vmes_warehouse_out_detail outDtl on deliverDtl.out_detail_id = outDtl.id
        <where>
            <if test="deliverId != null and deliverId != ''" >
                and deliverDtl.parent_id = #{deliverId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
    </select>

    <!--清除订单明细与发货明细的关联关系(发货单取消)-->
    <update id="updateOrderDetailByCancelDeliver" parameterType="com.yvan.PageData" >
        update vmes_sale_order_detail set deliver_detail_id = null
        where deliver_detail_id in (
            select id
            from vmes_sale_deliver_detail
            where parent_id = #{deliverId}
        )
    </update>



    <insert id="insertColumn1" >
        delete from vmes_column where model_code = 'deliverDetail2Select' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'deliverDetail2Select','parentId','发货单ID',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','orderId','订单ID',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','orderDetaiId','订单明细ID',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','outDetailId','出单明细id',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''), 'deliverDetail2Select', 'productId', 'productId', 0, '1', '0', '1', '0', now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','state','发货状态(0:待发货 1:已发货 -1:已取消)',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''), 'deliverDetail2Select', 'productGenre', '货品属性id', 0, '1', '0', '1', '0', now(), 'admin'),

        (replace(uuid(), '-', ''),'deliverDetail2Select', 'priceType', '计价类型(1:先计价 2:后计价)', 0, '1', '0', '1', '0', now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','cuser','创建用户id',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','cdate','创建时间',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','uuser','修改用户id',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','udate','修改时间',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','remark','备注',0, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','isdisable','是否启用(0:已禁用 1:启用)',0, '1','0','1','0',now(), 'admin'),


        (replace(uuid(), '-', ''),'deliverDetail2Select', 'deliverCode', '发货编码', 1, '1', '1', '1', '0', now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select', 'sysOrderCode', '订单编号', 2, '1', '1', '1', '0', now(), 'admin'),
        (replace(uuid(), '-', ''), 'deliverDetail2Select', 'productCode', '货品编码', 3, '1', '1', '1', '0', now(), 'admin'),
        (replace(uuid(), '-', ''), 'deliverDetail2Select', 'productName', '货品名称', 4, '1', '1', '1', '0', now(), 'admin'),
        (replace(uuid(), '-', ''), 'deliverDetail2Select', 'productSpec', '规格型号', 5, '1', '1', '1', '0', now(), 'admin'),
        (replace(uuid(), '-', ''), 'deliverDetail2Select', 'productGenreName', '货品属性', 7, '1', '1', '1', '0', now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','productPrice','货品单价',8, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','count','发货数量',9, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','sum','发货金额',10, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'deliverDetail2Select','date','发货日期',11, '1','1','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'deliverDetail2Select','id','id',0, '1','0','1','0',now(), 'admin')

    </insert>


    <!-- 自动创建，可以修改 -->
    <select id="getData2SelectListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        detail.id id,
        detail.parent_id parentId,
        detail.order_id orderId,
        detail.order_detai_id orderDetaiId,
        detail.out_detail_id outDetailId,
        detail.product_id productId,

        detail.state state,
        round(ifnull(detail.product_price, 0), 2) productPrice,
        round(ifnull(detail.count, 0), 2) count,
        round(ifnull(detail.sum, 0), 2) sum,
        DATE_FORMAT(detail.deliver_date,'%Y-%m-%d') deliverDate,
        detail.cuser cuser,
        detail.cdate cdate,
        DATE_FORMAT(detail.cdate,'%Y-%m-%d %T') cdate,
        detail.uuser uuser,
        DATE_FORMAT(detail.udate,'%Y-%m-%d %T') udate,
        detail.remark remark,
        detail.isdisable isdisable,

        deliver.deliver_code deliverCode,
        saleOrder.sys_code sysOrderCode,
        saleOrder.price_type priceType,

        <!--货品表-->
        product.code productCode,
        product.name productName,
        product.spec productSpec,
        product.genre productGenre,
        genre.name productGenreName

        from vmes_sale_deliver_detail detail
        left join vmes_sale_deliver deliver on detail.parent_id = deliver.id
        left join vmes_sale_order saleOrder on detail.order_id = saleOrder.id
        left join vmes_product product on detail.product_id = product.id
        left join vmes_dictionary genre on product.genre = genre.id
        <where>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="orderId != null and orderId != ''" >
                and detail.order_id = #{orderId}
            </if>
            <if test="customerId != null and customerId != ''" >
                and deliver.customer_id = #{customerId}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


</mapper>