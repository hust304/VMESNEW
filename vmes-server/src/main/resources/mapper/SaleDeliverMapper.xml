<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_sale_deliver:发货表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-12-15
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleDeliverMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_sale_deliver
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_sale_deliver
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <delete id="deleteTableByDetail" parameterType="com.yvan.PageData">
        delete from vmes_sale_deliver_detail
        where parent_id in (
            select id from vmes_sale_deliver
            <where>
                <if test="companyId != null and companyId != ''" >
                    and company_id = #{companyId}
                </if>
            </where>
        )
    </delete>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleDeliver' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'saleDeliver','companyId','企业ID',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','state','发货状态(0:待发货 1:已发货 -1:已取消)',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','type','发货类型(1:发货 2:送货 3:客户自提)',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','makeId','制单人ID',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','waybillCompany','物流公司',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','waybillCode','物流单号',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','carCode','车牌号',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','date','发货日期',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','cuser','创建用户id',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','cdate','创建时间',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','uuser','修改用户id',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','udate','修改时间',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','remark','备注',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','isdisable','是否启用(0:已禁用 1:启用)',14, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','customer_id','customer_id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','customerName','customerName',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','deliverCode','deliverCode',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','customerCode','customerCode',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','customerTypeName','customerTypeName',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','stateName','stateName',0, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'saleDeliver','customeAddressId','customeAddressId',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','custAddressName','custAddressName',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','custPhone','custPhone',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','custAddress','custAddress',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','totalSum','totalSum',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','parentId','parentId',0, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'saleDeliver','warehouseOutId','warehouseOutId',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','outCode','outCode',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','outCdate','outCdate',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','outTypeName','outTypeName',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','warehouseName','warehouseName',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','outMakeName','outMakeName',0, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'saleDeliver','outState','outState',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','outStateName','outStateName',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleDeliver','priceType','priceType',0, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'saleDeliver','pieceCount','件数',25, '1','1','1','0',now(), 'admin'),


    </insert>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleDeliver">
        select
        id id,
        deliver_code deliverCode,
        company_id companyId,
        customer_id customerId,
        state state,

        type type,
        price_type priceType,
        make_id makeId,
        waybill_company waybillCompany,
        waybill_code waybillCode,

        car_code carCode,
        custome_address_id customeAddressId,
        deliver_date deliverDate,
        total_sum totalSum,
        cuser cuser,

        cdate cdate,
        uuser uuser,
        udate udate,
        remark remark,
        isdisable isdisable,

        mobile mobile,
        linkName linkName,
        piece_count pieceCount
        from vmes_sale_deliver
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        distinct
        deliver.id id,
        deliver.id parentId,
        deliver.deliver_code deliverCode,
        deliver.company_id companyId,
        deliver.customer_id customerId,
        deliver.state state,
        CASE
            WHEN deliver.state = '0' THEN '待发货'
            WHEN deliver.state = '1' THEN '已发货'
            WHEN deliver.state = '-1' THEN '已取消'
        ELSE null
        END stateName,

        deliver.type type,
        CASE
            WHEN deliver.type = '1' THEN '发货'
            WHEN deliver.type = '2' THEN '送货'
            WHEN deliver.type = '3' THEN '客户自提'
        ELSE null
        END typeName,
        deliver.price_type priceType,
        deliver.make_id makeId,
        deliver.waybill_company waybillCompany,
        deliver.waybill_code waybillCode,

        deliver.car_code carCode,
        deliver.custome_address_id customeAddressId,
        DATE_FORMAT(deliver.deliver_date,'%Y-%m-%d') deliverDate,
        round(ifnull(deliver.total_sum, 0),2) totalSum,
        deliver.cuser cuser,

        DATE_FORMAT(deliver.cdate,'%Y-%m-%d %T') cdate,
        deliver.uuser uuser,
        DATE_FORMAT(deliver.udate,'%Y-%m-%d %T') udate,
        deliver.remark remark,
        deliver.isdisable isdisable,

        deliver.linkName custAddressName,
        deliver.mobile custMobile,
        round(ifnull(deliver.piece_count, 0),2) pieceCount,

        makeUser.user_name makeName,
        customer.code customerCode,
        customer.name customerName,
        custType.name customerTypeName,

        <!--获取出库单id-->
        <if test="'true' == isNeedOutId" >
            warehouseOut.warehouseOutId,
            out_.code outCode,
            out_.dept_name outDeptName,
            out_.state outState,
            CASE
            WHEN out_.state = '0' THEN '未完成'
            WHEN out_.state = '1' THEN '已完成'
            WHEN out_.state = '-1' THEN '已取消'
            ELSE null
            END outStateName,

            DATE_FORMAT(out_.cdate,'%Y-%m-%d') outCdate,
            type.name outTypeName,
            warehouse.name warehouseName,
            user.user_name outMakeName,
        </if>
        address.address custAddress

        from vmes_sale_deliver deliver
            left join vmes_sale_deliver_detail detail on deliver.id = detail.parent_id
            left join vmes_sale_order saleOrder on detail.order_id = saleOrder.id
            left join vmes_user makeUser on deliver.make_id = makeUser.id
            left join vmes_customer customer on deliver.customer_id = customer.id
            left join vmes_customer_address address on deliver.custome_address_id = address.id
            left join vmes_dictionary custType on customer.type = custType.id
        <!--获取出库单id-->

            <!--获取出库单id-->
            <if test="'true' == isNeedOutId" >
                left join (
                    select a.parent_id deliverId,b.parent_id warehouseOutId
                    from vmes_sale_deliver_detail a
                      left join vmes_warehouse_out_detail b on a.out_detail_id = b.id
                    group by a.parent_id,b.parent_id
                ) warehouseOut on deliver.id = warehouseOut.deliverId
                left join vmes_warehouse_out out_ on warehouseOut.warehouseOutId = out_.id
                left join vmes_dictionary type on out_.type = type.id
                left join vmes_warehouse warehouse on out_.warehouse_id = warehouse.id
                left join vmes_user user on out_.make_id = user.id
            </if>
            left join vmes_product product on detail.product_id = product.id


            <if test="'true' == isCanRetreat" >
                left join (
                    select
                        tab.parent_id deliverId,
                        sum(nowDeliverCount) nowDeliverCount
                    from (
                        select
                            deliverDetail.id,
                            deliverDetail.parent_id,
                            IFNULL(deliverDetail.order_count,0)-sum(IFNULL(retreatDetail.order_count,0)) nowDeliverCount,
                            IFNULL(deliverDetail.order_count,0) deliverCount,
                            sum(IFNULL(retreatDetail.order_count,0)) retreatCount
                        from vmes_sale_deliver_detail deliverDetail
                        left join vmes_sale_retreat_detail retreatDetail on deliverDetail.id = retreatDetail.deliver_detail_id and  <![CDATA[ retreatDetail.state <> '-1' ]]>
                        group by deliverDetail.id
                    ) tab
                    group by tab.parent_id
                ) deliverDtl on deliver.id = deliverDtl.deliverId
            </if>

        <where>

            <if test="'true' == isCanRetreat" >
                and <![CDATA[ deliverDtl.nowDeliverCount > 0  ]]>
            </if>
            <if test="customerId != null and customerId != ''" >
                and deliver.customer_id = #{customerId}
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''" >
                and deliver.company_id = #{currentCompanyId}
            </if>
            <if test="deliverCode != null and deliverCode != ''" >
                and deliver.deliver_code = #{deliverCode}
            </if>
            <if test="state != null and state != ''" >
                and deliver.state = #{state}
            </if>
            <if test="type != null and type != ''" >
                and deliver.type = #{type}
            </if>
            <if test="priceType != null and priceType != ''">
                and deliver.price_type = #{priceType}
            </if>

            <if test="waybillCompany != null and waybillCompany != ''">
                and deliver.waybill_company LIKE CONCAT(CONCAT('%', #{waybillCompany}),'%')
            </if>
            <if test="waybillCode != null and waybillCode != ''">
                and deliver.waybill_code LIKE CONCAT(CONCAT('%', #{waybillCode}),'%')
            </if>
            <if test="carCode != null and carCode != ''">
                and deliver.car_code LIKE CONCAT(CONCAT('%', #{carCode}),'%')
            </if>

            <!--发货明细查询条件-->
            <if test="customerName != null and customerName != ''">
                and customer.name LIKE CONCAT(CONCAT(#{customerName}),'%')
            </if>
            <if test="orderCode != null and orderCode != ''">
                and saleOrder.sys_code = #{orderCode}
            </if>
            <if test="detailState != null and detailState != ''">
                and detail.state = #{detailState}
            </if>
            <if test="productName != null and productName != ''">
                and product.name LIKE CONCAT(CONCAT(#{productName}),'%')
            </if>

            <!--模块查询条件-->
            <if test="customerName != null and customerName != ''">

            </if>
            <if test="deliverDateBegin != null and deliverDateBegin != ''">
                <![CDATA[ and deliver.deliver_date >= #{deliverDateBegin} ]]>
            </if>
            <if test="deliverDateEnd != null and deliverDateEnd != ''">
                <![CDATA[ and deliver.deliver_date <= #{deliverDateEnd} ]]>
            </if>

            <!--sumStateQueryStr 结算状态sql查询语句-->
            <if test="sumStateQueryStr != null and sumStateQueryStr != ''" >
                and ${sumStateQueryStr}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>

        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>