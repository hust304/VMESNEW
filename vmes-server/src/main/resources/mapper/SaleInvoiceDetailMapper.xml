<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_sale_invoice_detail:发票明细 Mapper.xml
创建人：陈刚 自动创建
创建时间：2019-01-08
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleInvoiceDetailMapper">
    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_sale_invoice_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_sale_invoice_detail
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_sale_invoice_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="parentIds != null and parentIds != ''" >
                and parent_id in (${parentIds})
            </if>
        </where>
    </update>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleInvoiceDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'id', 'id', 0, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'parentId', '发票ID', 1, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'orderDetaiId', '订单明细ID', 2, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'productId', '货品id', 3, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'productCode', '货品编码', 4, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'productName', '货品名称', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'productSpec', '规格型号', 6, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'productGenreName', '货品属性', 7, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'productGenre', '货品属性id', 7, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'priceUnit', '单位id', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'priceUnitName', '单位', 8, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'count', '开票数量', 9, '1', '1', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'productPrice', '货品单价', 10, '1', '1', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'sum', '发票金额', 11, '1', '1', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'stateName', '状态', 12, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'state', '状态id', 12, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'cuser', '创建用户id', 13, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'cdate', '创建时间', 14, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'uuser', '修改用户id', 15, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'udate', '修改时间', 16, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'remark', '备注', 17, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin'),
            (replace(uuid(), '-', ''), 'saleInvoiceDetail', 'isdisable', '是否启用(0:已禁用 1:启用)', 18, '1', '0', '1', '0', '2019-1-11 15:01:13', 'admin')


    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleInvoiceDetail">
        select
        id id,
        parent_id parentId,
        order_detail_id orderDetaiId,
        product_id productId,
        price_unit priceUnit,

        count count,
        product_price productPrice,
        sum sum,
        state state,
        cuser cuser,

        cdate cdate,
        uuser uuser,
        udate udate,
        remark remark,
        isdisable isdisable
        from vmes_sale_invoice_detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="state != null and state != ''" >
                and state = #{state}
            </if>


            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        invoiceDtl.id id,
        invoiceDtl.parent_id parentId,
        invoiceDtl.order_detail_id orderDetaiId,
        invoiceDtl.product_id productId,
        invoiceDtl.price_unit priceUnit,

        round(ifnull(invoiceDtl.count, 0), 2) count,
        round(ifnull(invoiceDtl.product_price, 0), 2) productPrice,
        round(ifnull(invoiceDtl.sum, 0), 2) sum,
        invoiceDtl.state state,
        CASE
        WHEN invoiceDtl.state = '0' THEN '待开票'
        WHEN invoiceDtl.state = '1' THEN '已开票'
        WHEN invoiceDtl.state = '-1' THEN '已取消'
        ELSE null
        END stateName,
        invoiceDtl.cuser cuser,

        DATE_FORMAT(invoiceDtl.cdate,'%Y-%m-%d %T') cdate,
        invoiceDtl.uuser uuser,
        DATE_FORMAT(invoiceDtl.udate,'%Y-%m-%d %T') udate,
        invoiceDtl.remark remark,
        invoiceDtl.isdisable isdisable,

        <!--货品表-->
        priceUnit.name priceUnitName,
        product.code productCode,
        product.name productName,
        product.spec productSpec,
        product.genre productGenre,
        genre.name productGenreName

        from vmes_sale_invoice_detail invoiceDtl
        left join vmes_product product on invoiceDtl.product_id = product.id
        left join vmes_dictionary priceUnit on invoiceDtl.price_unit = priceUnit.id
        left join vmes_dictionary genre on product.genre = genre.id

        <where>
            <if test="ids != null and ids != ''" >
                and id in (${ids})
            </if>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="state != null and state != ''" >
                and state = #{state}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


</mapper>