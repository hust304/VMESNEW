<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：订单明细审核 Mapper.xml
创建人：陈刚
创建时间：2018-12-11
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleOrderAuditMapper">
    <select id="findOrderDetaiListByAudit" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id id,
            detail.parent_id parentId,
            detail.state state,
            detail.file_url fileUrl,
            detail.deliver_date deliverDate,

            detail.order_count orderCount,
            detail.order_unit orderUnit,
            detail.product_count productCount,
            detail.product_unit productUnit,
            detail.price_count priceCount,

            detail.price_unit priceUnit,
            detail.product_id productId,
            detail.product_price productPrice,
            detail.product_sum productSum,
            detail.is_lock_warehouse isLockWarehouse,

            detail.is_need_produce isNeedProduce,
            detail.lock_count lockCount,
            detail.need_deliver_count needDeliverCount,
            detail.lock_date lockDate,
            detail.plan_detail_id planDetailId,

            detail.cuser cuser,
            detail.cdate cdate,
            detail.uuser uuser,
            detail.udate udate,
            detail.remark remark,

            detail.isdisable isdisable,

            customer.id customerIdByCuser,
            CASE
            WHEN customer.id is not null THEN 'Y'
            ELSE 'N'
            END isCustomerByCuser,

            <!--货品表 vmes_product-->
            round(ifnull(product.stock_count, 0), 2) prodStockCount,
            round(ifnull(product.lock_count, 0), 2) prodLockCount,
            round((ifnull(product.stock_count, 0) - ifnull(product.lock_count, 0)), 2) allowStockCount,

            <!--货品计价单位表 vmes_product_unit-->
            productUnit.product_price prodUnitProdPrice,
            productUnit.np_formula prodUnitFormulaN2p,
            productUnit.pn_formula prodUnitFormulaP2N

        from vmes_sale_order_detail detail
            left join vmes_sale_order parent on detail.parent_id = parent.id
            left join vmes_customer customer on parent.cuser = customer.id
            left join vmes_product product on detail.product_id = product.id
            left join vmes_product_unit productUnit on (detail.product_id = productUnit.product_id and detail.order_unit = productUnit.unit)

        <where>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="isLockWarehouse != null and isLockWarehouse != ''" >
                and detail.is_lock_warehouse = #{isLockWarehouse}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleOrderDetail' ;
        insert into vmes_column (
            id,model_code,title_key,title_name,serial_number,
            isdisable,ishide,isedit,ismust,cdate,
            cuser
        ) VALUES
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'priceCount', 'priceCount', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'parentId', '订单id', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'id', 'id', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productId', '货品id', 1, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productCode', '货品编码', 2, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productName', '货品名称', 3, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productSpec', '规格型号', 4, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productGenre', '货品属性id', 5, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productGenreName', '货品属性', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productType', '货品类型id', 6, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'orderUnitName', '单位', 7, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'orderUnit', '单位id', 7, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'orderCount', '订购数量', 7, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productCount', '货品数量(计量数量)', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productUnitName', '计量单位', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productUnit', '计量单位id', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'priceUnitName', '计价单位', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'priceUnit', '计价单位id', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productPrice', '单价', 11, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'productSum', '金额', 12, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'prodStockCount', '库存数量', 14, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'allowStockCount', '库存可用数量', 15, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'prodLockCount', '库存锁定数量', 16, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'deliverDate', '约定交期', 17, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'fileUrl', '附件地址', 18, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'remark', '备注', 19, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'stateName', '状态', 20, '1', '0', '1', '0', '2018-12-6 09:25:40', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'state', '明细状态id', 20, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'cuser', '创建用户id', 21, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'cdate', '创建时间', 22, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'uuser', '修改用户id', 23, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'udate', '修改时间', 24, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'isdisable', '是否启用(0:已禁用 1:启用)', 25, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'isLockWarehouse', '是否锁定仓库(0:无锁定 1:锁定)', 26, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'lockCount', '锁定货品数量(计量单位)', 27, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'needDeliverCount', '锁定货品数量', 27, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'lockDate', '锁定开始时间', 28, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'isneedproduce', '是否需要生产(0:无需 1:需要 库存不够)', 29, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'deliverDetailId', '发货明细ID', 30, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'planDetailId', '生产计划明细ID', 31, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'prodUnitFormulaN2p', 'prodUnitFormulaN2p', 32, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'prodUnitFormulaP2N', 'prodUnitFormulaP2N', 33, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin')
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockStock', 'versionLockCount', 'versionLockCount', 34, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin')

    </insert>

    <select id="findPageListByLockStock" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id id,
            detail.parent_id parentId,
            detail.state state,
            detail.file_url fileUrl,
            detail.deliver_date deliverDate,

            round(ifnull(detail.order_count, 0), 2) orderCount,
            detail.order_unit orderUnit,
            detail.product_count productCount,
            detail.product_unit productUnit,
            detail.price_count priceCount,

            detail.price_unit priceUnit,
            detail.product_id productId,
            detail.product_price productPrice,
            detail.product_sum productSum,
            detail.is_lock_warehouse isLockWarehouse,

            detail.is_need_produce isNeedProduce,
            detail.lock_date lockDate,
            detail.lock_count lockCount,
            detail.plan_detail_id planDetailId,
            detail.cuser cuser,

            detail.cdate cdate,
            detail.uuser uuser,
            detail.udate udate,
            detail.remark remark,
            detail.isdisable isdisable,
            detail.version_lock_count versionLockCount,

            <!--货品计价单位表 vmes_product_unit-->
            productUnit.np_formula prodUnitFormulaN2p,
            productUnit.pn_formula prodUnitFormulaP2N,

            <!--货品表 vmes_product-->
            product.code productCode,
            product.name productName,
            product.spec productSpec,
            orderUnit.name orderUnitName,
            genre.name productGenreName,

            round(ifnull(product.stock_count, 0), 2) prodStockCount,
            round(ifnull(product.lock_count, 0), 2) prodLockCount,
            round((ifnull(product.stock_count, 0) - ifnull(product.lock_count, 0)), 2) allowStockCount,
            '' needDeliverCount
        from vmes_sale_order_detail detail
            left join vmes_product_unit productUnit on (detail.product_id = productUnit.product_id and detail.order_unit = productUnit.unit)
            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary orderUnit on detail.order_unit = orderUnit.id
            left join vmes_dictionary genre on product.genre = genre.id
        <where>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="detailIds != null and detailIds != ''" >
                and detail.id in (${detailIds})
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>
</mapper>