<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：订单查询汇总 Mapper.xml
销售-开票管理-申请开票-(勾选订单明细)-弹出界面查询
创建人：陈刚 自动创建
创建时间：2019-01-11
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleOrderByInvoiceMapper">
    <!--view_sale_order_by_invoice 订单查询视图-->
    <!--price_type:计价类型(1:先计价 2:后计价)-->
    <!--1:先计价 订单可以随时开票-->
    <!--2:后计价 订单必须是发货已经完成-->
    <select id="findListPageOrderByInvoice" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            saleOrder.id id,
            saleOrder.id parentId,
            saleOrder.company_id companyId,
            saleOrder.order_number orderNumber,
            saleOrder.sys_code sysCode,
            saleOrder.receipt_type receiptType,
            CASE
            WHEN saleOrder.receipt_type = '1' THEN '不开票'
            WHEN saleOrder.receipt_type = '2' THEN '普通发票'
            WHEN saleOrder.receipt_type = '3' THEN '增值税发票'
            ELSE null
            END receiptTypeName,

            saleOrder.price_type priceType,
            saleOrder.state state,
            CASE
            WHEN saleOrder.state = '0' THEN '待提交'
            WHEN saleOrder.state = '1' THEN '待审核'
            WHEN saleOrder.state = '2' THEN '待出库'
            WHEN saleOrder.state = '3' THEN '待发货'
            WHEN saleOrder.state = '4' THEN '已发货'
            WHEN saleOrder.state = '5' THEN '已完成'
            WHEN saleOrder.state = '-1' THEN '已取消'
            ELSE null
            END stateName,
            saleOrder.make_id makeId,
            saleOrder.customer_id customerId,
            DATE_FORMAT(saleOrder.order_date,'%Y-%m-%d') orderDate,

            round(ifnull(saleOrder.total_sum, 0),2) totalSum,
            round(ifnull(saleOrder.discount_sum, 0),2) discountSum,
            round(ifnull(saleOrder.order_sum, 0),2) orderSum,
            round(ifnull(saleOrder.advance_sum, 0),2) advanceSum,
            saleOrder.cuser cuser,

            DATE_FORMAT(saleOrder.cdate,'%Y-%m-%d %T') cdate,
            saleOrder.uuser uuser,
            DATE_FORMAT(saleOrder.udate,'%Y-%m-%d %T') udate,
            saleOrder.remark remark,
            saleOrder.isdisable isdisable,
            DATE_FORMAT(saleOrder.expect_date,'%Y-%m-%d') expectDate,

            makeUser.user_name makeName,
            customer.name customerName,

            <!--Y:已生成开票订单 N:未生成开票订单-->
        <!--
            CASE
            WHEN orderInvoice.order_id is null THEN 'N'
            WHEN orderInvoice.order_id is not null THEN 'Y'
            ELSE 'N'
            END isOrderInvoice,
        -->
            <!--已生成开票订单ID-->
            orderInvoice.order_id invoiceOrderId,

            <!--已收款-->
            round(ifnull(receive.receive_sum, 0), 2) receiveSum,
            <!--已开票金额-->
            round(ifnull(invoice.invoice_sum, 0), 2) invoiceSum,
            <!--已发货金额-->
            round(ifnull(deliver.deliver_sum, 0), 2) deliverSum
        from view_sale_order_by_invoice saleOrder
        left join vmes_customer customer on saleOrder.customer_id = customer.id
        left join vmes_user makeUser on saleOrder.make_id = makeUser.id

        <!--付款明细表汇总 view_sale_receive_detail-->
        left join view_sale_receive_detail receive on saleOrder.id = receive.order_id

        <!--开票明细表汇总(1:已发货) view_sale_invoice_detail-->
        left join view_sale_invoice_detail invoice on saleOrder.id = receive.order_id

        <!--发货明细表汇总(1:已发货) vmes_sale_deliver_detail-->
        left join (
            select order_id, sum(sum) deliver_sum
            from vmes_sale_deliver_detail
            where state = '1'
            group by order_id
        ) deliver on saleOrder.id = deliver.order_id

        <!--已生成开票订单查询-->
        left join (
            select b.parent_id order_id
            from vmes_sale_invoice_detail a
            left join vmes_sale_order_detail b on a.order_detail_id = b.id
            where a.state in ('0','1')
            group by b.parent_id
        ) orderInvoice on saleOrder.id = orderInvoice.order_id
        <where>
            <if test="currentCompanyId != null and currentCompanyId != ''" >
                and saleOrder.company_id = #{currentCompanyId}
            </if>
            <if test="state != null and state != ''" >
                and saleOrder.state = #{state}
            </if>
            <if test="sysCode != null and sysCode != ''" >
                and saleOrder.sys_code = #{sysCode}
            </if>
            <if test="orderNumber != null and orderNumber != ''" >
                and saleOrder.order_number = #{orderNumber}
            </if>
            <if test="customerName != null and customerName != ''">
                and customer.name LIKE CONCAT(CONCAT(#{customerName}),'%')
            </if>
        </where>

    </select>

</mapper>