<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：订单明细查询汇总 Mapper.xml
销售-订单提交-订单变更
创建人：陈刚
创建时间：2019-03-05
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleOrderDetailByChangeMapper">
    <select id="listOrderDetaiByChange" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            orderDtl.id id,
            orderDtl.parent_id parentId,
            orderDtl.state state,
            CASE
                WHEN orderDtl.state = '0' THEN '待提交'
                WHEN orderDtl.state = '1' THEN '待审核'
                WHEN orderDtl.state = '2' THEN '待生产'
                WHEN orderDtl.state = '3' THEN '待出库'
                WHEN orderDtl.state = '4' THEN '待发货'
                WHEN orderDtl.state = '5' THEN '已完成'
                WHEN orderDtl.state = '-1' THEN '已取消'
            ELSE null
            END stateName,
            orderDtl.file_url fileUrl,
            orderDtl.deliver_date deliverDate,

            orderDtl.order_count orderCount,
            orderDtl.order_unit orderUnit,
            orderDtl.product_count productCount,
            orderDtl.product_unit productUnit,
            orderDtl.price_count priceCount,

            orderDtl.price_unit priceUnit,
            orderDtl.product_id productId,
            orderDtl.product_price productPrice,
            orderDtl.product_sum productSum,
            orderDtl.is_lock_warehouse isLockWarehouse,

            orderDtl.is_need_produce isNeedProduce,
            orderDtl.lock_count lockCount,
            orderDtl.need_deliver_count needDeliverCount,
            orderDtl.lock_date lockDate,
            orderDtl.plan_detail_id planDetailId,

            orderDtl.cuser cuser,
            orderDtl.cdate cdate,
            orderDtl.uuser uuser,
            orderDtl.udate udate,
            orderDtl.remark remark,

            orderDtl.isdisable isdisable,
            orderDtl.version_lock_count versionLockCount,

            <!--货品表-->
            product.code productCode,
            product.name productName,
            product.spec productSpec,
            product.genre productGenre,
            product.type productType,
            round(ifnull(product.stock_count, 0), 2) stockCount,
            orderUnit.name orderUnitName,
            genre.name productGenreName,
            prodUnitPrice.np_formula n2pFormula,
            prodUnitPrice.pn_formula p2nFormula,


            round(ifnull(deliverDtl.order_count, 0),2) endDeliverCount,
            '' newOrderCount,
            '' newNeedDeliverCount

        from vmes_sale_order_detail orderDtl
            left join vmes_product product on orderDtl.product_id = product.id
            left join vmes_dictionary orderUnit on orderDtl.order_unit = orderUnit.id
            left join vmes_dictionary genre on product.genre = genre.id
            left join vmes_product_unit prodUnitPrice on (orderDtl.product_id = prodUnitPrice.product_id and orderDtl.order_unit = prodUnitPrice.unit and prodUnitPrice.isdisable = '1')
            left join (
                select order_detai_id, sum(order_count) order_count
                from vmes_sale_deliver_detail
                where state = '1'
                group by order_detai_id
            ) deliverDtl on orderDtl.id = deliverDtl.order_detai_id
        <where>
            <if test="parentId != null and parentId != ''" >
                and orderDtl.parent_id = #{parentId}
            </if>
            <if test="queryState != null and queryState != ''" >
                and orderDtl.state in (${queryState})
            </if>
        </where>
    </select>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleOrderDetailByChange';
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'id', 'id', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'parentId', '订单id', 1, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'state', '明细状态id', 2, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'fileUrl', '附件地址', 3, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'deliverDate', '约定交期', 4, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'orderCount', '订购数量', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'orderUnit', '单位id', 6, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'orderUnitName', '单位', 6, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productCount', '货品数量(计量数量)', 7, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productUnit', '计量单位id', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'priceCount', '货品数量(计价数量)', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'priceUnit', '计价单位id', 10, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productId', '货品id', 11, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productPrice', '单价', 12, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productSum', '金额', 13, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'isLockWarehouse', '是否锁定仓库(0:无锁定 1:锁定)', 14, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'isneedproduce', '是否需要生产(0:无需 1:需要 库存不够)', 15, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'lockCount', '锁定货品数量(计量单位)', 16, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'needDeliverCount', '可发货数量', 17, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'lockDate', '锁定开始时间', 18, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'planDetailId', '生产计划明细ID', 19, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'cuser', '创建用户id', 20, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'cdate', '创建时间', 21, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'uuser', '修改用户id', 22, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'udate', '修改时间', 23, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'remark', '订单明细备注', 24, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'isdisable', '是否启用(0:已禁用 1:启用)', 25, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productCode', '货品编码', 26, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productName', '货品名称', 27, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productSpec', '规格型号', 28, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productGenre', '货品属性id', 29, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productGenreName', '货品属性', 29, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'productType', '货品类型id', 30, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'endDeliverCount', '发货完成数量', 31, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'newOrderCount', '变更订购数量', 32, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'newNeedDeliverCount', '变更锁定货品数量', 32, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'stateName', '状态', 2, '1', '0', '1', '0', '2018-12-6 09:25:40', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'p2nFormula', 'p2nFormula', 34, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'n2pFormula', 'n2pFormula', 35, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByChange', 'stockCount', '库存数量', 36, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
    </insert>


</mapper>