<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_sale_order_detail:订单明细(产品锁定数量) Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-12-05
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleOrderDetailByLockCountMapper">
    <select id="findListOrderDetailByLockCount" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id id,
            detail.parent_id parentId,
            detail.state state,
            CASE
                WHEN detail.state = '0' THEN '待提交'
                WHEN detail.state = '1' THEN '待审核'
                WHEN detail.state = '2' THEN '待生产'
                WHEN detail.state = '3' THEN '待出库'
                WHEN detail.state = '4' THEN '待发货'
                WHEN detail.state = '5' THEN '已完成'
                WHEN detail.state = '-1' THEN '已取消'
            ELSE null
            END stateName,
            detail.file_url fileUrl,
            DATE_FORMAT(detail.deliver_date,'%Y-%m-%d') deliverDate,

            round(ifnull(detail.order_count, 0),2) orderCount,
            detail.order_unit orderUnit,
            round(ifnull(detail.product_count, 0),2) productCount,
            detail.product_unit productUnit,
            detail.price_count priceCount,

            detail.price_unit priceUnit,
            detail.product_id productId,
            round(ifnull(detail.product_price, 0),2) productPrice,
            round(ifnull(detail.product_sum, 0),2) productSum,
            detail.is_lock_warehouse isLockWarehouse,

            detail.is_need_produce isNeedProduce,
            <!--round(ifnull(detail.lock_count, 0), 2) lockCount,-->
            <!--round(ifnull(detail.need_deliver_count, 0), 2) needDeliverCount,-->
            detail.lock_date lockDate,
            detail.plan_detail_id planDetailId,

            detail.cuser cuser,
            DATE_FORMAT(detail.cdate,'%Y-%m-%d %T') cdate,
            detail.uuser uuser,
            DATE_FORMAT(detail.udate,'%Y-%m-%d %T') udate,
            detail.remark remark,
            detail.isdisable isdisable,
            detail.version_lock_count versionLockCount,

            orderUnit.name orderUnitName,

            <!--货品表-->
            product.code sysProductCode,
            product.source_code custProductCode,
            CASE
            WHEN product.source_code is null THEN product.code
            WHEN product.source_code is not null THEN product.source_code
            ELSE null
            END productCode,
            product.name productName,
            product.spec productSpec,
            product.genre productGenre,
            genre.name productGenreName,
            product.type productType,
            product.property productProperty,

            <!--(单据)货品单位-->
            prodUnitPrice.np_formula n2pFormula,
            prodUnitPrice.pn_formula p2nFormula,

            prodUnitPrice.n2p_is_scale n2pIsScale,
            prodUnitPrice.n2p_decimal_count n2pDecimalCount,

            prodUnitPrice.p2n_is_scale p2nIsScale,
            prodUnitPrice.p2n_decimal_count p2nDecimalCount,

            <!--(计量单位)货品数量 -->
            round(ifnull(product.stock_count, 0), 2) stockCount, <!--库存数量-->
            round(ifnull(product.lock_count, 0), 2) productLockCount, <!--货品锁库数量-->
            round(ifnull(detail.lock_count, 0), 2) lockCount, <!--(销售订单)货品锁库数量-->
            <!--可用库存数量: 库存数量 - 货品锁库数量 + (销售订单)货品锁库数量 allowStockCount -->
            round((ifnull(product.stock_count, 0) - ifnull(product.lock_count, 0) + ifnull(detail.lock_count, 0)),2) allowStockCount,

            <!--(订单单位)货品数量 -->
            <!--退货明细汇总-->
            round(ifnull(retreatDtl.retreatCount, 0), 2) retreatCount,
            <!--deliverCount 发货完成数量 := 已发货数量 - 已退货数量-->
            round((ifnull(deliver.deliverCount, 0) - ifnull(retreatDtl.retreatCount, 0)), 2) deliverCount,

            <!--java类获取数据(maxLockCount,editLockCount)-->
            '' maxLockCount, <!--可锁数量-->
            '' editLockCount

        from vmes_sale_order_detail detail
            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary genre on product.genre = genre.id
            left join vmes_dictionary orderUnit on detail.order_unit = orderUnit.id
            left join vmes_product_unit prodUnitPrice on (detail.product_id = prodUnitPrice.product_id and detail.order_unit = prodUnitPrice.unit)
            <!--发货明细汇总-->
            left join (
                select
                    order_detai_id,
                    sum(order_count) deliverCount,
                    sum(sum) deliverSum
                from vmes_sale_deliver_detail
                where state = '1'
                group by order_detai_id
            ) deliver on detail.id = deliver.order_detai_id
            <!--根据订单明细id汇总查询(退货明细) 已完成退货数量-->
            left join (
                select order_detail_id, sum(order_count) retreatCount
                from vmes_sale_retreat_detail
                where state = '3'
                group by order_detail_id
            ) retreatDtl on detail.id = retreatDtl.order_detail_id

        <where>
            <if test="ids != null and ids != ''" >
                and detail.id in (${ids})
            </if>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="state != null and state != ''" >
                and detail.state = #{state}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <insert id="insertColumn">
        delete from vmes_column where model_code = 'saleOrderDetailByLockCount';
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'id', 'id', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'parentId', '订单id', 1, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'state', '明细状态id', 2, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'stateName', '状态', 2, '1', '0', '1', '0', '2018-12-6 09:25:40', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'fileUrl', '附件地址', 3, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'deliverDate', '约定交期', 4, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'orderCount', '订购数量', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'orderUnit', '单位id', 6, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'orderUnitName', '单位', 6, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productCount', '货品数量(计量数量)', 7, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productUnit', '计量单位id', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productUnitName', '计量单位', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'priceCount', '货品数量(计价数量)', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'priceUnit', '计价单位id', 10, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'priceUnitName', '计价单位', 10, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productId', '货品id', 11, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productPrice', '单价', 12, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productSum', '金额', 13, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'isLockWarehouse', '是否锁定仓库(0:无锁定 1:锁定)', 14, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'isneedproduce', '是否需要生产(0:无需 1:需要 库存不够)', 15, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'lockCount', '已锁库', 16, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'editLockCount', '修改锁库', 16, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'lockDate', '锁定开始时间', 17, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'planDetailId', '生产计划明细ID', 18, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'cuser', '创建用户id', 19, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'cdate', '创建时间', 20, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'uuser', '修改用户id', 21, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'udate', '修改时间', 22, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'remark', '备注', 23, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'isdisable', '是否启用(0:已禁用 1:启用)', 24, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productCode', '货品编码', 25, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productName', '货品名称', 26, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productSpec', '规格型号', 27, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productGenre', '货品属性id', 28, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productGenreName', '货品属性', 28, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productType', '货品类型id', 29, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),


        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'deliverCount', 'deliverCount', 30, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productLockCount', 'productLockCount', 30, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'stockCount', '库存数量(计量单位)', 31, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'allowStockCount', '可用库存数量', 32, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'p2nFormula', 'p2nFormula', 33, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'n2pFormula', 'n2pFormula', 33, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'maxLockCount', '可锁数量', 34, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin')
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'versionLockCount', 'versionLockCount', 36, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'n2pIsScale', 'n2p:是否需要四舍五入', 37, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'n2pDecimalCount', 'n2p:保留小数位数', 38, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'p2nIsScale', 'p2n:是否需要四舍五入', 39, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'p2nDecimalCount', 'p2n:保留小数位数', 40, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByLockCount', 'productProperty', '自定义属性', 41, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),

    </insert>




</mapper>