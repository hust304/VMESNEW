<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：销售订单明细查询 Mapper.xml
生产-生产计划管理-(勾选订单明细)-弹出界面查询
创建人：陈刚
创建时间：2020-02-29
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleOrderDetailByProducePlanMapper">
    <insert id="saleOrderDetailByProducePlan">
        delete from vmes_column where model_code = 'saleOrderDetailByProducePlan';
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'id', 'id', 0, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'parentId', '订单id', 1, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'state', '明细状态id', 2, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'productId', '货品id', 3, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'orderUnit', '单位id', 4, '1', '0', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'deliverDate', '约定交期', 5, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'remark', '备注', 6, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'orderCount', '订购数量', 7, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'lockCount', '锁定货品数量', 8, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'stateName', '状态', 9, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'sysCode', '订单编号', 17, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'producePlanName', '排产状态', 17, '1', '1', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'productCode', '货品编码', 10, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'productName', '货品名称', 11, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'productSpec', '规格型号', 12, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'productProperty', '自定义属性', 16, '1', '1', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'productGenre', '货品属性id', 13, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'orderUnitName', '单位', 15, '1', '1', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'producePlanCount', '计划数量', 18, '1', '1', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'p2nFormula', 'p2nFormula', 20, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'p2nIsScale', 'p2n:是否需要四舍五入', 21, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'p2nDecimalCount', 'p2n:保留小数位数', 22, '1', '0', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'n2pFormula', 'n2pFormula', 23, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'n2pIsScale', 'n2p:是否需要四舍五入', 24, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'n2pDecimalCount', 'n2p:保留小数位数', 25, '1', '0', '1', '0', now(), 'admin'),

            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'safetyCount', '安全库存', 26, '1', '0', '1', '0', now(), 'admin'),
            (replace(uuid(), '-', ''), 'saleOrderDetailByPurchasePlan', 'allowStockCount', '库存数量', 27, '1', '1', '1', '0', now(), 'admin'),
    </insert>

    <select id="listOrderDetaiByProducePlan" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            orderDtl.id id,
            orderDtl.parent_id parentId,
            orderDtl.state state,
            orderDtl.product_id productId,
            orderDtl.order_unit orderUnit,

            DATE_FORMAT(orderDtl.deliver_date,'%Y-%m-%d') deliverDate,
            orderDtl.remark remark,
            round(ifnull(orderDtl.order_count, 0),2) orderCount,
            round(ifnull(orderDtl.lock_count, 0),2) lockCount,
            CASE
                WHEN orderDtl.state = '0' THEN '待提交'
                WHEN orderDtl.state = '1' THEN '待审核'
                WHEN orderDtl.state = '2' THEN '待生产'
                WHEN orderDtl.state = '3' THEN '待出库'
                WHEN orderDtl.state = '4' THEN '待发货'
                WHEN orderDtl.state = '5' THEN '已完成'
                WHEN orderDtl.state = '-1' THEN '已取消'
            ELSE null
            END stateName,
            saleOrder.sys_code sysCode,

            CASE
            WHEN planDtlChild.plan_dtl_id is not null THEN '已排产'
            WHEN planDtlChild.plan_dtl_id is null or CHAR_LENGTH(TRIM(planDtlChild.plan_dtl_id)) = 0 '未排产'
            ELSE null
            END producePlanName,

            <!--货品表-->
            product.code sysProductCode,
            product.source_code custProductCode,
            CASE
            WHEN product.source_code is null THEN product.code
            WHEN product.source_code is not null THEN product.source_code
            ELSE null
            END productCode,
            product.name productName,
            product.spec productSpec,
            product.property productProperty,
            product.genre productGenre,
            round(ifnull(product.safety_count, 0), 2) safetyCount,

            <!--(单据)货品单位-->
            prodUnitPrice.np_formula n2pFormula,
            prodUnitPrice.n2p_is_scale n2pIsScale,
            prodUnitPrice.n2p_decimal_count n2pDecimalCount,

            prodUnitPrice.pn_formula p2nFormula,
            prodUnitPrice.p2n_is_scale p2nIsScale,
            prodUnitPrice.p2n_decimal_count p2nDecimalCount,

            orderUnit.name orderUnitName,

            <!--可用库存数量: 库存数量 - 货品锁库数量 + (销售订单)货品锁库数量 allowStockCount -->
            round((ifnull(product.stock_count, 0) - ifnull(product.lock_count, 0) + ifnull(orderDtl.lock_count, 0)),2) allowStockCount,

            <!--java 类实现(producePlanCount) -->
            '' producePlanCount

        from vmes_sale_order_detail orderDtl
            left join vmes_sale_order saleOrder on orderDtl.parent_id = saleOrder.id
            left join vmes_customer customer on saleOrder.customer_id = customer.id

            left join vmes_product product on orderDtl.product_id = product.id
            left join vmes_dictionary orderUnit on orderDtl.order_unit = orderUnit.id
            left join vmes_dictionary genre on product.genre = genre.id
            left join vmes_product_unit prodUnitPrice on (orderDtl.product_id = prodUnitPrice.product_id and orderDtl.order_unit = prodUnitPrice.unit)
            <!--vmes_produce_plan_detail_child (销售订单明细,生产计划明细)关联关系-->
            left join vmes_produce_plan_detail_child planDtlChild on orderDtl.id = planDtlChild.sale_order_dtl_id
        <where>
            <if test="sysCode != null and sysCode != ''" >
                and saleOrder.sys_code = #{sysCode}
            </if>
            <if test="customerName != null and customerName != ''">
                and customer.name LIKE CONCAT(CONCAT(#{customerName}),'%')
            </if>

            <!--isBindOrderProduce:true 已排产  -->
            <if test="'true' == isBindOrderProduce" >
                and planDtlChild.plan_dtl_id is not null
            </if>
            <!--isBindOrderProduce:false 未排产  -->
            <if test="'false' == isBindOrderProduce" >
                and (planDtlChild.plan_dtl_id is null or CHAR_LENGTH(TRIM(planDtlChild.plan_dtl_id)) = 0)
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

</mapper>