<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：订单明细查询汇总 Mapper.xml
创建人：陈刚
创建时间：2018-12-27
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleOrderDetailByQueryMapper">
    <select id="findListPageOrderDetaiByQuery" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            <!--订单明细表-->
            orderDetaiQuery.id,
            orderDetaiQuery.parentId,
            orderDetaiQuery.state,
            orderDetaiQuery.stateName,
            orderDetaiQuery.fileUrl,
            orderDetaiQuery.deliverDate,

            orderDetaiQuery.orderCount,
            orderDetaiQuery.orderUnit,
            orderDetaiQuery.productCount,
            orderDetaiQuery.productUnit,
            orderDetaiQuery.priceCount,

            orderDetaiQuery.priceUnit,
            orderDetaiQuery.productId,
            orderDetaiQuery.productPrice,
            orderDetaiQuery.productSum,
            orderDetaiQuery.isLockWarehouse,

            orderDetaiQuery.isNeedProduce,
            orderDetaiQuery.lockCount,
            orderDetaiQuery.needDeliverCount,
            orderDetaiQuery.lockDate,
            orderDetaiQuery.planDetailId,

            orderDetaiQuery.cuser,
            orderDetaiQuery.cdate,
            orderDetaiQuery.uuser,
            orderDetaiQuery.udate,
            orderDetaiQuery.remark,

        orderDetaiQuery.isdisable,

            orderDetaiQuery.n2pFormula,
            orderDetaiQuery.p2nFormula,

            <!--货品表-->
            orderDetaiQuery.productCode,
            orderDetaiQuery.productName,
            orderDetaiQuery.productSpec,
            orderDetaiQuery.productGenre,
            orderDetaiQuery.productType,

            orderDetaiQuery.productUnitName,
            orderDetaiQuery.priceUnitName,
            orderDetaiQuery.orderUnitName,
            orderDetaiQuery.productGenreName,

            orderDetaiQuery.stockCount,
            orderDetaiQuery.productLockCount,


            round((orderDetaiQuery.stockCount - orderDetaiQuery.productLockCount), 2) productStockCount,
            orderDetaiQuery.notDeliverCount,
            orderDetaiQuery.notDeliverCount needDeliverCount,

            orderDetaiQuery.deliverCount,
            orderDetaiQuery.endDeliverCount,
            orderDetaiQuery.endRetreatCount,

            CASE
            WHEN orderDetaiQuery.orderCount = 0 THEN 0
            WHEN <![CDATA[orderDetaiQuery.orderCount <> 0 and round(((orderDetaiQuery.endDeliverCount - orderDetaiQuery.endRetreatCount) / orderDetaiQuery.orderCount) * 100, 0) < 100 ]]> then 0
            ELSE 1
            END deliverComplete,


            <!--已发货百分比 (发货完成数-退货完成数) / 订单明细订购数量 * 100) %-->
            CASE
            WHEN orderDetaiQuery.orderCount = 0 THEN 0
            WHEN orderDetaiQuery.orderCount <![CDATA[<>]]> 0 THEN round(((orderDetaiQuery.endDeliverCount - orderDetaiQuery.endRetreatCount) / orderDetaiQuery.orderCount) * 100, 0)
            ELSE null
            END deliverProgress

        from (
            select
                orderDtl.id id,
                orderDtl.parent_id parentId,
                orderDtl.state state,
                CASE
                    WHEN orderDtl.state = '0' THEN '待提交'
                    WHEN orderDtl.state = '1' THEN '待审核'
                    WHEN orderDtl.state = '2' THEN '待生产'
                    WHEN orderDtl.state = '3' THEN '待出库'
                    WHEN orderDtl.state = '4' THEN '待发货'
                    WHEN orderDtl.state = '5' THEN '已完成'
                    WHEN orderDtl.state = '-1' THEN '已取消'
                ELSE null
                END stateName,
                orderDtl.file_url fileUrl,
                DATE_FORMAT(orderDtl.deliver_date,'%Y-%m-%d') deliverDate,

                round(ifnull(orderDtl.order_count, 0),2) orderCount,
                orderDtl.order_unit orderUnit,
                round(ifnull(orderDtl.product_count, 0),2) productCount,
                orderDtl.product_unit productUnit,
                orderDtl.price_count priceCount,

                orderDtl.price_unit priceUnit,
                orderDtl.product_id productId,
                round(ifnull(orderDtl.product_price, 0),<include refid="com.xy.vmes.deecoop.common.CommonMapper.SYS_PRICE_DEFAULT"></include>) productPrice,
                round(ifnull(orderDtl.product_sum, 0),2) productSum,
                orderDtl.is_lock_warehouse isLockWarehouse,

                orderDtl.is_need_produce isNeedProduce,
                round(ifnull(orderDtl.lock_count, 0), 2) lockCount,
                round(ifnull(orderDtl.need_deliver_count, 0), 2) needDeliverCount,
                orderDtl.lock_date lockDate,
                orderDtl.plan_detail_id planDetailId,

                orderDtl.cuser cuser,
                DATE_FORMAT(orderDtl.cdate,'%Y-%m-%d %T') cdate,
                orderDtl.uuser uuser,
                DATE_FORMAT(orderDtl.udate,'%Y-%m-%d %T') udate,
                orderDtl.remark remark,

                orderDtl.isdisable isdisable,

                <!--货品计量单位-->
                prodUnitPrice.np_formula n2pFormula,
                prodUnitPrice.pn_formula p2nFormula,

                <!--货品表-->
                product.code sysProductCode,
                product.source_code custProductCode,
                CASE
                  WHEN product.source_code is null THEN product.code
                  WHEN product.source_code is not null THEN product.source_code
                ELSE null
                END productCode,
                product.name productName,
                product.spec productSpec,
                product.genre productGenre,
                product.type productType,

                productUnit.name productUnitName,
                priceUnit.name priceUnitName,
                orderUnit.name orderUnitName,
                genre.name productGenreName,

                round(ifnull(product.stock_count, 0), 2) stockCount,
                round(ifnull(product.lock_count, 0), 2) productLockCount,

                <!--发货总数-->
                round(ifnull(deliverDtl_1.count, 0), 2) deliverCount,
                round((ifnull(orderDtl.order_count, 0) - ifnull(deliverDtl_1.count, 0)), 2) notDeliverCount,
                <!--已发货数量-->
                round(ifnull(deliverDtl_2.count, 0), 2) endDeliverCount,
                <!--已退货数量-->
                round(ifnull(retreatDtl.count, 0), 2) endRetreatCount

            from vmes_sale_order_detail orderDtl
                left join vmes_product product on orderDtl.product_id = product.id
                left join vmes_dictionary productUnit on orderDtl.product_unit = productUnit.id
                left join vmes_dictionary priceUnit on orderDtl.price_unit = priceUnit.id
                left join vmes_dictionary orderUnit on orderDtl.order_unit = orderUnit.id

                left join vmes_dictionary genre on product.genre = genre.id
                left join vmes_product_unit prodUnitPrice on (orderDtl.product_id = prodUnitPrice.product_id and orderDtl.order_unit = prodUnitPrice.unit)
                <!--根据订单明细id汇总查询(发货明细) 已生成发货单数量-->
                left join (
                    select order_detai_id, sum(order_count) count
                    from vmes_sale_deliver_detail
                    where <![CDATA[ state <> '-1' ]]>
                    group by order_detai_id
                ) deliverDtl_1 on orderDtl.id = deliverDtl_1.order_detai_id

                <!--根据订单明细id汇总查询(发货明细) 已发货数量-->
                left join (
                select order_detai_id, sum(order_count) count
                from vmes_sale_deliver_detail
                where state = '1'
                group by order_detai_id
                ) deliverDtl_2 on orderDtl.id = deliverDtl_2.order_detai_id
                <!--根据订单明细id汇总查询(退货明细) 已完成退货数量-->
                left join (
                    select order_detail_id, sum(order_count) count
                    from vmes_sale_retreat_detail
                    where state = '3'
                    group by order_detail_id
                ) retreatDtl on orderDtl.id = retreatDtl.order_detail_id

            <where>
                <if test="orderDtlIds != null and orderDtlIds != ''" >
                    and orderDtl.id in (${orderDtlIds})
                </if>
                <if test="parentId != null and parentId != ''" >
                    and orderDtl.parent_id = #{parentId}
                </if>
                <if test="orderState != null and orderState != ''" >
                    and orderDtl.state = #{orderState}
                </if>

                <!--queryStr 自定义sql查询语句-->
                <if test="queryStr != null and queryStr != ''" >
                    and ${queryStr}
                </if>
            </where>
        ) orderDetaiQuery
        <where>
            <if test="'true' == isNeedDeliverCount" >
                and orderDetaiQuery.notDeliverCount > 0
            </if>
        </where>


    </select>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleOrderDetailByQuery';
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'id', 'id', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'parentId', '订单id', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productId', '货品id', 1, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productCode', '货品编码', 2, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productName', '货品名称', 3, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productSpec', '规格型号', 4, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productGenreName', '货品属性', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productGenre', '货品属性id', 5, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productUnit', '计量单位id', 6, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productUnitName', '计量单位', 6, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productType', '货品类型id', 7, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'priceUnit', '计价单位id', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'priceUnitName', '单位', 8, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'count', '订购数量', 9, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productPrice', '单价', 10, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productSum', '金额', 11, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productCount', '货品数量(计量数量)', 12, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'stockCount', '库存数量', 13, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productStockCount', '库存可用数量', 14, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'productLockCount', '库存锁定数量', 15, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'deliverDate', '交付日期', 16, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'fileUrl', '附件地址', 17, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'remark', '备注', 18, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'stateName', '状态', 19, '1', '0', '1', '0', '2018-12-6 09:25:40', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'state', '明细状态id', 19, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'cuser', '创建用户id', 20, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'cdate', '创建时间', 21, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'uuser', '修改用户id', 22, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'udate', '修改时间', 23, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'isdisable', '是否启用(0:已禁用 1:启用)', 24, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'isLockWarehouse', '是否锁定仓库(0:无锁定 1:锁定)', 25, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'lockCount', '锁定货品数量', 26, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'lockDate', '锁定开始时间', 27, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'isneedproduce', '是否需要生产(0:无需 1:需要 库存不够)', 28, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'deliverDetailId', '发货明细ID', 29, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'planDetailId', '生产计划明细ID', 30, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'deliverCount', 'deliverCount', 31, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'notDeliverCount', 'notDeliverCount', 32, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'needDeliverCount', 'needDeliverCount', 33, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'deliverCount', 'deliverCount', 34, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'endDeliverCount', 'endDeliverCount', 35, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'deliverProgress', '发货进度', 36, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'p2nFormula', 'p2nFormula', 37, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'n2pFormula', 'n2pFormula', 37, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),

        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'orderUnit', '单位id', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailByQuery', 'orderUnitName', '单位', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin')

    </insert>

</mapper>