<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：订单明细查询汇总 Mapper.xml
销售-发货管理-生成发货单-(勾选订单明细)-弹出界面查询
创建人：陈刚
创建时间：2018-12-29
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleOrderDetailQueryByDeliverMapper">
    <select id="listOrderDetaiQueryByDeliver" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            <!--订单明细表-->
            orderDetaiQuery.id,
            orderDetaiQuery.parentId,
            orderDetaiQuery.state,
            orderDetaiQuery.stateName,
            orderDetaiQuery.fileUrl,
            orderDetaiQuery.deliverDate,

            orderDetaiQuery.orderCount,
            orderDetaiQuery.orderUnit,
            orderDetaiQuery.productCount,
            orderDetaiQuery.productUnit,
            orderDetaiQuery.priceCount,

            orderDetaiQuery.priceUnit,
            orderDetaiQuery.productId,
            orderDetaiQuery.productPrice,
            orderDetaiQuery.isLockWarehouse,

            orderDetaiQuery.isNeedProduce,
            orderDetaiQuery.lockCount,
            <!--可发货数量-->
            orderDetaiQuery.needDeliverCount,
            orderDetaiQuery.lockDate,
            orderDetaiQuery.planDetailId,

            orderDetaiQuery.cuser,
            orderDetaiQuery.cdate,
            orderDetaiQuery.uuser,
            orderDetaiQuery.udate,
            orderDetaiQuery.remark,
            orderDetaiQuery.isdisable,

            orderDetaiQuery.npFormula,
            orderDetaiQuery.pnFormula,
            orderDetaiQuery.customerId,
            orderDetaiQuery.priceType,
            orderDetaiQuery.customerName,
            '' deliverDtlRemark,

            <!--货品表-->
            orderDetaiQuery.productCode,
            orderDetaiQuery.productName,
            orderDetaiQuery.productSpec,
            orderDetaiQuery.productGenre,
            orderDetaiQuery.productType,

            orderDetaiQuery.productUnitName,
            orderDetaiQuery.priceUnitName,
            orderDetaiQuery.orderUnitName,
            orderDetaiQuery.productGenreName,

            orderDetaiQuery.stockCount,
            orderDetaiQuery.productLockCount,
            orderDetaiQuery.endDeliverCount,

            round((orderDetaiQuery.stockCount - orderDetaiQuery.productLockCount), 2) productStockCount,
            <!--未发货数量-->
            orderDetaiQuery.notDeliverCount,
            <!--本次发货数量-->
            round(ifnull(orderDetaiQuery.orderDtlDeliverCount, 0), 2) orderDtlDeliverCount,
            round(ifnull(orderDetaiQuery.orderDtlDeliverCount, 0) * orderDetaiQuery.productPrice ,2) productSum

        from (
            select
                orderDtl.id id,
                orderDtl.parent_id parentId,
                orderDtl.state state,
                CASE
                    WHEN orderDtl.state = '0' THEN '待提交'
                    WHEN orderDtl.state = '1' THEN '待审核'
                    WHEN orderDtl.state = '2' THEN '待生产'
                    WHEN orderDtl.state = '3' THEN '待出库'
                    WHEN orderDtl.state = '4' THEN '待发货'
                    WHEN orderDtl.state = '5' THEN '已完成'
                    WHEN orderDtl.state = '-1' THEN '已取消'
                ELSE null
                END stateName,
                orderDtl.file_url fileUrl,
                DATE_FORMAT(orderDtl.deliver_date,'%Y-%m-%d') deliverDate,

                round(ifnull(orderDtl.order_count, 0),2) orderCount,
                orderDtl.order_unit orderUnit,
                round(ifnull(orderDtl.product_count, 0),2) productCount,
                orderDtl.product_unit productUnit,
                orderDtl.price_count priceCount,

                orderDtl.price_unit priceUnit,
                orderDtl.product_id productId,
                round(ifnull(orderDtl.product_price, 0),2) productPrice,
                round(ifnull(orderDtl.product_sum, 0),2) productSum,
                orderDtl.is_lock_warehouse isLockWarehouse,

                orderDtl.is_need_produce isNeedProduce,
                round(ifnull(orderDtl.lock_count, 0),2) lockCount,
                round(ifnull(orderDtl.need_deliver_count, 0),2) needDeliverCount,
                orderDtl.lock_date lockDate,
                orderDtl.plan_detail_id planDetailId,

                orderDtl.cuser cuser,
                DATE_FORMAT(orderDtl.cdate,'%Y-%m-%d %T') cdate,
                orderDtl.uuser uuser,
                DATE_FORMAT(orderDtl.udate,'%Y-%m-%d %T') udate,
                orderDtl.remark remark,

                orderDtl.isdisable isdisable,

                unit.np_formula npFormula,
                unit.pn_formula pnFormula,
                saleOrder.customer_id customerId,
                saleOrder.price_type priceType,
                customer.name customerName,

                <!--货品表-->
                product.code productCode,
                product.name productName,
                product.spec productSpec,
                product.genre productGenre,
                product.type productType,

                productUnit.name productUnitName,
                priceUnit.name priceUnitName,
                orderUnit.name orderUnitName,
                genre.name productGenreName,

                round(ifnull(product.stock_count, 0), 2) stockCount,
                round(ifnull(product.lock_count, 0), 2) productLockCount,
                round(ifnull(deliverDtl.count, 0), 2) endDeliverCount,
                <!--未发货数量 := 订购数量 - 未发货数量 + (退换货)退货数量 -->
                round((ifnull(orderDtl.order_count, 0) - ifnull(deliverDtl.count, 0) + ifnull(retreatDtl.count, 0)), 2) notDeliverCount,

                <!--本次发货数量-->
                <!--本次发货数量:= 未发货数量 (可发货数量 >= 未发货数量) -->
                <!--本次发货数量:= 可发货数量 (可发货数量 < 未发货数量) -->
                CASE
                  WHEN ifnull(orderDtl.need_deliver_count, 0) <![CDATA[>=]]> (ifnull(orderDtl.order_count, 0) - ifnull(deliverDtl.count, 0) + ifnull(retreatDtl.count, 0))
                  THEN (ifnull(orderDtl.order_count, 0) - ifnull(deliverDtl.count, 0))

                  WHEN ifnull(orderDtl.need_deliver_count, 0) <![CDATA[<]]> (ifnull(orderDtl.order_count, 0) - ifnull(deliverDtl.count, 0) + ifnull(retreatDtl.count, 0))
                  THEN ifnull(orderDtl.need_deliver_count, 0)
                ELSE 0.00
                END orderDtlDeliverCount
            from vmes_sale_order_detail orderDtl
                left join vmes_sale_order saleOrder on orderDtl.parent_id = saleOrder.id
                left join vmes_customer customer on saleOrder.customer_id = customer.id
                left join vmes_product product on orderDtl.product_id = product.id
                left join vmes_dictionary productUnit on orderDtl.product_unit = productUnit.id
                left join vmes_dictionary priceUnit on orderDtl.price_unit = priceUnit.id
                left join vmes_dictionary orderUnit on orderDtl.order_unit = orderUnit.id
                left join vmes_dictionary genre on product.genre = genre.id
                left join vmes_product_unit unit on orderDtl.product_id = unit.product_id and orderDtl.order_unit = unit.unit
                <!--根据订单明细id汇总查询(发货明细) 已生成发货单数量-->
                left join (
                    select order_detai_id, sum(order_count) count
                    from vmes_sale_deliver_detail
                    where <![CDATA[ state <> '-1' ]]>
                    group by order_detai_id
                ) deliverDtl on orderDtl.id = deliverDtl.order_detai_id
                <!--退货单-退货类型类型(退换货)退货数量 -->
                <!--退货类型类型:pid:566b1b81bb6343be9e68bdbe1a460916 字典表(vmes_dictionary)-->
                    <!--退货换货:c90c2081328c427e8d65014d98335601 字典表(vmes_dictionary)-->
                    <!--退货退款:f69839bbf2394846a65894f0da120df9 字典表(vmes_dictionary)-->
                left join (
                    select a.order_detail_id, sum(a.order_count) count
                    from vmes_sale_retreat_detail a
                        left join vmes_sale_retreat b on a.parent_id = b.id
                    <!--where b.state = '3' and b.type = 'c90c2081328c427e8d65014d98335601' 2019-08-23 -->
                    where b.state = '3'
                    group by a.order_detail_id
                ) retreatDtl on orderDtl.id = retreatDtl.order_detail_id
            <where>
                <if test="orderDtlIds != null and orderDtlIds != ''" >
                    and orderDtl.id in (${orderDtlIds})
                </if>
                <if test="parentId != null and parentId != ''" >
                    and orderDtl.parent_id = #{parentId}
                </if>
                <if test="orderState != null and orderState != ''" >
                    and orderDtl.state = #{orderState}
                </if>

                <!--queryStr 自定义sql查询语句-->
                <if test="queryStr != null and queryStr != ''" >
                    and ${queryStr}
                </if>
            </where>
        ) orderDetaiQuery
        <where>
            <if test="'true' == isNeedDeliverCount" >
                and orderDetaiQuery.notDeliverCount > 0
            </if>
        </where>


    </select>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleOrderDetailQueryByDeliver';
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'pnFormula', '计价转换计量(单位换算公式)', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'npFormula', '计量转换计价(单位换算公式)', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'priceType', 'priceType', 0, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'parentId', '订单id', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'id', 'id', 0, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productId', '货品id', 1, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productCode', '货品编码', 2, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productName', '货品名称', 3, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productSpec', '规格型号', 4, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productGenreName', '货品属性', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productGenre', '货品属性id', 5, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productType', '货品类型id', 6, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'orderUnitName', '单位', 7, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'orderUnit', '单位id', 7, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'orderCount', '订购数量', 7, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'needDeliverCount', '可发货数量', 8, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productUnitName', '计量单位', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productUnit', '计量单位id', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productCount', '货品数量(计量数量)', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'priceCount', '货品数量(计价数量)', 10, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'priceUnit', '计价单位id', 10, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'priceUnitName', '计价单位', 10, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'stockCount', '库存数量', 12, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productStockCount', '库存可用数量', 13, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productLockCount', '库存锁定数量', 14, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'endDeliverCount', '生成发货单数量', 15, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'notDeliverCount', '未发货数量', 16, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'orderDtlDeliverCount', '本次发货数量', 17, '1', '1', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productPrice', '单价', 18, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'productSum', '金额', 19, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'deliverDate', '约定交期', 20, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'fileUrl', '附件地址', 21, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'deliverDtlRemark', '备注', 22, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'remark', '订单明细备注', 22, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'stateName', '状态', 23, '1', '0', '1', '0', '2018-12-6 09:25:40', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'state', '明细状态id', 23, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'cuser', '创建用户id', 24, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'cdate', '创建时间', 25, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'uuser', '修改用户id', 26, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'udate', '修改时间', 27, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'isdisable', '是否启用(0:已禁用 1:启用)', 28, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'isLockWarehouse', '是否锁定仓库(0:无锁定 1:锁定)', 29, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'lockCount', '锁定货品数量(计量单位)', 30, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'lockDate', '锁定开始时间', 31, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'isneedproduce', '是否需要生产(0:无需 1:需要 库存不够)', 32, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'deliverDetailId', '发货明细ID', 33, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'planDetailId', '生产计划明细ID', 34, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'customerId', 'customerId', 35, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
        (replace(uuid(), '-', ''), 'saleOrderDetailQueryByDeliver', 'customerName', 'customerName', 36, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),



    </insert>

</mapper>