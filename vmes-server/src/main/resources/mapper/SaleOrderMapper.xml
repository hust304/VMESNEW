<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_sale_order:订单表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-12-05
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleOrderMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_sale_order
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_sale_order
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <delete id="deleteTableByDetail" parameterType="com.yvan.PageData">
        delete from vmes_sale_order_detail
        where parent_id in (
            select id from vmes_sale_order
            <where>
                <if test="companyId != null and companyId != ''" >
                    and company_id = #{companyId}
                </if>
            </where>
        )
    </delete>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleOrder' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''), 'saleOrder', 'parentId', '订单id', 0, '1', '0', '1', '0', '2018-12-5 17:35:26', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'id', 'id', 0, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'orderNumber', '订单编号', 1, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'sysCode', '订单编号', 2, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'customerName', '客户名称', 3, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'customerId', '客户id', 3, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'orderDate', '下单日期', 4, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'expectDate', '约定交期', 5, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'deliverDate', '发货完成日期', 5, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'makeId', '制单人id', 6, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'makeName', '制单人', 6, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'state', '订单状态id', 7, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'stateName', '订单状态', 7, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'orderStateByQuery', '订单状态', 7, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'remark', '备注', 8, '1', '1', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'companyId', '企业ID', 9, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'priceType', '计价类型(1:先计价 2:后计价)', 10, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'receiptType', '发票类型id', 11, '1', '0', '1', '0', '2018-12-6 10:53:24', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'receiptTypeName', '发票类型', 12, '1', '0', '1', '0', '2018-12-6 10:53:24', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'totalSum', '合计金额', 13, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'discountSum', '折扣金额', 14, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'orderSum', '订单金额(合计金额 - 折扣金额)', 15, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'advanceSum', '预付款', 16, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'deliverSum', '发货金额', 16, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'receivables', '应收款(发货金额-预付款)', 17, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'cuser', '创建用户id', 18, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'cdate', '创建时间', 19, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'uuser', '修改用户id', 20, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'udate', '修改时间', 21, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin'),
            (replace(uuid(), '-', ''), 'saleOrder', 'isdisable', '是否启用(0:已禁用 1:启用)', 22, '1', '0', '1', '0', '2018-12-5 17:01:51', 'admin')

    </insert>

    <update id="updateStateByOrder" parameterType="com.yvan.PageData" >
        update vmes_sale_order set
        state = #{state},
        udate = now()
        <where>
            <if test="ids != null and ids != ''" >
                and ${ids}
            </if>
        </where>
    </update>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleOrder">
        select
        id id,
        company_id companyId,
        order_number orderNumber,
        sys_code sysCode,
        receipt_type receiptType,

        price_type priceType,
        state state,
        make_id makeId,
        audit_id auditId,
        customer_id customerId,

        order_date orderDate,
        total_sum totalSum,
        discount_sum discountSum,
        order_sum orderSum,
        advance_sum advanceSum,

        deliver_sum deliverSum,
        receivables receivables,
        cuser cuser,
        cdate cdate,
        uuser uuser,

        udate udate,
        remark remark,
        isdisable isdisable,
        expect_date expectDate,
        deliver_date deliverDate,

        pay_date payDate,
        pay_state payState
        from vmes_sale_order
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''" >
                and company_id = #{currentCompanyId}
            </if>
            <if test="sysCode != null and sysCode != ''" >
                and sys_code = #{sysCode}
            </if>
            <if test="orderNumber != null and orderNumber != ''" >
                and order_number = #{orderNumber}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


    <!-- 自动创建，可以修改 -->
    <select id="checkIsDeliver" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select count(deliverDetail.id) num
        from vmes_sale_order saleOrder
        left join vmes_sale_order_detail orderDetail on orderDetail.parent_id = saleOrder.id
        left join vmes_sale_deliver_detail deliverDetail on deliverDetail.order_detai_id = orderDetail.id
        <where>
            <if test="orderId != null and orderId != ''" >
                and saleOrder.id = #{orderId}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            distinct
            saleOrder.id id,
            saleOrder.id parentId,
            saleOrder.company_id companyId,
            saleOrder.order_number orderNumber,
            saleOrder.sys_code sysCode,
            saleOrder.receipt_type receiptType,
            CASE
                WHEN saleOrder.receipt_type = '1' THEN '不开票'
                WHEN saleOrder.receipt_type = '2' THEN '增值税普通发票'
                WHEN saleOrder.receipt_type = '3' THEN '增值税专用发票'
            ELSE null
            END receiptTypeName,

            saleOrder.price_type priceType,
            saleOrder.state state,
            saleOrder.state orderStateByQuery,
            CASE
                WHEN saleOrder.state = '0' THEN '待提交'
                WHEN saleOrder.state = '1' THEN '待审核'
                WHEN saleOrder.state = '2' THEN '待发货'
                WHEN saleOrder.state = '3' THEN '已发货'
                WHEN saleOrder.state = '4' THEN '已完成'
                WHEN saleOrder.state = '-1' THEN '已取消'
            ELSE null
            END stateName,
            saleOrder.make_id makeId,
            saleOrder.customer_id customerId,
            DATE_FORMAT(saleOrder.order_date,'%Y-%m-%d') orderDate,


            round(ifnull(saleOrder.total_sum, 0),2) totalSum,
            round(ifnull(saleOrder.discount_sum, 0),2) discountSum,
            round(ifnull(saleOrder.order_sum, 0),2) orderSum,
            round(ifnull(saleOrder.advance_sum, 0),2) advanceSum,
            round(ifnull(saleOrder.deliver_sum, 0),2) deliverSum,

            round((ifnull(saleOrder.deliver_sum, 0) - ifnull(saleOrder.advance_sum, 0)), 2) receivables,
            saleOrder.cuser cuser,
            saleOrder.cdate,
            saleOrder.uuser uuser,
            DATE_FORMAT(saleOrder.udate,'%Y-%m-%d %T') udate,

            saleOrder.remark remark,
            saleOrder.isdisable isdisable,
            DATE_FORMAT(saleOrder.deliver_date,'%Y-%m-%d') deliverDate,
            DATE_FORMAT(saleOrder.expect_date,'%Y-%m-%d') expectDate,
            DATE_FORMAT(saleOrder.pay_date,'%Y-%m-%d') payDate,

            saleOrder.pay_state payState,

            makeUser.user_name makeName,
            customer.name customerName

        from vmes_sale_order saleOrder
            left join vmes_customer customer on saleOrder.customer_id = customer.id
            left join vmes_user makeUser on saleOrder.make_id = makeUser.id
            left join vmes_sale_order_detail detail on saleOrder.id = detail.parent_id
        <where>
            <if test="currentCompanyId != null and currentCompanyId != ''" >
                and saleOrder.company_id = #{currentCompanyId}
            </if>
            <if test="state != null and state != ''" >
                and saleOrder.state = #{state}
            </if>
            <if test="sysCode != null and sysCode != ''" >
                and saleOrder.sys_code = #{sysCode}
            </if>
            <if test="orderNumber != null and orderNumber != ''" >
                and saleOrder.order_number = #{orderNumber}
            </if>
            <if test="priceType != null and priceType != ''" >
                and saleOrder.price_type = #{priceType}
            </if>

            <!--模块查询条件-->
            <if test="customerName != null and customerName != ''">
                and customer.name LIKE CONCAT(CONCAT(#{customerName}),'%')
            </if>
            <if test="receiptType != null and receiptType != ''" >
                and saleOrder.receipt_type = #{receiptType}
            </if>
            <if test="expectDate != null and expectDate != ''" >
                and saleOrder.expect_date = #{expectDate}
            </if>

            <if test="orderDateBegin != null and orderDateBegin != ''">
                <![CDATA[ and saleOrder.order_date >= #{orderDateBegin} ]]>
            </if>
            <if test="orderDateEnd != null and orderDateEnd != ''">
                <![CDATA[ and saleOrder.order_date <= #{orderDateEnd} ]]>
            </if>

            <!--过滤出订单-订单明细id汇总(订购数量 > (发货数量-退货数量))-->
            <if test="'true' == isBydeliver" >
                and saleOrder.id in (
                    select orderDeliver.parent_id
                    from (
                        select
                            orderDtl.id,
                            orderDtl.parent_id,
                            <!--订单明细-订购数量-->
                            round(ifnull(orderDtl.order_count, 0),2) orderCount,
                            <!--订单明细id汇总已生成的发货数量-->
                            round(ifnull(deliver.order_count, 0),2) deliverCount,
                            <!--订单明细id汇总已生成的退货数量-->
                            round(ifnull(retreat.order_count, 0),2) retreatCount,
                            CASE
                              WHEN ifnull(orderDtl.order_count, 0) > (ifnull(deliver.order_count, 0) - ifnull(retreat.order_count, 0)) THEN 'Y'
                              WHEN ifnull(orderDtl.order_count, 0) <![CDATA[<=]]> (ifnull(deliver.order_count, 0) - ifnull(retreat.order_count, 0)) THEN 'N'
                            ELSE null
                            END isShowOrder
                        from (
                            select id,order_count,parent_id
                            from vmes_sale_order_detail
                            where parent_id in (
                                select id
                                from vmes_sale_order
                                <where>
                                    <if test="currentCompanyId != null and currentCompanyId != ''">
                                        and company_id = #{currentCompanyId}
                                    </if>
                                </where>
                            )
                        ) orderDtl
                            left join (
                                <!--订单明细id汇总已生成的发货数量-->
                                select order_detai_id,sum(order_count) order_count
                                from vmes_sale_deliver_detail
                                where parent_id in (
                                    select id
                                    from vmes_sale_deliver
                                    <where>
                                        <if test="currentCompanyId != null and currentCompanyId != ''" >
                                            and company_id = #{currentCompanyId}
                                        </if>
                                    </where>
                                ) and state <![CDATA[<>]]> '-1'
                                group by order_detai_id
                            ) deliver on orderDtl.id = deliver.order_detai_id
                            left join (
                                <!--订单明细id汇总已生成的退货数量-->
                                select order_detail_id,sum(order_count) order_count
                                from vmes_sale_retreat_detail
                                where parent_id in (
                                    select id
                                    from vmes_sale_retreat
                                    <where>
                                        <if test="currentCompanyId != null and currentCompanyId != ''" >
                                            and company_id = #{currentCompanyId}
                                        </if>
                                    </where>
                                ) and state <![CDATA[<>]]> '-1'
                                group by order_detail_id
                            ) retreat on orderDtl.id = retreat.order_detail_id
                    ) orderDeliver
                    where orderDeliver.isShowOrder = 'Y'
                )
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>

        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>