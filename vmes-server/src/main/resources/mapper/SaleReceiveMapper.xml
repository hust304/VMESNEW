<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：收款单 Mapper.xml
创建人：刘威 自动创建
创建时间：2019-01-10
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleReceiveMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_sale_receive
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		code code,<!-- 收款单编码 -->
		type type,<!-- 收款单类型（0：预收款 1：普通收款） -->
		customer_id customerId,<!-- 客户ID -->
		receive_sum receiveSum,<!-- 收款单总额 -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		remark remark,<!-- 备注 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		company_id companyId,<!-- 公司ID -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{code},<!-- 收款单编码 -->
		#{type},<!-- 收款单类型（0：预收款 1：普通收款） -->
		#{customerId},<!-- 客户ID -->
		#{receiveSum},<!-- 收款单总额 -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{remark},<!-- 备注 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{companyId},<!-- 公司ID -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '收款单编码'  code,
        '收款单类型（0：预收款 1：普通收款）'  type,
        '客户ID'  customerId,
        '收款单总额'  receiveSum,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        '公司ID'  companyId,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleReceive">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>





    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <delete id="deleteTableByDetail" parameterType="com.yvan.PageData">
        delete from vmes_sale_receive_detail
        where parent_id in (
        select id from vmes_sale_receive
        <where>
            <if test="companyId != null and companyId != ''" >
                and company_id = #{companyId}
            </if>
        </where>
        )
    </delete>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'SaleReceive' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'SaleReceive','code','收款单号',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','name','客户名称',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','type','收款类型',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','customerId','客户ID',4, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','receiveSum','收款总额',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','cdate','收款日期',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','remark','备注',7, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','isdisable','是否启用',8, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','companyId','公司ID',9, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleReceive','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>



    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleReceive">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>


            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        code code,<!-- 收款单编码 -->
        type type,<!-- 收款单类型（0：预收款 1：普通收款） -->
        customer_id customerId,<!-- 客户ID -->
        receive_sum receiveSum,<!-- 收款单总额 -->
        cuser cuser,<!-- 创建用户id -->
        cdate cdate,<!-- 创建时间 -->
        uuser uuser,<!-- 修改用户id -->
        udate udate,<!-- 修改时间 -->
        remark remark,<!-- 备注 -->
        isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
        company_id companyId,<!-- 公司ID -->
        id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '收款单编码'  code,
            '收款单类型（0：预收款 1：普通收款）'  type,
            '客户ID'  customerId,
            '收款单总额'  receiveSum,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            '公司ID'  companyId,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        receive.id,
        receive.code,
        customer.id customerId,
        customer.name,
        round(ifnull(receive.receive_sum, 0),2) receiveSum,
        case when receive.type='1' then '普通收款' when receive.type='0' then '预收款' else null end type,
        DATE_FORMAT(receive.cdate,'%Y-%m-%d') cdate
        from vmes_sale_receive receive
        left join vmes_customer customer on customer.id = receive.customer_id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="code != null and code != ''">
                and receive.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and customer.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="customerId != null and customerId != ''">
                and customer.id = #{customerId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        receive.id,
        receive.code,
        customer.id customerId,
        customer.name,
        round(ifnull(receive.receive_sum, 0),2) receiveSum,
        case when receive.type='1' then '普通收款' when receive.type='0' then '预收款' else null end type,
        DATE_FORMAT(receive.cdate,'%Y-%m-%d') cdate
        from vmes_sale_receive receive
        left join vmes_customer customer on customer.id = receive.customer_id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="code != null and code != ''">
                and receive.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and customer.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="customerId != null and customerId != ''">
                and customer.id = #{customerId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>