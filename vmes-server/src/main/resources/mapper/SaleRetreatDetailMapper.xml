<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_sale_retreat_detail:退货明细 Mapper.xml
创建人：陈刚 自动创建
创建时间：2019-02-25
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleRetreatDetailMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_sale_retreat_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_sale_retreat_detail
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleOrderReturnDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'id', 'id', 0, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'parentId', '退货单id', 1, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'deliverDetailId', '发货明细id', 2, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'orderDetailId', '订单明细id', 3, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productId', '货品id', 4, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productCode', '货品编码', 5, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productName', '货品名称', 6, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productSpec', '规格型号', 7, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productType', '货品类型id', 8, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productGenre', '货品属性id', 9, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productGenreName', '货品属性', 9, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'orderUnitName', '单位', 10, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'orderUnit', '单位id', 10, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'orderCount', '退货数量', 11, '1', '1', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'orderSum', '退货金额', 12, '1', '1', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productUnit', '计量单位id', 13, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'productCount', '退货数量(计量数量)', 14, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'state', '状态id', 15, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'stateName', '状态', 15, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'cuser', '创建用户id', 16, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'cdate', '创建时间', 17, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'uuser', '修改用户id', 18, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'udate', '修改时间', 19, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'remark', '备注', 20, '1', '1', '1', '0', '2019-2-25 18:31:31', 'admin'),
            (replace(uuid(), '-', ''), 'saleRetreatDetail', 'isdisable', '是否启用(0:已禁用 1:启用)', 21, '1', '0', '1', '0', '2019-2-25 18:31:31', 'admin'),

    </insert>

    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_sale_retreat_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="parentIds != null and parentIds != ''" >
                and ${parentIds}
            </if>
        </where>
    </update>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleRetreatDetail">
        select
        id id,
        parent_id parentId,
        deliver_detail_id deliverDetailId,
        order_detail_id orderDetailId,
        in_detail_id inDetailId,

        product_id productId,
        order_sum orderSum,
        order_unit orderUnit,
        order_count orderCount,
        product_unit productUnit,

        product_count productCount,
        state state,
        cuser cuser,
        cdate cdate,
        uuser uuser,

        udate udate,
        remark remark,
        isdisable isdisable
        from vmes_sale_retreat_detail detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id id,
            detail.parent_id parentId,
            detail.deliver_detail_id deliverDetailId,
            detail.order_detail_id orderDetailId,
            detail.product_id productId,

            round(ifnull(detail.order_sum, 0),2) orderSum,
            detail.order_unit orderUnit,
            round(ifnull(detail.order_count, 0),2) orderCount,
            detail.product_unit productUnit,
            detail.product_count productCount,

            detail.state state,
            CASE
                WHEN detail.state = '0' THEN '待提交'
                WHEN detail.state = '1' THEN '待审核'
                WHEN detail.state = '2' THEN '待退款'
                WHEN detail.state = '3' THEN '已完成'
                WHEN detail.state = '-1' THEN '已取消'
            ELSE null
            END stateName,
            detail.cuser cuser,
            detail.cdate cdate,
            detail.uuser uuser,
            detail.udate udate,

            detail.remark remark,
            detail.isdisable isdisable,

            deliver.deliver_code deliverCode,
            saleOrder.sys_code orderCode,

            <!--货品表-->
            product.code productCode,
            product.name productName,
            product.spec productSpec,
            product.genre productGenre,
            genre.name productGenreName,
            product.type productType,

            orderUnit.name orderUnitName
        from vmes_sale_retreat_detail detail
            left join vmes_sale_deliver_detail deliverDetail on detail.deliver_detail_id = deliverDetail.id
            left join vmes_sale_deliver deliver on deliverDetail.parent_id = deliver.id
            left join vmes_sale_order saleOrder on deliverDetail.order_id = saleOrder.id
            left join vmes_dictionary orderUnit on detail.order_unit = orderUnit.id
            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary genre on product.genre = genre.id
        <where>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>


            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>

        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!--退货单明细与入库单明细 关联查询-->
    <select id="findRetreatDetailByInDetail" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        retreatDtl.parent_id retreatId,
        retreatDtl.id retreatDtlId,
        retreatDtl.in_detail_id inDtlId,

        inDtl.parent_id inParentId,
        inDtl.state inDtlState
        from vmes_sale_retreat_detail retreatDtl
        left join vmes_warehouse_in_detail inDtl on retreatDtl.in_detail_id = inDtl.id
        <where>
            <if test="retreatId != null and retreatId != ''" >
                and retreatDtl.parent_id = #{retreatId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
    </select>

</mapper>