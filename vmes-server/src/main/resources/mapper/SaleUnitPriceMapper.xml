<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：设置锁库时间 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-12-14
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleUnitPriceMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_sale_unit_price
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		product_id productId,<!-- 货品ID -->
		unit unit,<!-- 单位id -->
		customer_id customerId,<!-- 客户ID -->
		product_price productPrice,<!-- 货品单价 -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		remark remark,<!-- 备注 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{productId},<!-- 货品ID -->
		#{unit},<!-- 单位id -->
		#{customerId},<!-- 客户ID -->
		#{productPrice},<!-- 货品单价 -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{remark},<!-- 备注 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '货品ID'  productId,
        '单位id'  unit,
        '客户ID'  customerId,
        '货品单价'  productPrice,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleUnitPrice">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'SaleUnitPrice' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'SaleUnitPrice','id','id',0, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','customerId','客户id',1, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','customerName','客户名称',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','productId','产品id',2, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','code','货品编码',3, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'SaleUnitPrice','name','货品名称',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','spec','规格型号',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','genre','属性id',6, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','genreName','属性',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','unit','单位id',7, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'SaleUnitPrice','unitName','单位',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','unitType','单位类型id',8, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','unitTypeName','单位类型',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','unitIsdefault','单位属性id',9, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'SaleUnitPrice','unitIsdefaultName','单位属性',9, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'SaleUnitPrice','productPrice','单价',10, '1','0','1','0',now(), 'admin')



    </insert>

    <insert id="insertColumn1" >
        delete from vmes_column where model_code = 'CustomerUnitPrice' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'CustomerUnitPrice','unit','单位ID',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPrice','unitName','单位',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPrice','productId','货品ID',3, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPrice','customerId','客户ID',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPrice','productPrice','标准价',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPrice','customerPrice','专属价',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPrice','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>

    <insert id="insertColumn2" >
        delete from vmes_column where model_code = 'CustomerUnitPriceHis' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','unit','单位ID',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','unitName','单位',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','productId','货品ID',3, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','customerId','客户ID',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','productPrice','单价',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','udate','改动时间',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','cuser','录入人员ID',7, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','cuserName','录入人员',8, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'CustomerUnitPriceHis','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleUnitPrice">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test="id != null and id != ''" >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>
            <if test="productId != null and productId != ''" >
                and product_id = #{productId}
            </if>
            <if test="unit != null and unit != ''" >
                and unit = #{unit}
            </if>
            <if test="customerId != null and customerId != ''" >
                and customer_id = #{customerId}
            </if>
            <if test="isdisable != null and isdisable != ''" >
                and isdisable = #{isdisable}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        sup.id id,
        product.code code,
        product.name name,
        product.spec spec,
        product.genre genre,
        genre.name genreName,
        punit.id punit,
        punit.name punitName,
        dunit.id dunit,
        dunit.name dunitName,
        customer.id customerId,
        product.id productId,
        round(ifnull(sup.product_price, 0), 2) productPrice
    </sql>

    <!-- 字段 自动创建，可以修改-->
    <sql id="Field2">
        sup.id id,
        unit.id unit,
        unit.name unitName,
        sup.product_id productId,
        sup.customer_id customerId,
        round(ifnull(pu.product_price, 0), 2) productPrice,
        round(ifnull(sup.product_price, 0), 2) customerPrice
    </sql>

    <!-- 字段 自动创建，可以修改-->
    <sql id="Field3">
        detail.id id,
        saleorder.cuser,
        cuser.user_name cuserName,
        orderdetail.udate,
        orderdetail.price_unit unit,
        unit.name unitName,
        round(ifnull(detail.product_price, 0), 2) productPrice,
        saleorder.customer_id customerId,
        detail.product_id productId
    </sql>
    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '货品ID'  productId,
            '单位id'  unit,
            '客户ID'  customerId,
            '货品单价'  productPrice,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from vmes_sale_unit_price sup
        left join vmes_customer customer on sup.customer_id = customer.id
        left join vmes_product product on product.id = sup.product_id
        left join vmes_dictionary genre on genre.id = product.genre
        left join vmes_product_unit produnit on produnit.product_id = sup.product_id and produnit.type = '1'
        left join vmes_dictionary punit on punit.id = produnit.unit
        left join vmes_product_unit defaultunit on defaultunit.product_id = sup.product_id and defaultunit.isdefault = '1'
        left join vmes_dictionary dunit on dunit.id = defaultunit.unit
        <where>
            and sup.unit = defaultunit.unit
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="code != null and code != ''">
                and product.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and product.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="spec != null and spec != ''">
                and product.spec LIKE CONCAT(CONCAT('%', #{spec}),'%')
            </if>
            <if test="customerId != null and customerId != ''">
                and customer.id = #{customerId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
            sup.id id,
            sup.product_id productId,
            product.code code,
            product.name name,
            product.spec spec,
            product.genre genre,
            genre.name genreName,

            sup.customer_id customerId,
            customer.name customerName,

            sup.unit unit,
            unit.name unitName,
            produnit.type unitType,
            CASE
                WHEN produnit.type = '0' THEN '计价单位'
                WHEN produnit.type = '1' THEN '计量单位'
            ELSE null
            END unitTypeName,

            produnit.isdefault unitIsdefault,
            CASE
            WHEN produnit.isdefault = '0' THEN '默认'
            WHEN produnit.isdefault = '1' THEN '非默认'
            ELSE null
            END unitIsdefaultName,

            round(ifnull(sup.product_price, 0), 2) productPrice

        from vmes_sale_unit_price sup
            left join vmes_product product on sup.product_id = product.id
            left join vmes_dictionary genre on product.genre = genre.id
            left join vmes_product_unit produnit on sup.product_id = produnit.product_id and sup.unit = produnit.unit
            left join vmes_dictionary unit on sup.unit = unit.id
            left join vmes_customer customer on sup.customer_id = customer.id

        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="code != null and code != ''">
                and product.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and product.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="spec != null and spec != ''">
                and product.spec LIKE CONCAT(CONCAT('%', #{spec}),'%')
            </if>
            <if test="genreName != null and genreName != ''">
                and genre.name LIKE CONCAT(CONCAT(#{genreName}),'%')
            </if>
            <if test="customerId != null and customerId != ''">
                and customer.id = #{customerId}
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and customer.company_id = #{currentCompanyId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


    <!-- 自动创建，可以修改 -->
    <select id="getCustomerUnitPriceListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field2"></include>
        from vmes_product_unit pu
        left join vmes_dictionary unit on unit.id = pu.unit
        left join vmes_sale_unit_price sup on pu.product_id = sup.product_id and pu.unit = sup.unit
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="customerId != null and customerId != ''">
                and sup.customer_id  = #{customerId}
            </if>
            <if test="productId != null and productId != ''">
                and sup.product_id  = #{productId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getCustomerUnitPriceHisListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field3"></include>
        from vmes_sale_deliver_detail detail
        left join vmes_sale_order_detail orderdetail on orderdetail.id = detail.order_detai_id
        left join vmes_dictionary unit on unit.id = orderdetail.price_unit
        left join vmes_sale_order saleorder on saleorder.id = detail.order_id
        left join vmes_user cuser on cuser.id = saleorder.cuser
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="customerId != null and customerId != ''">
                and saleorder.customer_id  = #{customerId}
            </if>
            <if test="productId != null and productId != ''">
                and detail.product_id  = #{productId}
            </if>
            <if test="unit != null and unit != ''">
                and orderdetail.price_unit  = #{unit}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>



</mapper>