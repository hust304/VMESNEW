<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_sale_wares_retreat_detail:无订单退货明细 Mapper.xml
创建人：陈刚 自动创建
创建时间：2019-12-05
 -->
<mapper namespace="com.xy.vmes.deecoop.sale.dao.SaleWaresRetreatDetailMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_sale_wares_retreat_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_sale_wares_retreat_detail
        set isdisable = '0', udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'saleWaresRetreatDetail';
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','parentId','退货单id',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','inDetailId','入库明细id',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','productId','货品id',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','orderUnit','单据单位id',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','productUnit','计量单位id',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','orderCount','退货数量(单据单位)',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','productCount','退货数量(计量数量)',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','orderPrice','货品单价(单据单价)',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','orderSum','退货金额(单据退货数量 * 单据 单价)',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','state','状态(0:待提交 1:待审核 2:已完成:审核通过 -1:已取消)',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','reason','退货原因',11, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','cuser','创建用户id',12, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','cdate','创建时间',13, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','uuser','修改用户id',14, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','udate','修改时间',15, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','remark','备注',16, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'saleWaresRetreatDetail','isdisable','是否启用(0:已禁用 1:启用)',17, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''), 'saleWaresRetreatDetail', 'productCode', '货品编码', 18, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleWaresRetreatDetail', 'productName', '货品名称', 19, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleWaresRetreatDetail', 'productSpec', '规格型号', 20, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleWaresRetreatDetail', 'productGenre', '货品属性id', 21, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleWaresRetreatDetail', 'productGenreName', '货品属性', 22, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleWaresRetreatDetail', 'orderUnitName', '单位', 23, '1', '1', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'saleWaresRetreatDetail', 'p2nFormula', 'p2nFormula', 24, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin'),
            (replace(uuid(), '-', ''), 'saleWaresRetreatDetail', 'n2pFormula', 'n2pFormula', 25, '1', '0', '1', '0', '2018-12-6 09:16:39', 'admin')
    </insert>

    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_sale_wares_retreat_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentIds != null and parentIds != ''" >
                and parent_id in (${parentIds})
            </if>
        </where>
    </update>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.SaleWaresRetreatDetail">
        select
        id id,
        parent_id parentId,
        in_detail_id inDetailId,
        product_id productId,
        order_unit orderUnit,

        product_unit productUnit,
        order_count orderCount,
        product_count productCount,
        order_price orderPrice,
        order_sum orderSum,

        state state,
        reason reason,
        cuser cuser,
        cdate cdate,
        uuser uuser,

        udate udate,
        remark remark,
        isdisable isdisable
        from vmes_sale_wares_retreat_detail
        <where>
            <!--isSelfExist 是否考虑自己在业务表中是否存在
                false: (false or is null) 无需考虑自己在业务表中是否存在
                true : 需要考虑自己在业务表中是否存在
            -->
            <if test='id != null and id != ""' >
                <choose>
                    <when test="'true' == isSelfExist">
                        <![CDATA[ and id <> #{id} ]]>
                    </when>
                    <otherwise>
                        and id = #{id}
                    </otherwise>
                </choose>
            </if>

            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""'>
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id id,
            detail.parent_id parentId,
            detail.in_detail_id inDetailId,
            detail.product_id productId,
            detail.order_unit orderUnit,

            detail.product_unit productUnit,
            round(ifnull(detail.order_count, 0), 2) orderCount,
            round(ifnull(detail.product_count, 0), 2) productCount,
            detail.order_price orderPrice,
            round(ifnull(detail.order_sum, 0), 2) orderSum,

            detail.state state,
            detail.reason reason,
            detail.cuser cuser,
            detail.cdate cdate,
            detail.uuser uuser,

            detail.udate udate,
            detail.remark remark,
            detail.isdisable isdisable,

            <!--货品表-->
            product.code sysProductCode,
            product.source_code custProductCode,
            CASE
              WHEN product.source_code is null THEN product.code
              WHEN product.source_code is not null THEN product.source_code
            ELSE null
            END productCode,
            product.name productName,
            product.spec productSpec,
            product.genre productGenre,
            genre.name productGenreName,

            <!--货品单位(订单单位)-->
            orderUnit.name orderUnitName,
            orderProdUnit.np_formula n2pFormula,
            orderProdUnit.pn_formula p2nFormula

        from vmes_sale_wares_retreat_detail detail
            left join vmes_product product on detail.product_id = product.id
            left join vmes_dictionary genre on product.genre = genre.id
            left join vmes_dictionary orderUnit on detail.order_unit = orderUnit.id
            left join vmes_product_unit orderProdUnit on (detail.product_id = orderProdUnit.product_id and detail.order_unit = orderProdUnit.unit)

        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>



            <!--queryStr 自定义sql查询语句-->
            <if test='queryStr != null and queryStr != ""' >
                and ${queryStr}
            </if>
        </where>
        <if test='orderStr != null and orderStr != ""' >
            order by ${orderStr}
        </if>
    </select>


</mapper>