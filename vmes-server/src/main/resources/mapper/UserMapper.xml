<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_user:系统用户表 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-07-26
 -->
<mapper namespace="com.xy.vmes.deecoop.system.dao.UserMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_user
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		employ_id employId,<!-- 员工ID -->
		dept_id deptId,<!-- 部门ID -->
		company_id companyId,<!-- 公司ID-组织架构 -->
		user_code userCode,<!-- 账号(系统登录账号) -->
		password password,<!-- 密码(MD5加密) -->
		open_id openId,<!-- 用户微信ID -->
		mobile mobile,<!-- 手机号码 -->
		email email,<!-- 邮箱地址 -->
		user_name userName,<!-- 姓名 -->
		page_style pageStyle,<!-- 界面样式风格 -->
		isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		cdate cdate,<!-- 创建时间 -->
		cuser cuser,<!-- 创建人账号 -->
		udate udate,<!-- 修改时间 -->
		uuser uuser,<!-- 修改人账号 -->
		column_1 column1,<!-- 预留字段 -->
		column_2 column2,<!-- 预留字段 -->
		column_3 column3,<!-- 预留字段 -->
        user_type userType,<!-- 用户类型 -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{employId},<!-- 员工ID -->
		#{deptId},<!-- 部门ID -->
		#{companyId},<!-- 公司ID-组织架构 -->
		#{userCode},<!-- 账号(系统登录账号) -->
		#{password},<!-- 密码(MD5加密) -->
		#{openId},<!-- 用户微信ID -->
		#{mobile},<!-- 手机号码 -->
		#{email},<!-- 邮箱地址 -->
		#{userName},<!-- 姓名 -->
		#{pageStyle},<!-- 界面样式风格 -->
		#{isdisable},<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
		#{cdate},<!-- 创建时间 -->
		#{cuser},<!-- 创建人账号 -->
		#{udate},<!-- 修改时间 -->
		#{uuser},<!-- 修改人账号 -->
		#{column1},<!-- 预留字段 -->
		#{column2},<!-- 预留字段 -->
		#{column3},<!-- 预留字段 -->
        #{userType},<!-- 用户类型 -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段值 自动创建，禁止修改-->
    <sql id="Column">
        '员工ID'  employId,
        '部门ID'  deptId,
        '公司ID-组织架构'  companyId,
        '账号(系统登录账号)'  userCode,
        '密码(MD5加密)'  password,
        '用户微信ID'  openId,
        '手机号码'  mobile,
        '邮箱地址'  email,
        '姓名'  userName,
        '界面样式风格'  pageStyle,
        '是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable'  isdisable,
        '创建时间'  cdate,
        '创建人账号'  cuser,
        '修改时间'  udate,
        '修改人账号'  uuser,
        '预留字段'  column1,
        '预留字段'  column2,
        '预留字段'  column3,
        '用户类型'  userType,
        'id' id
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.User">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
            <if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
                and
                (
                <!--	根据需求自己加检索条件
                            字段1 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                             or
                            字段2 LIKE CONCAT(CONCAT('%', #{keywords}),'%')
                        -->
                )
            </if>
        </where>
    </select>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.User">
        select
            <include refid="Field"></include>
        from
            <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id!=''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>
                    <if test="deptId != null and deptId != ''" >
                        and dept_id = #{deptId}
                    </if>

                    <if test="userCode != null and userCode != ''" >
                        and user_code = #{userCode}
                    </if>
                    <if test="isdisable != null and isdisable != ''" >
                        and isdisable = #{isdisable}
                    </if>
                    <if test="userType != null and userType != ''" >
                        and user_type = #{userType}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr!=''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
        <!--queryStr 自定义sql查询语句-->
        <if test="queryStr != null and queryStr!=''" >
            and ${queryStr}
        </if>
    </delete>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->


    <!-- 判断用户手机号是否存在  刘威 -->
    <select id="isExistMobile"  parameterType="com.yvan.PageData"  resultType="com.xy.vmes.entity.User">
        select
        id
        from
        <include refid="tableName"></include>
        where
        mobile = #{mobile} and isdisable = 1
        <if test="id != null and id!=''" >
            <![CDATA[ and id <> #{id} ]]>
        </if>
        <!--queryStr 自定义sql查询语句-->
        <if test="queryStr != null and queryStr!=''" >
            and ${queryStr}
        </if>
    </select>

    <!-- 刘威 2018-08-03-->
    <update id="updateToDisableByEmployIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = 0,udate = now()
        where isdisable =0 and employ_id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
        <!--queryStr 自定义sql查询语句-->
        <if test="queryStr != null and queryStr!=''" >
            and ${queryStr}
        </if>
    </update>

    <!-- 批量修改用户信息为禁用状态 刘威-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = 0,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
        <!--queryStr 自定义sql查询语句-->
        <if test="queryStr != null and queryStr!=''" >
            and ${queryStr}
        </if>
    </update>


    <!-- 表格列名 刘威-->
    <sql id="Column1">
        '账号'  userCode,
        '姓名'  userName,
        '手机号'  mobile,
        '邮箱'  email,
        '用户类型' userType,
        '角色名称' roleName,
        '所属公司' companyName,
        '是否启用'  isdisable,
        '员工ID'  employId_hide,
        '角色ID'  roleId_hide,
        '部门ID'  deptId_hide,
        '公司ID'  companyId_hide,
        '创建时间'  cdate,
        'id' id_hide
    </sql>

    <!-- 表格表体值 刘威-->
    <sql id="Field1">
        vmesuser.user_code userCode,<!-- 账号(系统登录账号) -->
        vmesuser.user_name userName,<!-- 姓名 -->
        vmesuser.user_type userType,<!-- 用户类型 -->
        vmesuser.mobile mobile,<!-- 手机号码 -->
        vmesuser.email email,<!-- 邮箱地址 -->
        vmesuser.isdisable isdisable,<!-- 是否禁用(0:已禁用 1:启用) 数据字典:sys_isdisable -->
        vmesuser.employ_id employId,<!-- 员工ID -->
        vmesuser.dept_id deptId,<!-- 部门ID -->
        vmesuser.company_id companyId,<!-- 公司ID-组织架构 -->
        company.name companyName,<!-- 所属公司 -->
        vmesuser.cdate cdate,<!-- 创建时间 -->
        role.id roleId,<!-- 角色ID -->
        case when role.company_id is null then "企业管理员" else role.name end roleName,<!-- 角色名称 -->
        vmesuser.id id <!-- id -->
    </sql>



    <!-- 列表表头查询 -->
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>

    <!-- 列表表体数据查询 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from vmes_user vmesuser
        left join vmes_department company on company.id = vmesuser.company_id
        <where>
            <if test="currentUserId != 0"><!-- 超级管理员 -->
                and company_id in (select company_id from vmes_user where id = #{currentUserId})
            </if>
            <if test="userCode!= null and userCode != ''"><!-- 关键词检索 -->
                and vmesuser.user_code LIKE CONCAT(CONCAT('%', #{userCode}),'%')
            </if>
            <if test="userName!= null and userName != ''"><!-- 关键词检索 -->
                and vmesuser.user_name LIKE CONCAT(CONCAT('%', #{userName}),'%')
            </if>
            <if test="mobile!= null and mobile != ''"><!-- 关键词检索 -->
                and vmesuser.mobile LIKE CONCAT(CONCAT('%', #{mobile}),'%')
            </if>
            <if test="email!= null and email != ''"><!-- 关键词检索 -->
                and vmesuser.email LIKE CONCAT(CONCAT('%', #{email}),'%')
            </if>
            <if test="userType!= null and userType != ''"><!-- 关键词检索 -->
                and vmesuser.user_type LIKE CONCAT(CONCAT('%', #{userType}),'%')
            </if>
            <if test="isdisable!= null and isdisable != ''"><!-- 关键词检索 -->
                and vmesuser.isdisable = #{isdisable}
            </if>
            <if test="deptId!= null and deptId != ''"><!-- 关键词检索 -->
                and vmesuser.dept_id = #{deptId}
            </if>
            <if test="queryStr != null and queryStr!=''" ><!-- 自定义查询 -->
                and ${queryStr}
            </if>
        </where>
        order by vmesuser.user_code ASC
    </select>


    <!-- 列表表体数据查询 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from vmes_user vmesuser
        left join vmes_department company on company.id = vmesuser.company_id
        left join vmes_user_role userrole on userrole.user_id = vmesuser.id
        left join vmes_role role on role.id = userrole.role_id
        <where>
            <if test="currentUserId != 0"><!-- 超级管理员 -->
                and company_id in (select company_id from vmes_user where id = #{currentUserId})
            </if>
            <if test="userCode!= null and userCode != ''"><!-- 关键词检索 -->
                and vmesuser.user_code LIKE CONCAT(CONCAT('%', #{userCode}),'%')
            </if>
            <if test="userName!= null and userName != ''"><!-- 关键词检索 -->
                and vmesuser.user_name LIKE CONCAT(CONCAT('%', #{userName}),'%')
            </if>
            <if test="mobile!= null and mobile != ''"><!-- 关键词检索 -->
                and vmesuser.mobile LIKE CONCAT(CONCAT('%', #{mobile}),'%')
            </if>
            <if test="email!= null and email != ''"><!-- 关键词检索 -->
                and vmesuser.email LIKE CONCAT(CONCAT('%', #{email}),'%')
            </if>
            <if test="userType!= null and userType != ''"><!-- 关键词检索 -->
                and vmesuser.user_type LIKE CONCAT(CONCAT('%', #{userType}),'%')
            </if>
            <if test="isdisable!= null and isdisable != ''"><!-- 关键词检索 -->
                and vmesuser.isdisable = #{isdisable}
            </if>
            <if test="deptId!= null and deptId != ''"><!-- 关键词检索 -->
                and vmesuser.dept_id = #{deptId}
            </if>
            <if test="queryStr != null and queryStr!=''" ><!-- 自定义查询 -->
                and ${queryStr}
            </if>
        </where>
        order by vmesuser.user_code ASC
    </select>

    <update id="updateDisableByCompanyIds" parameterType="java.lang.String" >
        update <include refid="tableName" />
            set isdisable = '0', company_id = null
        where
            user_type = '1' and company_id in
            <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                #{item}
            </foreach>
        <!--queryStr 自定义sql查询语句-->
        <if test="queryStr != null and queryStr!=''" >
            and ${queryStr}
        </if>
    </update>



</mapper>