<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_warehouse_check_executor:库存盘点明细执行人 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-11-15
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehouseCheckExecutorMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_warehouse_check_executor
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_warehouse_check_executor
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'warehouseCheckExecutor' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','parentId','盘点单ID',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','detailId','明细ID',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','executorId','执行人ID',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','cuser','创建用户id',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','cdate','创建时间',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','uuser','修改用户id',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','udate','修改时间',7, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','remark','备注',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','isdisable','是否启用(0:已禁用 1:启用)',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseCheckExecutor','id','id',0, '1','1','1','0',now(), 'admin')
    </insert>

    <update id="updateIsdisableByExecutor" parameterType="com.yvan.PageData" >
        update vmes_warehouse_check_executor set
        isdisable = #{isdisable},
        remark = #{remark},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
            <if test="detailId != null and detailId != ''" >
                and detail_id = #{detailId}
            </if>
            <if test="executorId != null and executorId != ''" >
                and executor_id = #{}
            </if>
        </where>
    </update>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseCheckExecutor">
        select
        id id,
        parent_id parentId,
        detail_id detailId,
        executor_id executorId,
        cuser cuser,

        cdate cdate,
        uuser uuser,
        udate udate,
        remark remark,
        isdisable isdisable
        from vmes_warehouse_check_executor
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>


                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
            id id,
            parent_id parentId,
            detail_id detailId,
            executor_id executorId,
            cuser cuser,

            cdate cdate,
            uuser uuser,
            udate udate,
            remark remark,
            isdisable isdisable
        from vmes_warehouse_check_executor
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 获取盘点明细执行人列表 -->
    <select id="findListWarehouseCheckExecutorByAddExecute" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            executor.id id,
            executor.parent_id parentId,
            executor.detail_id detailId,
            executor.executor_id executorId,
            executor.cuser cuser,

            executor.cdate cdate,
            executor.uuser uuser,
            executor.udate udate,
            executor.remark remark,
            executor.isdisable isdisable,

            <!--vmes_warehouse:仓库货位表-->
            warehouse.path_name pathName,
            warehouse.code warehouseCode,

            <!--盘点明细表-->
            detail.warehouse_product_id warehouseProductId,
            detail.warehouse_id warehouseId,
            detail.product_id productId,
            detail.code code,
            detail.state state,
            round(ifnull(wp.stock_count, 0), 2) stockCount,
            round(ifnull(wp.stock_count, 0), 2) count,

            <!--货品表-->
            product.code productCode,
            product.name productName,
            product.spec productSpec,
            product.unit productUnit,
            product.genre productGenre,
            product.type productType,
            unit.name productUnitName,
            genre.name productGenreName

        from vmes_warehouse_check_executor executor
            left join vmes_warehouse_check_detail detail on executor.detail_id = detail.id
            left join vmes_warehouse_product wp on detail.warehouse_product_id = wp.id
            left join vmes_warehouse warehouse on detail.warehouse_id = warehouse.id and warehouse.isdisable = '1'
            left join vmes_product product on detail.product_id = product.id and product.isdisable = '1'
            left join vmes_dictionary unit on product.unit = unit.id
            left join vmes_dictionary genre on product.genre = genre.id
        <where>
            <if test="parentId != null and parentId != ''" >
                and executor.parent_id = #{parentId}
            </if>
            <if test="detailState != null and detailState != ''" >
                and detail.state = #{detailState}
            </if>
            and executor.isdisable = '1'

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>



</mapper>