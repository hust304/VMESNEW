<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_warehouse_in_detail:仓库入库单明细 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-10-16
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehouseInDetailMapper">

    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_warehouse_in_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'warehouseInDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            ('67cf4289d5a511e884ad00163e105f05', 'warehouseInDetail', 'id', 'id', 0, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('bf3db7b7d5a611e884ad00163e105f05', 'warehouseInDetail', 'productCode', '货品编码', 1, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin');
            ('bf3db85fd5a611e884ad00163e105f05', 'warehouseInDetail', 'productName', '货品名称', 2, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin');
            ('bf3db8dbd5a611e884ad00163e105f05', 'warehouseInDetail', 'productSpec', '规格型号', 3, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin');
            ('bf3db94fd5a611e884ad00163e105f05', 'warehouseInDetail', 'genreName', '货品属性', 4, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin');
            ('bf3e2a69d5a611e884ad00163e105f05', 'warehouseInDetail', 'unitName', '计量单位', 5, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin');
            ('bf3db6aad5a611e884ad00163e105f05', 'warehouseInDetail', 'unit', '计量单位id', 5, '1', '0', '1', '0', '2018-10-22 11:01:18', 'admin');
            ('67cf3fe4d5a511e884ad00163e105f05', 'warehouseInDetail', 'count', '入库数量', 6, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('bf3db5fbd5a611e884ad00163e105f05', 'warehouseInDetail', 'executeCount', '已完成数量', 7, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin');
            ('67cf3f85d5a511e884ad00163e105f05', 'warehouseInDetail', 'code', '批次号', 8, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf3878d5a511e884ad00163e105f05', 'warehouseInDetail', 'executeId', '执行人id', 9, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('711b914dd5a811e884ad00163e105f05', 'warehouseInDetail', 'executeName', '执行人', 9, '1', '1', '1', '0', '2018-10-22 11:13:26', 'admin');
            ('bf3db282d5a611e884ad00163e105f05', 'warehouseInDetail', 'stateName', '状态', 10, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin');
            ('67cf4037d5a511e884ad00163e105f05', 'warehouseInDetail', 'state', '状态id', 10, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf41e3d5a511e884ad00163e105f05', 'warehouseInDetail', 'remark', '备注', 11, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf34b2d5a511e884ad00163e105f05', 'warehouseInDetail', 'parentId', '入库单id', 12, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf3f12d5a511e884ad00163e105f05', 'warehouseInDetail', 'productId', '货品id', 13, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf3cfdd5a511e884ad00163e105f05', 'warehouseInDetail', 'warehouseId', '仓库货位id', 14, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf4095d5a511e884ad00163e105f05', 'warehouseInDetail', 'cuser', '创建用户id', 15, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf40e7d5a511e884ad00163e105f05', 'warehouseInDetail', 'cdate', '创建时间', 16, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf4139d5a511e884ad00163e105f05', 'warehouseInDetail', 'uuser', '修改用户id', 17, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf4189d5a511e884ad00163e105f05', 'warehouseInDetail', 'udate', '修改时间', 18, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('67cf4233d5a511e884ad00163e105f05', 'warehouseInDetail', 'isdisable', '是否启用', 19, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');

    </insert>

    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_warehouse_in_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
        </where>
    </update>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseInDetail">
        select
            id id,
            parent_id parentId,
            execute_id executeId,
            warehouse_id warehouseId,
            product_id productId,

            code code,
            count count,
            state state,
            cuser cuser,
            cdate cdate,

            uuser uuser,
            udate udate,
            remark remark,
            isdisable isdisable
        from vmes_warehouse_in_detail
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="parentId != null and parentId != ''" >
                        and parent_id = #{parentId}
                    </if>
                    <if test="code != null and code != ''" >
                        and code = #{code}
                    </if>
                    <if test="productId != null and productId != ''" >
                        and product_id = #{productId}
                    </if>
                    <if test="warehouseId != null and warehouseId != ''" >
                        and warehouse_id = #{warehouseId}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            a.id id,
            a.parent_id parentId,
            a.execute_id executeId,
            a.warehouse_id warehouseId,
            a.product_id productId,

            a.code code,
            a.count count,
            a.state state,
            a.cuser cuser,
            a.cdate cdate,

            a.uuser uuser,
            a.udate udate,
            a.remark remark,
            a.isdisable isdisable,

            <!--货品表-->
            prod.code productCode,
            prod.name productName,
            prod.spec productSpec,
            prod.unit,
            unit.name unitName,
            '' genreName,
            <!--获取已执行数量-入库执行表-->
            b.count executeCount
        from vmes_warehouse_in_detail a
            left join vmes_product prod on a.product_id = prod.id
            left join vmes_dictionary unit on prod.unit = unit.id
            left join (
                select detail_id,sum(count) count
                from vmes_warehouse_in_execute v
                group by detail_id
            ) b on a.id = b.detail_id
        <where>
            <if test="parentId != null and parentId != ''" >
                and a.parent_id = #{parentId}
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>



</mapper>