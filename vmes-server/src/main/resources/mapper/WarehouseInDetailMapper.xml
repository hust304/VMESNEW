<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_warehouse_in_detail:仓库入库单明细 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-10-16
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehouseInDetailMapper">

    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_warehouse_in_detail
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn0" >
        delete from vmes_column where model_code = 'warehouseInDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            ('67cf4289d5a511e884ad00163e105f05', 'warehouseInDetail', 'id', 'id', 0, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin');
            ('bf3db7b7d5a611e884ad00163e105f05', 'warehouseInDetail', 'productCode', '货品编码', 1, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
            ('bf3db85fd5a611e884ad00163e105f05', 'warehouseInDetail', 'productName', '货品名称', 2, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
            ('bf3db8dbd5a611e884ad00163e105f05', 'warehouseInDetail', 'productSpec', '规格型号', 3, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
            ('bf3db94fd5a611e884ad00163e105f05', 'warehouseInDetail', 'productGenreName', '货品属性', 4, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
            ('bf3e2a69d5a611e884ad00163e105f05', 'warehouseInDetail', 'productUnitName', '计量单位', 5, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
            ('bf3db6aad5a611e884ad00163e105f05', 'warehouseInDetail', 'productUnit', '计量单位id', 5, '1', '0', '1', '0', '2018-10-22 11:01:18', 'admin'),
            ('67cf3fe4d5a511e884ad00163e105f05', 'warehouseInDetail', 'count', '入库数量', 6, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('bf3db5fbd5a611e884ad00163e105f05', 'warehouseInDetail', 'executeCount', '已完成数量', 7, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
            ('67cf3f85d5a511e884ad00163e105f05', 'warehouseInDetail', 'code', '批次号', 8, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf3878d5a511e884ad00163e105f05', 'warehouseInDetail', 'executeId', '执行人id', 9, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('711b914dd5a811e884ad00163e105f05', 'warehouseInDetail', 'executeName', '执行人', 9, '1', '1', '1', '0', '2018-10-22 11:13:26', 'admin'),
            ('bf3db282d5a611e884ad00163e105f05', 'warehouseInDetail', 'stateName', '状态', 10, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
            ('67cf4037d5a511e884ad00163e105f05', 'warehouseInDetail', 'state', '状态id', 10, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf41e3d5a511e884ad00163e105f05', 'warehouseInDetail', 'remark', '备注', 11, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf34b2d5a511e884ad00163e105f05', 'warehouseInDetail', 'parentId', '入库单id', 12, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf3f12d5a511e884ad00163e105f05', 'warehouseInDetail', 'productId', '货品id', 13, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf3cfdd5a511e884ad00163e105f05', 'warehouseInDetail', 'warehouseId', '仓库货位id', 14, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf4095d5a511e884ad00163e105f05', 'warehouseInDetail', 'cuser', '创建用户id', 15, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf40e7d5a511e884ad00163e105f05', 'warehouseInDetail', 'cdate', '创建时间', 16, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf4139d5a511e884ad00163e105f05', 'warehouseInDetail', 'uuser', '修改用户id', 17, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf4189d5a511e884ad00163e105f05', 'warehouseInDetail', 'udate', '修改时间', 18, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            ('67cf4233d5a511e884ad00163e105f05', 'warehouseInDetail', 'isdisable', '是否启用', 19, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'qrcode', 'qrcode', 0, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),

            (replace(uuid(), '-', ''), 'warehouseInDetail', 'productCount', '计量单位数量', 21, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'priceCount', '计价单位数量', 22, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'priceUnit', '计价单位id', 23, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'priceUnitName', '计价单位', 24, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

            (replace(uuid(), '-', ''), 'warehouseInDetail', 'n2pFormula', 'n2p:公式', 25, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'n2pIsScale', 'n2p:是否需要四舍五入', 26, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'n2pDecimalCount', 'n2p:保留小数位数', 27, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

            (replace(uuid(), '-', ''), 'warehouseInDetail', 'p2nFormula', 'p2n:公式', 28, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'p2nIsScale', 'p2n:是否需要四舍五入', 29, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'p2nDecimalCount', 'p2n:保留小数位数', 30, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
            (replace(uuid(), '-', ''), 'warehouseInDetail', 'price', '单价', 31, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

    </insert>

    <insert id="insertColumn1" >
        delete from vmes_column where model_code = 'warehouseInDetailProduct' ;
        insert into vmes_column (
          id,model_code,title_key,title_name,serial_number,
          isdisable,ishide,isedit,ismust,cdate,
          cuser
        ) VALUES
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'id', 'id', 0, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'productCode', '货品编码', 1, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'productName', '货品名称', 2, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'productSpec', '规格型号', 3, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'productGenreName', '货品属性', 4, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'productUnitName', '计量单位', 5, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'productUnit', '计量单位id', 5, '1', '0', '1', '0', '2018-10-22 11:01:18', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'count', '入库数量', 6, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'executeCount', '已完成数量', 7, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'code', '批次号', 8, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'executeId', '执行人id', 9, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'executeName', '执行人', 9, '1', '1', '1', '0', '2018-10-22 11:13:26', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'stateName', '状态', 10, '1', '1', '1', '0', '2018-10-22 11:01:18', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'state', '状态id', 10, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'remark', '备注', 11, '1', '1', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'parentId', '入库单id', 12, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'productId', '货品id', 13, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'warehouseId', '仓库货位id', 14, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'cuser', '创建用户id', 15, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'cdate', '创建时间', 16, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'uuser', '修改用户id', 17, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'udate', '修改时间', 18, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'isdisable', '是否启用', 19, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),

        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'priceUnit', '计价单位id', 21, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'priceUnitName', '计价单位', 22, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'priceCount', '计价数量', 23, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),

        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'productCount', '入库数量', 24, '1', '0', '1', '0', '2018-10-22 10:51:42', 'admin'),

        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'n2pIsScale', 'n2p:是否需要四舍五入', 25, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'n2pDecimalCount', 'n2p:保留小数位数', 26, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'p2nIsScale', 'p2n:是否需要四舍五入', 27, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'p2nDecimalCount', 'p2n:保留小数位数', 28, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),

        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'n2pFormula', 'n2p:公式', 29, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'p2nFormula', 'p2n:公式', 30, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'price', '单价', 31, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),
        (replace(uuid(), '-', ''), 'warehouseInDetailProduct', 'priceSum', '金额', 32, '1', '0', '1', '0', '2018-12-5 17:38:48', 'admin'),


    </insert>

    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_warehouse_in_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
        </where>
    </update>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseInDetail">
        select
            id id,
            qrcode qrcode,
            business_id businessId,
            parent_id parentId,
            execute_id executeId,

            warehouse_id warehouseId,
            product_id productId,
            code code,
            count count,
            state state,

            cuser cuser,
            cdate cdate,
            uuser uuser,
            udate udate,
            remark remark,

            isdisable isdisable,
            product_unit productUnit,
            product_count productCount,
            price_unit priceUnit,
            price_count priceCount,

            price price
        from vmes_warehouse_in_detail
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="parentId != null and parentId != ''" >
                        and parent_id = #{parentId}
                    </if>
                    <if test="code != null and code != ''" >
                        and code = #{code}
                    </if>
                    <if test="productId != null and productId != ''" >
                        and product_id = #{productId}
                    </if>
                    <if test="warehouseId != null and warehouseId != ''" >
                        and warehouse_id = #{warehouseId}
                    </if>

                    <!--isNeedRetreat-->
                    <if test="'true' == isNeedRetreat" >
                        and id in (
                            select in_detail_id
                            from vmes_sale_retreat_detail
                            where parent_id = #{retreatId}
                        )
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            a.id id,
            a.parent_id parentId,
            a.qrcode qrcode,
            a.business_id businessId,
            a.execute_id executeId,
            '' executeName,

            a.warehouse_id warehouseId,
            warehouse.path_name warehouseName,
            a.product_id productId,
            a.code code,
            ifnull(a.count, 0) count,

            a.state state,
            CASE
            WHEN a.state = '0' THEN '待派单'
            WHEN a.state = '1' THEN '执行中'
            WHEN a.state = '2' THEN '已完成'
            WHEN a.state = '-1' THEN '已取消'
            ELSE null
            END stateName,

            a.cuser cuser,
            DATE_FORMAT(a.cdate,'%Y-%m-%d %T') cdate,
            a.uuser uuser,
            DATE_FORMAT(a.udate,'%Y-%m-%d %T') udate,
            a.remark remark,

            a.isdisable isdisable,
            a.product_unit productUnit,
            ifnull(a.product_count, 0) productCount,
            a.price_unit priceUnit,
            ifnull(a.price_count, 0) priceCount,
            round(ifnull(a.price, 0), 2) price,

            <!--货品表-->
            prod.code sysProductCode,
            prod.source_code custProductCode,
            CASE
              WHEN prod.source_code is null THEN prod.code
              WHEN prod.source_code is not null THEN prod.source_code
            ELSE null
            END productCode,
            prod.name productName,
            prod.spec productSpec,
            productUnit.name productUnitName,
            priceUnit.name priceUnitName,

            prod.genre productGenre,
            genre.name productGenreName,
            prod.type productType,

            priceUnitFormula.np_formula n2pFormula,
            priceUnitFormula.n2p_is_scale n2pIsScale,
            priceUnitFormula.n2p_decimal_count n2pDecimalCount,

            priceUnitFormula.pn_formula p2nFormula,
            priceUnitFormula.p2n_is_scale p2nIsScale,
            priceUnitFormula.p2n_decimal_count p2nDecimalCount,

            <!--入库单表-->
            parent.code parentCode,
            parent.make_id makeId,
            <!--获取已执行数量-入库执行表-->
            ifnull(inDtlExecute.executeCount,0) executeCount,
            <!--剩余数量-->
            (ifnull(a.count,0) - ifnull(inDtlExecute.executeCount,0)) surplusCount

        from vmes_warehouse_in_detail a
            left join vmes_warehouse warehouse on a.warehouse_id = warehouse.id
            left join vmes_warehouse_in parent on a.parent_id = parent.id
            left join vmes_product prod on a.product_id = prod.id

            left join vmes_dictionary productUnit on a.product_unit = productUnit.id
            left join vmes_dictionary priceUnit on a.price_unit = priceUnit.id
            <!--货品计价单位公式-->
            left join vmes_product_unit priceUnitFormula on a.product_id = priceUnitFormula.product_id and a.price_unit = priceUnitFormula.unit and priceUnitFormula.isdisable = '1'

            left join vmes_dictionary genre on prod.genre = genre.id
            <!--入库执行表汇总 vmes_product_unit-->
            left join (
                select detail_id, sum(count) executeCount
                from vmes_warehouse_in_execute
                where isdisable = '1'
                group by detail_id
            ) inDtlExecute on a.id = inDtlExecute.detail_id

        <where>
            <if test="detailId != null and detailId != ''" >
                and a.id = #{detailId}
            </if>
            <if test="parentId != null and parentId != ''" >
                and a.parent_id = #{parentId}
            </if>
            <if test="state != null and state != ''" >
                and a.state = #{state}
            </if>
            <!--过滤出当前登录用户是(入库)执行人 (vmes_warehouse_in_executor) 查询语句-->
            <if test="'true' == isNeedExecutor">
                and a.id in (
                select detail_id
                from vmes_warehouse_in_executor
                <where>
                    <if test="cuser != null and cuser != ''" >
                        and executor_id = #{cuser}
                    </if>
                    and isdisable = '1'
                </where>
                )
            </if>

            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <select id="findWarehouseInMapList" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            detail.id detailId,
            detail.parent_id parentId,
            parent.code parentCode,
            round(ifnull(detail.count,0),2) detailCount

        from vmes_warehouse_in_detail detail
            left join (
                select id,code
                from vmes_warehouse_in
                <where>
                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>
                </where>
            ) parent on detail.parent_id = parent.id
        <where>
            <if test="parentId != null and parentId != ''" >
                and detail.parent_id = #{parentId}
            </if>
            <if test="code != null and code != ''" >
                and detail.code = #{code}
            </if>
            <if test="productId != null and productId != ''" >
                and detail.product_id = #{productId}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>

    </select>



</mapper>