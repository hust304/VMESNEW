<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_warehouse_in:仓库入库单 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-10-16
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehouseInMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_warehouse_in
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_warehouse_in
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'warehouseIn' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            ('88d302b0d5a411e884ad00163e105f05', 'warehouseIn', 'id', 'id', 0, '1', '0', '1', '0', '2018-10-22 10:45:28', 'admin');
            ('9a37622ed5a211e884ad00163e105f05', 'warehouseIn', 'code', '入库单编码', 1, '1', '1', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a376597d5a211e884ad00163e105f05', 'warehouseIn', 'type', '入库类型id', 2, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a377244d5a211e884ad00163e105f05', 'warehouseIn', 'typeName', '入库类型', 2, '1', '1', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a376cbcd5a211e884ad00163e105f05', 'warehouseIn', 'warehouseId', '仓库id', 3, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('c3b9e937d5a311e884ad00163e105f05', 'warehouseIn', 'warehouseName', '仓库', 3, '1', '1', '1', '0', '2018-10-22 10:39:57', 'admin');
            ('9a376d57d5a211e884ad00163e105f05', 'warehouseIn', 'deptId', '来源单位id', 4, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a376dcad5a211e884ad00163e105f05', 'warehouseIn', 'deptName', '来源单位', 4, '1', '1', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('c3b9ed14d5a311e884ad00163e105f05', 'warehouseIn', 'makeName', '制单人', 5, '1', '1', '1', '0', '2018-10-22 10:39:57', 'admin');
            ('9a376e3ad5a211e884ad00163e105f05', 'warehouseIn', 'makeId', '制单人id', 5, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a377092d5a211e884ad00163e105f05', 'warehouseIn', 'cdate', '创建时间', 6, '1', '1', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('c17259bfd5a411e884ad00163e105f05', 'warehouseIn', 'stateName', '状态', 7, '1', '1', '1', '0', '2018-10-22 10:47:03', 'admin');
            ('9a376e9cd5a211e884ad00163e105f05', 'warehouseIn', 'state', '状态id', 7, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a377030d5a211e884ad00163e105f05', 'warehouseIn', 'cuser', '创建用户id', 8, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a3770e8d5a211e884ad00163e105f05', 'warehouseIn', 'uuser', '修改用户id', 9, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a37713ed5a211e884ad00163e105f05', 'warehouseIn', 'udate', '修改时间', 10, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a377193d5a211e884ad00163e105f05', 'warehouseIn', 'remark', '备注', 11, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
            ('9a3771e4d5a211e884ad00163e105f05', 'warehouseIn', 'isdisable', '是否启用', 12, '1', '0', '1', '0', '2018-10-22 10:31:38', 'admin');
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseIn">
        select
            id id,
            company_id companyId,
            code code,
            type type,
            warehouse_id warehouseId,

            dept_id deptId,
            dept_name deptName,
            make_id makeId,
            state state,
            cuser cuser,

            cdate cdate,
            uuser uuser,
            udate udate,
            remark remark,
            isdisable isdisable
        from vmes_warehouse_in
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="code != null and code != ''" >
                        and code = #{code}
                    </if>
                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>

                    <if test="type != null and type != ''" >
                        and type = #{type}
                    </if>
                    <if test="warehouseId != null and warehouseId != ''" >
                        and warehouse_id = #{warehouseId}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            distinct
            a.id id,
            <!--级联table 传值用 -->
            a.id parentId,
            a.company_id companyId,
            a.code code,
            a.type type,
            type.name typeName,
            a.warehouse_id warehouseId,
            b.name warehouseName,

            a.dept_id deptId,
            a.dept_name deptName,
            a.make_id makeId,
            c.user_name makeName,
            a.state state,
            CASE
              WHEN a.state = '0' THEN '未完成'
              WHEN a.state = '1' THEN '已完成'
              WHEN a.state = '-1' THEN '已取消'
            ELSE null
            END stateName,
            a.cuser cuser,

            DATE_FORMAT(a.cdate,'%Y-%m-%d %T') cdate,
            a.uuser uuser,
            DATE_FORMAT(a.udate,'%Y-%m-%d %T') udate,
            a.remark remark,
            a.isdisable isdisable
    from vmes_warehouse_in a
        left join vmes_warehouse b on a.warehouse_id = b.id
        left join vmes_user c on a.make_id = c.id
        left join vmes_dictionary type on a.type = type.id

        left join vmes_warehouse_in_detail d on a.id = d.parent_id
        left join vmes_product prod on d.product_id = prod.id
        left join vmes_dictionary genre on prod.genre = genre.id
        left join vmes_dictionary unit on prod.unit = unit.id
    <where>
        <if test="code != null and code != ''">
            and a.code LIKE CONCAT(CONCAT(#{code}),'%')
        </if>
        <if test="currentCompanyId != null and currentCompanyId != ''" >
            and a.company_id = #{currentCompanyId}
        </if>
        <if test="state != null and state != ''" >
            and a.state = #{state}
        </if>

        <if test="type != null and type != ''" >
            and a.type = #{type}
        </if>
        <if test="warehouseId != null and warehouseId != ''" >
            and a.warehouse_id = #{warehouseId}
        </if>

        <if test="detailState != null and detailState != ''" >
            and d.state = #{detailState}
        </if>

        <!--过滤出当前登录用户是(入库)执行人 (vmes_warehouse_in_executor) 查询语句-->
        <if test="'true' == isNeedExecutor">
            and a.id in (
                select parent.id
                from (
                    select detail_id,executor_id
                    from vmes_warehouse_in_executor
                    <where>
                        <if test="cuser != null and cuser != ''" >
                            and executor_id = #{cuser}
                        </if>
                        and isdisable = '1'
                    </where>
                    group by detail_id,executor_id
                ) executor
                left join vmes_warehouse_in_detail detail on executor.detail_id = detail.id
                left join vmes_warehouse_in parent on detail.parent_id = parent.id
            )
        </if>

        <!--按货品属性 查询语句-->
        <if test="productCode != null and productCode != ''">
            and prod.code LIKE CONCAT(CONCAT(#{productCode}),'%')
        </if>
        <if test="productName != null and productName != ''">
            and prod.name LIKE CONCAT(CONCAT(#{productName}),'%')
        </if>
        <if test="productSpec != null and productSpec != ''">
            and prod.spec LIKE CONCAT(CONCAT(#{productSpec}),'%')
        </if>
        <if test="productGenreName != null and productGenreName != ''">
            and genre.name LIKE CONCAT(CONCAT(#{productGenreName}),'%')
        </if>
        <if test="productUnitName != null and productUnitName != ''">
            and unit.name LIKE CONCAT(CONCAT(#{productUnitName}),'%')
        </if>

        <!--queryStr 自定义sql查询语句-->
        <if test="queryStr != null and queryStr != ''" >
            and ${queryStr}
        </if>
    </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


</mapper>