<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：移库单明细 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-11-16
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehouseMoveDetailMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_warehouse_move_detail
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		parent_id parentId,<!-- 移库单ID -->
		warehouse_product_id warehouseProductId,<!-- 当前库位产品ID -->
		count count,<!-- 移库数量 -->
		state state,<!-- 状态(0:待派单 1:执行中 2:已完成) -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		remark remark,<!-- 备注 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		qrcode qrcode,<!-- 二维码-(图片相对路径) -->
		id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{parentId},<!-- 移库单ID -->
		#{warehouseProductId},<!-- 当前库位产品ID -->
		#{count},<!-- 移库数量 -->
		#{state},<!-- 状态(0:待派单 1:执行中 2:已完成) -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{remark},<!-- 备注 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{qrcode},<!-- 二维码-(图片相对路径) -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '移库单ID'  parentId,
        '当前库位产品ID'  warehouseProductId,
        '移库数量'  count,
        '状态(0:待派单 1:执行中 2:已完成)'  state,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        '二维码-(图片相对路径)'  qrcode,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseMoveDetail">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'WarehouseMoveDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','productCode','货品编码',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','productName','货品名称',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','productSpec',' 规格/型号',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','productGenre','货品属性ID',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','productGenreName','货品属性',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','productUnit','计量单位ID',6, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','productUnitName','计量单位',7, '1','1','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseMoveDetail','parentId','移库单ID',8, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','warehouseId',' 货位ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','warehouseProductId',' 货位产品ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','productId','产品ID',11, '1','0','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseMoveDetail','pathName','当前库位',12, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','code','批次号',13, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','stockCount','库存数量',14, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','count','移库数量',15, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','executeCount','已完成数量',16, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','state','状态',17, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','cuser','创建用户id',18, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','cdate','创建时间',19, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','uuser','修改用户id',20, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','udate','修改时间',21, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','remark','备注',22, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','isdisable','是否启用',23, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','qrcode','二维码',24, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetail','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>



    <insert id="insertColumn1" >
        delete from vmes_column where model_code = 'WarehouseMoveDetailExecute' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','productCode','货品编码',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','productName','货品名称',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','productSpec',' 规格/型号',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','productGenre','货品属性ID',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','productGenreName','货品属性',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','productUnit','计量单位ID',6, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','productUnitName','计量单位',7, '1','1','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','parentId','移库单ID',8, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','warehouseId',' 货位ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','warehouseProductId',' 货位产品ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','productId','产品ID',11, '1','0','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','pathName','当前库位',12, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','code','批次号',13, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','stockCount','库存数量',14, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','count','移库数量',15, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','executeCount','已完成数量',16, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','suggestCount','待执行数量',17, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','state','状态',17, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','cuser','创建用户id',18, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','cdate','创建时间',19, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','uuser','修改用户id',20, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','udate','修改时间',21, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','remark','备注',22, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','isdisable','是否启用',23, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','qrcode','二维码',24, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailExecute','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>



    <insert id="insertColumn2" >
        delete from vmes_column where model_code = 'WarehouseMoveDetailRecords' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','productCode','货品编码',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','productName','货品名称',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','productSpec',' 规格/型号',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','productGenre','货品属性ID',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','productGenreName','货品属性',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','productUnit','计量单位ID',6, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','productUnitName','计量单位',7, '1','1','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','parentId','移库单ID',8, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','warehouseId',' 货位ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','warehouseProductId',' 货位产品ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','productId','产品ID',11, '1','0','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','pathName','当前库位',12, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','code','批次号',13, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','stockCount','库存数量',14, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','count','移库数量',15, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','executeCount','已完成数量',16, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','state','状态',17, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','cuser','创建用户id',18, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','cdate','创建时间',19, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','uuser','修改用户id',20, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','udate','修改时间',21, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','remark','备注',22, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','isdisable','是否启用',23, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','qrcode','二维码',24, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseMoveDetailRecords','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseMoveDetail">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="parentId != null and parentId != ''" >
                        and parent_id = #{parentId}
                    </if>
                    <if test="warehouseProductId != null and warehouseProductId != ''" >
                        and warehouse_product_id = #{warehouseProductId}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        detail.parent_id parentId,
        whprod.warehouse_id warehouseId,
        whprod.id warehouseProductId,
        whprod.product_id productId,
        whprod.code code,
        round(whprod.stock_count,2) stockCount,
        round(detail.count,2) count,
        case when detail.state=-1 then '已取消' when detail.state=0 then '待派单' when detail.state=1 then '执行中' when detail.state=2 then '已完成' else null end state,
        detail.cuser cuser,
        DATE_FORMAT(detail.cdate,'%Y-%m-%d %T') cdate,
        detail.uuser uuser,
        DATE_FORMAT(detail.udate,'%Y-%m-%d %T') udate,
        detail.remark remark,
        detail.isdisable isdisable,
        detail.qrcode qrcode,

        prod.code productCode,
        prod.name productName,
        prod.spec productSpec,
        prod.genre productGenre,
        genre.name productGenreName,
        produnit.unit productUnit,
        unit.name productUnitName,

        warehouse.path_name pathName,
        whmove.code warehouseMoveCode,
        round(moveexecute.count,2) executeCount,
        detail.id id
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '移库单ID'  parentId,
            '当前库位产品ID'  warehouseProductId,
            '移库数量'  count,
            '状态(0:待派单 1:执行中 2:已完成)'  state,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            '二维码-(图片相对路径)'  qrcode,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select parentId,warehouseId,warehouseProductId,productId,code,count,state,cuser,cdate,udate,remark,isdisable,qrcode,stockCount,pathName,
        productCode,productName,productSpec,productGenre,productGenreName,productUnit,productUnitName,round(sum(ifnull(executeCount,0)),2) executeCount,warehouseMoveCode,id

        from (
        select
        <include refid="Field1"></include>
        from
        vmes_warehouse_move_detail detail
        left join vmes_warehouse_move whmove on whmove.id = detail.parent_id
        left join vmes_warehouse_move_execute moveexecute on moveexecute.detail_id = detail.id and moveexecute.isdisable = '1'
        left join vmes_warehouse_product whprod on whprod.id = detail.warehouse_product_id
        left join vmes_product prod on prod.id = whprod.product_id
        left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
        left join vmes_dictionary genre on prod.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary lastUnit on prod.last_unit = lastUnit.id
        left join vmes_dictionary type on prod.type = type.id
        left join vmes_warehouse warehouse on warehouse.id = whprod.warehouse_id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="parentId != null and parentId != ''">
                and detail.parent_id =  #{parentId}
            </if>
            <if test="productCode != null and productCode != ''">
                and prod.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
            </if>
            <if test="productName != null and productName != ''">
                and prod.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
            </if>
            <if test="productSpec != null and productSpec != ''">
                and prod.spec LIKE CONCAT(CONCAT('%', #{productSpec}),'%')
            </if>
            <if test="productGenreName != null and productGenreName != ''">
                and genre.name LIKE CONCAT(CONCAT('%', #{productGenreName}),'%')
            </if>
            <if test="productUnitName != null and productUnitName != ''">
                and unit.name LIKE CONCAT(CONCAT('%', #{productUnitName}),'%')
            </if>

            <if test="detailState != null and detailState != ''">
                and detail.state =  #{detailState}
            </if>
        </where>
        ) tab
        group by id

        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select parentId,warehouseId,warehouseProductId,productId,code,count,state,cuser,cdate,udate,remark,isdisable,qrcode,stockCount,pathName,
        productCode,productName,productSpec,productGenre,productGenreName,productUnit,productUnitName,round(sum(ifnull(executeCount,0)),2) executeCount,warehouseMoveCode,id

        from (
        select
        <include refid="Field1"></include>
        from
        vmes_warehouse_move_detail detail
        left join vmes_warehouse_move whmove on whmove.id = detail.parent_id
        left join vmes_warehouse_move_execute moveexecute on moveexecute.detail_id = detail.id and moveexecute.isdisable = '1'
        left join vmes_warehouse_product whprod on whprod.id = detail.warehouse_product_id
        left join vmes_product prod on prod.id = whprod.product_id
        left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
        left join vmes_dictionary genre on prod.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary lastUnit on prod.last_unit = lastUnit.id
        left join vmes_dictionary type on prod.type = type.id
        left join vmes_warehouse warehouse on warehouse.id = whprod.warehouse_id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="parentId != null and parentId != ''">
                and detail.parent_id =  #{parentId}
            </if>
            <if test="productCode != null and productCode != ''">
                and prod.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
            </if>
            <if test="productName != null and productName != ''">
                and prod.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
            </if>
            <if test="productSpec != null and productSpec != ''">
                and prod.spec LIKE CONCAT(CONCAT('%', #{productSpec}),'%')
            </if>
            <if test="productGenreName != null and productGenreName != ''">
                and genre.name LIKE CONCAT(CONCAT('%', #{productGenreName}),'%')
            </if>
            <if test="productUnitName != null and productUnitName != ''">
                and unit.name LIKE CONCAT(CONCAT('%', #{productUnitName}),'%')
            </if>

            <if test="detailState != null and detailState != ''">
                and detail.state =  #{detailState}
            </if>
        </where>
        ) tab
        group by id

        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 手机端获取移库信息 -->
    <select id="findListPageWarehouseMoveDetail"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        detail.id detailId,
        wmove.id parentId,
        round(detail.count,2) taskCount,
        round(sum(ifnull(execute.count,0)),2) taskDone,
        round((round(detail.count,2)-(sum(ifnull(execute.count,0)))),2) taskLeft,
        product.name productName,
        product.code productCode,
        product.spec spec,
        genre.name genreName,
        unit.name unitName,
        wproduct.code pathCode,
        oldwarehouse.path_name originPath,
        newwarehouse.path_name targetPath

        from vmes_warehouse_move_detail detail
        left join vmes_warehouse_move wmove on wmove.id = detail.parent_id
        left join vmes_warehouse_move_execute execute on execute.detail_id = detail.id
        left join vmes_warehouse_product wproduct on detail.warehouse_product_id = wproduct.id
        left join vmes_warehouse oldwarehouse on oldwarehouse.id = wproduct.warehouse_id
        left join vmes_warehouse_product wproduct2 on execute.new_warehouse_product_id = wproduct2.id
        left join vmes_warehouse newwarehouse on newwarehouse.id = wproduct2.warehouse_id
        left join vmes_product product on wproduct.product_id = product.id
        left join vmes_product_unit produnit on produnit.product_id = product .id and produnit.type = 1
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary genre on product.genre = genre.id

        <where>
            <if test="detailId != null and detailId != ''">
                and detail.id =  #{detailId}
            </if>
        </where>

    </select>



</mapper>