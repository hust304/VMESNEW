<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：移库单 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-11-16
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehouseMoveMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_warehouse_move
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
		company_id companyId,<!-- 企业ID-组织架构 -->
		code code,<!-- 移库单编码 -->
		type type,<!-- 操作类型(1:按库位 2:货品) -->
		warehouse_id warehouseId,<!-- 目标库位 -->
		make_id makeId,<!-- 制单人ID -->
		state state,<!-- 状态(0:未完成 1:已完成 -1:已取消) -->
		cuser cuser,<!-- 创建用户id -->
		cdate cdate,<!-- 创建时间 -->
		uuser uuser,<!-- 修改用户id -->
		udate udate,<!-- 修改时间 -->
		remark remark,<!-- 备注 -->
		isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
		id id, <!-- id -->
        is_simple isSimple,
        warehouse_attribute warehouseAttribute
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
		#{companyId},<!-- 企业ID-组织架构 -->
		#{code},<!-- 移库单编码 -->
		#{type},<!-- 操作类型(1:按库位 2:货品) -->
		#{warehouseId},<!-- 目标库位 -->
		#{makeId},<!-- 制单人ID -->
		#{state},<!-- 状态(0:未完成 1:已完成 -1:已取消) -->
		#{cuser},<!-- 创建用户id -->
		#{cdate},<!-- 创建时间 -->
		#{uuser},<!-- 修改用户id -->
		#{udate},<!-- 修改时间 -->
		#{remark},<!-- 备注 -->
		#{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
		#{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '企业ID-组织架构'  companyId,
        '移库单编码'  code,
        '操作类型(1:按库位 2:货品)'  type,
        '目标库位'  warehouseId,
        '制单人ID'  makeId,
        '状态(0:未完成 1:已完成 -1:已取消)'  state,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseMove">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <delete id="deleteTableByDetail" parameterType="com.yvan.PageData">
        delete from vmes_warehouse_move_detail
        where parent_id in (
            select id from vmes_warehouse_move
            <where>
                <if test="companyId != null and companyId != ''" >
                    and company_id = #{companyId}
                </if>
            </where>
        )
    </delete>

    <delete id="deleteTableByExecutor" parameterType="com.yvan.PageData">
        delete from vmes_warehouse_move_executor
        where detail_id in (
            select id from vmes_warehouse_move_detail
            where parent_id in (
                select id from vmes_warehouse_move
                <where>
                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>
                </where>
            )
        )
    </delete>

    <delete id="deleteTableByExecute" parameterType="com.yvan.PageData">
        delete from vmes_warehouse_move_execute
        where detail_id in (
            select id from vmes_warehouse_move_detail
            where parent_id in (
                select id from vmes_warehouse_move
                <where>
                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>
                </where>
            )
        )
    </delete>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'WarehouseMove' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'WarehouseMove','companyId','企业ID-组织架构',1, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','code','移库单号',2, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','type','操作类型ID',3, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','typeName','操作类型',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','warehouseName','目标库位',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','warehouseId','目标库位ID',5, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','makeName','制单人',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','makeId','制单人ID',7, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','cdate','制单时间',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','state','状态',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','stateName','状态',9, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','cuser','创建用户id',10, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','uuser','修改用户id',11, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','udate','修改时间',12, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','remark','备注',13, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','isdisable','是否启用',14, '1','0','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'WarehouseMove','id','id',0, '1','0','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'WarehouseMove','pathName','目标库位',15, '1','0','1','0',now(), 'admin'),
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseMove">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>


                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
        distinct
        warehousemove.company_id companyId,<!-- 企业ID-组织架构 -->
        warehousemove.code code,<!-- 移库单编码 -->
        type.id type,<!-- 移库类型-(字典表-vmes_dictionary.id) -->
        type.name typeName,
        warehouse.path_name warehouseName,
        warehousemove.warehouse_id warehouseId,<!-- 仓库ID(仓库表-layer:2的记录) -->
        user.user_name makeName,
        warehousemove.make_id makeId,<!-- 制单人ID -->
        warehousemove.state,
        case when warehousemove.state=-1 then '已取消' when warehousemove.state=0 then '未完成' when warehousemove.state=1 then '已完成' else null end stateName,<!-- 状态(0:未完成 1:已完成 -1:已取消) -->
        warehousemove.cuser cuser,<!-- 创建用户id -->
        DATE_FORMAT(warehousemove.cdate,'%Y-%m-%d') cdate,
        warehousemove.uuser uuser,<!-- 修改用户id -->
        DATE_FORMAT(warehousemove.udate,'%Y-%m-%d') udate,
        warehousemove.remark remark,<!-- 备注 -->
        warehousemove.isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
        warehousemove.id id, <!-- id -->
        warehousemove.is_simple isSimple
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '企业ID-组织架构'  companyId,
            '移库单编码'  code,
            '操作类型(1:按库位 2:货品)'  type,
            '目标库位'  warehouseId,
            '制单人ID'  makeId,
            '状态(0:未完成 1:已完成 -1:已取消)'  state,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_warehouse_move warehousemove
        left join vmes_dictionary type on type.id = warehousemove.type
        left join vmes_warehouse warehouse on warehouse.id = warehousemove.warehouse_id
        left join vmes_user user on user.id = warehousemove.make_id

        left join vmes_warehouse_move_detail detail on detail.parent_id = warehousemove.id
        left join vmes_warehouse_product wp on wp.id = detail.warehouse_product_id
        left join vmes_product prod on prod.id = wp.product_id
        left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
        left join vmes_dictionary genre on prod.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="code != null and code != ''">
                and warehousemove.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and warehousemove.company_id = #{currentCompanyId}
            </if>

            <if test="typeName != null and typeName != ''">
                and type.name LIKE CONCAT(CONCAT('%', #{typeName}),'%')
            </if>
            <if test="warehouseName != null and warehouseName != ''">
                and warehouse.name LIKE CONCAT(CONCAT('%', #{warehouseName}),'%')
            </if>

            <if test="state != null and state != ''">
                and warehousemove.state =  #{state}
            </if>

            <if test="productCode != null and productCode != ''">
                and prod.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
            </if>
            <if test="productName != null and productName != ''">
                and prod.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
            </if>
            <if test="productSpec != null and productSpec != ''">
                and prod.spec LIKE CONCAT(CONCAT('%', #{productSpec}),'%')
            </if>
            <if test="productGenreName != null and productGenreName != ''">
                and genre.name LIKE CONCAT(CONCAT('%', #{productGenreName}),'%')
            </if>
            <if test="productUnitName != null and productUnitName != ''">
                and unit.name LIKE CONCAT(CONCAT('%', #{productUnitName}),'%')
            </if>

            <if test="detailState != null and detailState != ''">
                and detail.state =  #{detailState}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>



    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field1"></include>
        from
        vmes_warehouse_move warehousemove
        left join vmes_dictionary type on type.id = warehousemove.type
        left join vmes_warehouse warehouse on warehouse.id = warehousemove.warehouse_id

        left join vmes_warehouse_move_detail detail on detail.parent_id = warehousemove.id
        left join vmes_warehouse_product wp on wp.id = detail.warehouse_product_id
        left join vmes_product prod on prod.id = wp.product_id
        left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
        left join vmes_dictionary genre on prod.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id

        left join vmes_user user on user.id = warehousemove.make_id
        left join vmes_department dept on dept.id = user.dept_id
        <where>

            <if test='dataType != null and dataType == "0"'>
                and user.id = #{currentUserId}
            </if>
            <if test='dataType != null and dataType == "1"'>
                and dept.id_${deptLayer} = #{deptId}
            </if>


            <if test="parentId != null and parentId != ''">
                and warehousemove.id = #{parentId}
            </if>
            <if test="code != null and code != ''">
                and warehousemove.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and warehousemove.company_id = #{currentCompanyId}
            </if>

            <if test="typeName != null and typeName != ''">
                and type.name LIKE CONCAT(CONCAT('%', #{typeName}),'%')
            </if>
            <if test="warehouseName != null and warehouseName != ''">
                and warehouse.name LIKE CONCAT(CONCAT('%', #{warehouseName}),'%')
            </if>

            <if test="state != null and state != ''">
                and warehousemove.state =  #{state}
            </if>

            <if test="productCode != null and productCode != ''">
                and prod.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
            </if>
            <if test="productName != null and productName != ''">
                and prod.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
            </if>
            <if test="productSpec != null and productSpec != ''">
                and prod.spec LIKE CONCAT(CONCAT('%', #{productSpec}),'%')
            </if>
            <if test="productGenreName != null and productGenreName != ''">
                and genre.name LIKE CONCAT(CONCAT('%', #{productGenreName}),'%')
            </if>
            <if test="productUnitName != null and productUnitName != ''">
                and unit.name LIKE CONCAT(CONCAT('%', #{productUnitName}),'%')
            </if>

            <if test="detailState != null and detailState != ''">
                and detail.state =  #{detailState}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>



    <!-- 自动创建，可以修改 -->
    <select id="getDataListPageBySimple"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
            distinct
            warehousemove.company_id companyId,<!-- 企业ID-组织架构 -->
            warehousemove.code code,<!-- 移库单编码 -->
            type.id type,<!-- 移库类型-(字典表-vmes_dictionary.id) -->
            type.name typeName,

            warehouse.path_name pathName,
            warehouse.name warehouseName,

            warehousemove.warehouse_id warehouseId,<!-- 仓库ID(仓库表-layer:2的记录) -->
            user.user_name makeName,
            warehousemove.make_id makeId,<!-- 制单人ID -->
            warehousemove.state,
            case when warehousemove.state=-1 then '已取消' when warehousemove.state=0 then '未完成' when warehousemove.state=1 then '已完成' else null end stateName,<!-- 状态(0:未完成 1:已完成 -1:已取消) -->
            warehousemove.cuser cuser,<!-- 创建用户id -->
            DATE_FORMAT(warehousemove.cdate,'%Y-%m-%d') cdate,
            warehousemove.uuser uuser,<!-- 修改用户id -->
            DATE_FORMAT(warehousemove.udate,'%Y-%m-%d') udate,
            warehousemove.remark remark,<!-- 备注 -->
            warehousemove.isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
            warehousemove.id id, <!-- id -->
            warehousemove.is_simple isSimple
        from
        vmes_warehouse_move warehousemove
        left join vmes_dictionary type on type.id = warehousemove.type
        left join vmes_warehouse warehouse on warehouse.id = warehousemove.warehouse_id
        left join vmes_user user on user.id = warehousemove.make_id
        left join vmes_warehouse_move_detail detail on detail.parent_id = warehousemove.id
        left join vmes_product prod on prod.id = detail.product_id
        left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
        left join vmes_dictionary genre on prod.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        <where>
            <if test="parentId != null and parentId != ''">
                and warehousemove.id = #{parentId}
            </if>
            <if test="code != null and code != ''">
                and warehousemove.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and warehousemove.company_id = #{currentCompanyId}
            </if>

            <if test="typeName != null and typeName != ''">
                and type.name LIKE CONCAT(CONCAT('%', #{typeName}),'%')
            </if>
            <if test="warehouseName != null and warehouseName != ''">
                and warehouse.name LIKE CONCAT(CONCAT('%', #{warehouseName}),'%')
            </if>

            <if test="state != null and state != ''">
                and warehousemove.state =  #{state}
            </if>
            <if test="createDateBegin != null and createDateBegin != ''">
                <![CDATA[ and warehousemove.cdate >= #{createDateBegin} ]]>
            </if>
            <if test="createDateEnd != null and createDateEnd != ''">
                <![CDATA[ and warehousemove.cdate <= #{createDateEnd} ]]>
            </if>

            <if test="productCode != null and productCode != ''">
                and prod.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
            </if>
            <if test="productName != null and productName != ''">
                and prod.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
            </if>
            <if test="productSpec != null and productSpec != ''">
                and prod.spec LIKE CONCAT(CONCAT('%', #{productSpec}),'%')
            </if>
            <if test="productGenreName != null and productGenreName != ''">
                and genre.name LIKE CONCAT(CONCAT('%', #{productGenreName}),'%')
            </if>
            <if test="productUnitName != null and productUnitName != ''">
                and unit.name LIKE CONCAT(CONCAT('%', #{productUnitName}),'%')
            </if>

            <if test="detailState != null and detailState != ''">
                and detail.state =  #{detailState}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>