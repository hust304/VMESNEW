<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：出库明细 Mapper.xml
创建人：刘威 自动创建
创建时间：2018-10-23
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehouseOutDetailMapper">

    <!--表名 自动创建，禁止修改-->
    <sql id="tableName">
	vmes_warehouse_out_detail
    </sql>

    <!-- 字段 自动创建，禁止修改-->
    <sql id="Field">
        parent_id parentId,<!-- 入库单ID -->
        execute_id executeId,<!-- 执行人ID -->
        warehouse_id warehouseId,<!--  (推荐)货位ID -->
        product_id productId,<!-- 产品ID -->
        code code,<!-- 货位批次号 -->
        count count,<!-- 入库数量 -->
        state state,<!-- 状态(0:待派单 1:执行中 2:已完成) -->
        cuser cuser,<!-- 创建用户id -->
        cdate cdate,<!-- 创建时间 -->
        uuser uuser,<!-- 修改用户id -->
        udate udate,<!-- 修改时间 -->
        remark remark,<!-- 备注 -->
        isdisable isdisable,<!-- 是否启用(0:已禁用 1:启用) -->
        qrcode qrcode,
        business_id businessId,
        id id <!-- id -->
    </sql>

    <!-- 字段值 自动创建，禁止修改-->
    <sql id="FieldValue">
        #{parentId},<!-- 入库单ID -->
        #{executeId},<!-- 执行人ID -->
        #{warehouseId},<!--  (推荐)货位ID -->
        #{productId},<!-- 产品ID -->
        #{code},<!-- 货位批次号 -->
        #{count},<!-- 入库数量 -->
        #{state},<!-- 状态(0:待派单 1:执行中 2:已完成) -->
        #{cuser},<!-- 创建用户id -->
        #{cdate},<!-- 创建时间 -->
        #{uuser},<!-- 修改用户id -->
        #{udate},<!-- 修改时间 -->
        #{remark},<!-- 备注 -->
        #{isdisable},<!-- 是否启用(0:已禁用 1:启用) -->
        #{qrcode},
        #{businessId},
        #{id} <!-- id -->
    </sql>


    <!-- 字段名称  '_hide' 表示前端列表隐藏 自动创建，禁止修改-->
    <sql id="Column">
        '入库单ID'  parentId,
        '执行人ID'  executeId,
        ' (推荐)货位ID'  warehouseId,
        '产品ID'  productId,
        '货位批次号'  code,
        '入库数量'  count,
        '状态(0:待派单 1:执行中 2:已完成)'  state,
        '创建用户id'  cuser,
        '创建时间'  cdate,
        '修改用户id'  uuser,
        '修改时间'  udate,
        '备注'  remark,
        '是否启用(0:已禁用 1:启用)'  isdisable,
        '二维码' qrcode,
        '业务id' businessId,
        'id' id_hide
    </sql>

    <!-- 自动创建，禁止修改 -->
    <select id="findColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column"></include>
        from dual
    </select>

    <!-- 自动创建，禁止修改 -->
    <select id="findDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 列表 自动创建，禁止修改-->
    <select id="datalistPage" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseOutDetail">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr!=''" >
                and ${queryStr}
            </if>
        </where>
    </select>


    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>



    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'WarehouseOutDetail' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseOutDetail','productCode','货品编码',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','productName','货品名称',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','productSpec',' 规格/型号',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','productGenre','货品属性ID',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','productGenreName','货品属性',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','productUnit','计量单位ID',6, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','productUnitName','计量单位',7, '1','1','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseOutDetail','parentId','出库单ID',8, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','warehouseId',' (推荐)货位ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','productId','产品ID',11, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','code','批次号',12, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','count','出库数量',13, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','executeCount','已出库数量',14, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','state','状态',15, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','cuser','创建用户id',16, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','cdate','创建时间',17, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','uuser','修改用户id',18, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','udate','修改时间',19, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','remark','备注',20, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','isdisable','是否启用',21, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','qrcode','二维码',22, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','businessId','业务id',23, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetail','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>

    <insert id="insertColumn1" >
        delete from vmes_column where model_code = 'WarehouseOutDetailDispatch' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','warehouseOutCode','出库单编码',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','productCode','货品编码',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','productName','货品名称',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','productSpec',' 规格/型号',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','productGenre','货品属性ID',5, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','productGenreName','货品属性',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','productUnit','计量单位ID',7, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','productUnitName','计量单位',8, '1','1','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','parentId','出库单ID',9, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','warehouseId',' (推荐)货位ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','productId','产品ID',11, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','code','批次号',12, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','count','出库数量',13, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','executeCount','已出库数量',14, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','state','状态',15, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','cuser','创建用户id',16, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','cdate','创建时间',17, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','uuser','修改用户id',18, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','udate','修改时间',19, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','remark','备注',20, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','isdisable','是否启用',21, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','qrcode','二维码',22, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','businessId','业务id',23, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailDispatch','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <insert id="insertColumn2" >
        delete from vmes_column where model_code = 'WarehouseOutDetailRecords' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','warehouseOutCode','出库单编码',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','productCode','货品编码',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','productName','货品名称',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','productSpec',' 规格/型号',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','productGenre','货品属性ID',5, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','productGenreName','货品属性',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','productUnit','计量单位ID',7, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','productUnitName','计量单位',8, '1','1','1','0',now(), 'admin'),

        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','parentId','出库单ID',9, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','warehouseId',' (推荐)货位ID',10, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','productId','产品ID',11, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','code','批次号',12, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','count','出库数量',13, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','executeCount','已出库数量',14, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','state','状态',15, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','cuser','创建用户id',16, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','cdate','创建时间',17, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','uuser','修改用户id',18, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','udate','修改时间',19, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','remark','备注',20, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','isdisable','是否启用',21, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','qrcode','二维码',22, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','businessId','业务id',23, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseOutDetailRecords','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseOutDetail">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="parentId != null and parentId != ''" >
                        and parent_id = #{parentId}
                    </if>
                    <if test="code != null and code != ''" >
                        and code = #{code}
                    </if>
                    <if test="productId != null and productId != ''" >
                        and product_id = #{productId}
                    </if>
                    <if test="warehouseId != null and warehouseId != ''" >
                        and warehouse_id = #{warehouseId}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




    <!-- 字段 自动创建，可以修改-->
    <sql id="Field1">
            detail.parent_id parentId,
            detail.warehouse_id warehouseId,
            detail.product_id productId,
            detail.code code,
            round(detail.count,2) count,
            case when detail.state=-1 then '已取消' when detail.state=0 then '待派单' when detail.state=1 then '执行中' when detail.state=2 then '已完成' else null end state,
            detail.cuser cuser,
            DATE_FORMAT(detail.cdate,'%Y-%m-%d %T') cdate,
            detail.uuser uuser,
            DATE_FORMAT(detail.udate,'%Y-%m-%d %T') udate,
            detail.remark remark,
            detail.isdisable isdisable,
            detail.qrcode qrcode,
            detail.business_id businessId,

            prod.code productCode,
            prod.name productName,
            prod.spec productSpec,
            prod.genre productGenre,
            genre.name productGenreName,
            produnit.unit productUnit,
            unit.name productUnitName,

            whout.code warehouseOutCode,
            round(outexecute.count,2) executeCount,
            detail.id id
    </sql>

    <!-- 字段值 自动创建，可以修改-->
    <!--
    <sql id="Column1">
            '入库单ID'  parentId,
            '执行人ID'  executeId,
            ' (推荐)货位ID'  warehouseId,
            '产品ID'  productId,
            '货位批次号'  code,
            '入库数量'  count,
            '状态(0:待派单 1:执行中 2:已完成)'  state,
            '创建用户id'  cuser,
            '创建时间'  cdate,
            '修改用户id'  uuser,
            '修改时间'  udate,
            '备注'  remark,
            '是否启用(0:已禁用 1:启用)'  isdisable,
            'id' id_hide
    </sql>
     -->

    <!-- 自动创建，可以修改 -->
    <!--
    <select id="getColumnList"  resultType="java.util.LinkedHashMap">
        select
        <include refid="Column1"></include>
        from dual
    </select>
    -->

    <!-- 自动创建，可以修改 -->
    <select id="getDataList"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select parentId,warehouseId,productId,code,count,state,cuser,cdate,udate,remark,isdisable,qrcode,
        businessId,productCode,productName,productSpec,productGenre,productGenreName,productUnit,productUnitName,round(sum(ifnull(executeCount,0)),2) executeCount,warehouseOutCode,id

        from (
            select
            <include refid="Field1"></include>
            from
            vmes_warehouse_out_detail detail
            left join vmes_warehouse_out whout on whout.id = detail.parent_id
            left join vmes_warehouse_out_execute outexecute on outexecute.detail_id = detail.id and outexecute.isdisable = '1'
            left join vmes_product prod on prod.id = detail.product_id
            left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
            left join vmes_dictionary genre on prod.genre = genre.id
            left join vmes_dictionary unit on produnit.unit = unit.id
            left join vmes_dictionary lastUnit on prod.last_unit = lastUnit.id
            left join vmes_dictionary type on prod.type = type.id
            <where>
                <!--queryStr 自定义sql查询语句-->
                <if test="queryStr != null and queryStr != ''" >
                    and ${queryStr}
                </if>
                <if test="parentId != null and parentId != ''">
                    and detail.parent_id =  #{parentId}
                </if>
                <if test="productCode != null and productCode != ''">
                    and prod.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
                </if>
                <if test="productName != null and productName != ''">
                    and prod.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
                </if>
                <if test="productSpec != null and productSpec != ''">
                    and prod.spec LIKE CONCAT(CONCAT('%', #{productSpec}),'%')
                </if>
                <if test="productGenreName != null and productGenreName != ''">
                    and genre.name LIKE CONCAT(CONCAT('%', #{productGenreName}),'%')
                </if>
                <if test="productUnitName != null and productUnitName != ''">
                    and unit.name LIKE CONCAT(CONCAT('%', #{productUnitName}),'%')
                </if>

                <if test="detailState != null and detailState != ''">
                    and detail.state =  #{detailState}
                </if>
            </where>
        ) tab
        group by id

        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select parentId,warehouseId,productId,code,count,state,cuser,cdate,udate,remark,isdisable,qrcode,
        businessId,productCode,productName,productSpec,productGenre,productGenreName,productUnit,productUnitName,round(sum(ifnull(executeCount,0)),2) executeCount,warehouseOutCode,id

        from (
            select
            <include refid="Field1"></include>
            from
            vmes_warehouse_out_detail detail
            left join vmes_warehouse_out whout on whout.id = detail.parent_id
            left join vmes_warehouse_out_execute outexecute on outexecute.detail_id = detail.id and outexecute.isdisable = '1'
            left join vmes_product prod on prod.id = detail.product_id
            left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
            left join vmes_dictionary genre on prod.genre = genre.id
            left join vmes_dictionary unit on produnit.unit = unit.id
            left join vmes_dictionary lastUnit on prod.last_unit = lastUnit.id
            left join vmes_dictionary type on prod.type = type.id
            <where>
                <!--queryStr 自定义sql查询语句-->
                <if test="queryStr != null and queryStr != ''" >
                    and ${queryStr}
                </if>
                <if test="parentId != null and parentId != ''">
                    and detail.parent_id =  #{parentId}
                </if>
                <if test="productCode != null and productCode != ''">
                    and prod.code LIKE CONCAT(CONCAT('%', #{productCode}),'%')
                </if>
                <if test="productName != null and productName != ''">
                    and prod.name LIKE CONCAT(CONCAT('%', #{productName}),'%')
                </if>
                <if test="productSpec != null and productSpec != ''">
                    and prod.spec LIKE CONCAT(CONCAT('%', #{productSpec}),'%')
                </if>
                <if test="productGenreName != null and productGenreName != ''">
                    and genre.name LIKE CONCAT(CONCAT('%', #{productGenreName}),'%')
                </if>
                <if test="productUnitName != null and productUnitName != ''">
                    and unit.name LIKE CONCAT(CONCAT('%', #{productUnitName}),'%')
                </if>

                <if test="detailState != null and detailState != ''">
                    and detail.state =  #{detailState}
                </if>
            </where>
        ) tab
        group by id
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <update id="updateStateByDetail" parameterType="com.yvan.PageData" >
        update vmes_warehouse_out_detail set
        state = #{state},
        udate = now()
        <where>
            <if test="parentId != null and parentId != ''" >
                and parent_id = #{parentId}
            </if>
        </where>
    </update>


</mapper>