<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_warehouse_position:仓库货位表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-10-09
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehousePositionMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from
        <include refid="tableName"></include>
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update
        <include refid="tableName"></include>
        set isdisable = '0' ,udate = now()
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'position' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'position','pid','上级id-根root',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','companyId','公司ID-组织架构',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','property','仓库属性(1:实体库 2:虚拟库)',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','entityType','实体库-仓库类型-(货品属性一致)-(字典表-vmes_dictionary.id)',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','virtualGenre','虚拟库-属性(1:内部单位 2:外部单位)',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','virtualDeptId','内部单位(部门ID)',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','virtualDeptName','内部单位名称',7, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','virtualCustomerId','外部单位ID(客户id)',8, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','virtualCustomerName','外部单位名称',9, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','isWarehouse','是否是仓库(0:非仓库 1:是仓库)',10, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','layer','货位级别',11, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','qrcode','二维码-(图片相对路径)',12, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','code','货位编码',13, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','name','货位名称',14, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','nameEn','英文名称',15, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','pathName','根节点到本节点路径名称',16, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','pathId','根节点到本节点路径ID',17, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','isopen','是否公开 (0:不公开:企业内部维护 1:公开:超级管理员维护)',18, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','remark','备注',19, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','cuser','创建用户id',20, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','cdate','创建时间',21, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','uuser','修改用户id',22, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','udate','修改时间',23, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','isdisable','是否启用(0:已禁用 1:启用)',24, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'position','id','id',0, '1','1','1','0',now(), 'admin')
    </insert>


    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehousePosition">
        select
            id id,
            pid pid,
            company_id companyId,
            property property,
            entity_type entityType,

            virtual_genre virtualGenre,
            virtual_dept_id virtualDeptId,
            virtual_dept_name virtualDeptName,
            virtual_customer_id virtualCustomerId,
            virtual_customer_name virtualCustomerName,

            is_warehouse isWarehouse,
            layer layer,
            qrcode qrcode,
            code code,
            name name,

            name_en nameEn,
            path_name pathName,
            path_id pathId,
            isopen isopen,
            cuser cuser,

            cdate cdate,
            uuser uuser,
            udate udate,
            isdisable isdisable,
            remark remark
        from
            vmes_warehouse_position
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="pid != null and pid != ''" >
                        and pid=#{pid}
                    </if>
                    <if test="code != null and code != ''" >
                        and code=#{code}
                    </if>
                    <if test="name != null and name != ''" >
                        and name=#{name}
                    </if>
                    <if test="companyId != null and companyId != ''" >
                        and company_id=#{companyId}
                    </if>

                    <if test="isdisable != null and isdisable != ''" >
                        and isdisable=#{isdisable}
                    </if>
                    <if test="property != null and property != ''" >
                        and property=#{property}
                    </if>
                    <if test="isWarehouse != null and isWarehouse != ''" >
                        and is_warehouse=#{isWarehouse}
                    </if>
                    <if test="layer != null and layer != ''" >
                        and layer=#{layer}
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            id id,
            pid pid,
            company_id companyId,
            property property,
            entity_type entityType,

            virtual_genre virtualGenre,
            virtual_dept_id virtualDeptId,
            virtual_dept_name virtualDeptName,
            virtual_customer_id virtualCustomerId,
            virtual_customer_name virtualCustomerName,

            is_warehouse isWarehouse,
            layer layer,
            qrcode qrcode,
            code code,
            name name,

            name_en nameEn,
            path_name pathName,
            path_id pathId,
            isopen isopen,
            cuser cuser,

            cdate cdate,
            uuser uuser,
            udate udate,
            isdisable isdisable,
            remark remark
        from
            vmes_warehouse_position
        <where>
            <if test="code != null and code != ''">
                and code LIKE CONCAT(CONCAT(#{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and name LIKE CONCAT(CONCAT(#{name}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''" >
                and company_id=#{currentCompanyId}
            </if>

            <if test="isdisable != null and isdisable != ''" >
                and isdisable=#{isdisable}
            </if>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>




</mapper>