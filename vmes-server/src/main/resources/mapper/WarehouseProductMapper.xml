<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
说明：vmes_warehouse_product:仓库货位产品库存表 Mapper.xml
创建人：陈刚 自动创建
创建时间：2018-10-16
 -->
<mapper namespace="com.xy.vmes.deecoop.warehouse.dao.WarehouseProductMapper">

    <!-- 批量删除 自动创建，禁止修改-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from vmes_warehouse_product
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>

    <!-- 自动创建，禁止修改-->
    <update id="updateToDisableByIds" parameterType="java.lang.String" >
        update vmes_warehouse_product
        set isdisable = '0' ,udate = now()
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
        #{item}
        </foreach>
    </update>

    <!-- ***************************************************以上为自动生成代码禁止修改，请在下面添加业务代码************************************************* -->
    <delete id="deleteTable" parameterType="com.yvan.PageData">
        delete from vmes_warehouse_product
        <where>
            <if test="companyId != null and companyId != ''" >
                and company_id = #{companyId}
            </if>
            <!--过滤出 (备件库)-->
            <if test="'true' == isNeedWarehouseSpare">
                and warehouse_id in (
                select id from vmes_warehouse
                <where>
                    <if test="currentCompanyId != null and currentCompanyId != ''" >
                        and company_id = #{currentCompanyId}
                    </if>
                    and name = '备件库' and layer = 2
                </where>
                )
            </if>

            <!--过滤出(非备件库) 自定义sql查询语句-->
            <if test="'true' == isNeedNotInWarehouseSpare">
                and warehouse_id not in (
                select id from vmes_warehouse
                <where>
                    <if test="currentCompanyId != null and currentCompanyId != ''" >
                        and company_id = #{currentCompanyId}
                    </if>
                    and name = '备件库' and layer = 2
                </where>
                )
            </if>
        </where>
    </delete>

    <insert id="insertColumn" >
        delete from vmes_column where model_code = 'warehouseProduct' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
            (replace(uuid(), '-', ''),'warehouseProduct','id','id',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','qrcode','qrcode',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','companyId','companyId',0, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','warehouseId','仓库货位ID',1, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','productId','产品ID',2, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'warehouseProduct','code','货位批次号',3, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','stockCount','库存数量',4, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','cuser','创建用户id',5, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','cdate','创建时间',6, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','uuser','修改用户id',7, '1','1','1','0',now(), 'admin'),

            (replace(uuid(), '-', ''),'warehouseProduct','auditDate','审核时间',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','udate','修改时间',8, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','remark','备注',9, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','isdisable','是否启用(0:已禁用 1:启用)',10, '1','1','1','0',now(), 'admin'),
            (replace(uuid(), '-', ''),'warehouseProduct','version','版本号(库存数量修改时)',11, '1','1','1','0',now(), 'admin')
    </insert>

    <!-- 列表(全部) 自动创建，禁止修改-->
    <select id="dataList" parameterType="com.yvan.PageData" resultType="com.xy.vmes.entity.WarehouseProduct">
        select
            id id,
            qrcode qrcode,
            company_id companyId,
            warehouse_id warehouseId,
            product_id productId,

            code code,
            stock_count stockCount,
            cuser cuser,
            cdate cdate,
            uuser uuser,

            audit_date auditDate,
            udate udate,
            remark remark,
            isdisable isdisable,
            version version
        from vmes_warehouse_product
        <choose>
            <!--
                mapSize (0 or is null) 无查询参数-业务层传入
                isQueryAll 是否查询全部
                fasle: (false or is null) 无查询条件-查询结果集返回空或list.size()==0
                true : 无查询条件-返回全部业务表数据
            -->
            <when test="(mapSize == null || mapSize == 0) and 'true' != isQueryAll ">
                where 1=2
            </when>
            <otherwise>
                <where>
                    <!--isSelfExist 是否考虑自己在业务表中是否存在
                        false: (false or is null) 无需考虑自己在业务表中是否存在
                        true : 需要考虑自己在业务表中是否存在
                    -->
                    <if test="id != null and id != ''" >
                        <choose>
                            <when test="'true' == isSelfExist">
                                <![CDATA[ and id <> #{id} ]]>
                            </when>
                            <otherwise>
                                and id = #{id}
                            </otherwise>
                        </choose>
                    </if>
                    <if test="code != null and code != ''" >
                        and code = #{code}
                    </if>

                    <if test="productId != null and productId != ''" >
                        and product_id = #{productId}
                    </if>
                    <if test="queryProductStr != null and queryProductStr != ''" >
                        and ${queryProductStr}
                    </if>

                    <if test="warehouseId != null and warehouseId != ''" >
                        and warehouse_id = #{warehouseId}
                    </if>
                    <if test="queryWarehouseStr != null and queryWarehouseStr != ''" >
                        and ${queryWarehouseStr}
                    </if>

                    <if test="companyId != null and companyId != ''" >
                        and company_id = #{companyId}
                    </if>

                    <!--warehouseEdition(仓库版本): warehouseByComplex(复杂版仓库)-对应实体库(简版仓库过滤出) -->
                    <!--实体库 2d75e49bcb9911e884ad00163e105f05-->
                    <if test="'warehouseByComplex' == warehouseEdition">
                        and warehouse_id in (
                            select id from vmes_warehouse
                            <where>
                                <if test="companyId != null and companyId != ''" >
                                    and company_id = #{companyId}
                                </if>
                                and path_id like '%2d75e49bcb9911e884ad00163e105f05%'
                                and isdisable = '1'
                            </where>
                        )
                    </if>

                    <!--warehouseEdition(仓库版本): warehouseBySimple(简版仓库)-对应实体库(简版仓库) -->
                    <!--实体库 2d75e49bcb9911e884ad00163e105f05-->
                    <if test="'warehouseBySimple' == warehouseEdition">
                        and warehouse_id in (
                            select id from vmes_warehouse
                            <where>
                                <if test="companyId != null and companyId != ''" >
                                    and company_id = #{companyId}
                                </if>
                                and path_id like '%2d75e49bcb9911e884ad00163e105f05%'
                                and isdisable = '1'
                            </where>
                        )
                    </if>

                    <!--warehouseEdition(仓库版本): warehouseByVirtual(虚拟库) -->
                    <if test="'warehouseByVirtual' == warehouseEdition">
                        and warehouse_id in (
                            select id from vmes_warehouse
                            <where>
                                <if test="companyId != null and companyId != ''" >
                                    and company_id = #{companyId}
                                </if>
                                and dept_id = #{deptId}
                                and dept_place_key = #{deptPlaceKey}
                                and isdisable = '1'
                            </where>
                        )
                    </if>

                    <!--queryStr 自定义sql查询语句-->
                    <if test="queryStr != null and queryStr != ''" >
                        and ${queryStr}
                    </if>
                </where>
            </otherwise>
        </choose>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>


    <insert id="insertColumn1" >
        delete from vmes_column where model_code = 'WarehouseProductDispatch' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','name','货位名称',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','code','批次号',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','stockCount','库存数量',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','suggestCount','建议取货数量',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','warehouseId','仓库货位ID',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','productId','产品ID',5, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','isdisable','是否启用',6, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','companyId','公司ID',7, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatch','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <insert id="insertColumn2" >
        delete from vmes_column where model_code = 'WarehouseProductDispatchOption' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','name','货位名称',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','code','批次号',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','stockCount','库存数量',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','suggestCount','建议取货数量',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','warehouseId','仓库货位ID',4, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','productId','产品ID',5, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','isdisable','是否启用',6, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','companyId','公司ID',7, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductDispatchOption','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>



    <insert id="insertColumn3" >
        delete from vmes_column where model_code = 'WarehouseProductView' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseProductView','pathId','货位路径ID',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','code','货品编码',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','name','货品名称',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','spec','规格/型号',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','unit','计量单位ID',5, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','unitName','计量单位',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','genre','属性ID',7, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','genreName','属性',8, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','type','货品类型ID',9, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','typeName','货品类型',10, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','safetyCount','安全库存',11, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','stockCount','库存',12, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','warehouseProductID','货位产品ID',13, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','pathName','货位路径',14, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductView','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>

    <insert id="insertColumn4" >
        delete from vmes_column where model_code = 'WarehouseDetailView' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseDetailView','productId','货位路径ID',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseDetailView','warehouseName','仓库',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseDetailView','pathName','库位',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseDetailView','code','批次号',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseDetailView','stockCount','数量',5, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseDetailView','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <insert id="insertColumn5" >
        delete from vmes_column where model_code = 'WarehouseProductMove' ;
        insert into vmes_column (
        id,model_code,title_key,title_name,serial_number,
        isdisable,ishide,isedit,ismust,cdate,
        cuser
        ) VALUES
        (replace(uuid(), '-', ''),'WarehouseProductMove','pathId','货位路径ID',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','pathName','货位路径',1, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','wpCode','产品批次',1, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','code','货品编码',2, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','name','货品名称',3, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','spec','规格/型号',4, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','genre','属性ID',5, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','genreName','属性',6, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','unit','计量单位ID',7, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','unitName','计量单位',8, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','type','货品类型ID',9, '1','0','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','typeName','货品类型',10, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','stockCount','库存',11, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','moveCount','移动数量',12, '1','1','1','0',now(), 'admin'),
        (replace(uuid(), '-', ''),'WarehouseProductMove','id','id',0, '1','0','1','0',now(), 'admin')
    </insert>


    <!-- 自动创建，可以修改 -->
    <select id="warehouseDetailView"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        wp.id id,
        wp.product_id productId,
        warehouse.path_name pathName,
        wp.code code,
        pwarehouse.name warehouseName,
        round(wp.stock_count,2) stockCount
        from vmes_warehouse_product wp
        left join vmes_warehouse warehouse on warehouse.id = wp.warehouse_id
        left join vmes_warehouse pwarehouse on pwarehouse.id = warehouse.warehouse_id

        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="productId != null and productId != ''">
                and wp.product_id = #{productId}
            </if>
            <if test="warehouseId != null and warehouseId != ''">
                and warehouse.path_id LIKE CONCAT(CONCAT('%', #{warehouseId}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and wp.company_id = #{currentCompanyId}
            </if>
            <![CDATA[ and (wp.stock_count > 0 or wp.stock_count < 0) ]]>
        </where>
        order by wp.code asc  <!-- 先入先出 按批次号的升序排列 -->
    </select>



    <!-- 自动创建，可以修改 -->
    <select id="warehouseProductView"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        distinct
        prod.code,
        prod.name,
        prod.spec,
        prod.genre genre,
        genre.name genreName,
        produnit.unit unit,
        unit.name unitName,
        prod.type,
        type.name typeName,
        round(prod.safety_count,2) safetyCount,
        round(prod.stock_count,2) stockCount,
        prod.id
        from vmes_warehouse_product wp
        left join vmes_product prod on wp.product_id = prod.id
        left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
        left join vmes_dictionary genre on prod.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary type on prod.type = type.id
        left join vmes_warehouse warehouse on warehouse.id = wp.warehouse_id

        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="isSafeStock == 1"> <!-- 小于安全库存 -->
                <![CDATA[ and prod.stock_count < prod.safety_count ]]>
            </if>
            <if test="isSafeStock == 2">  <!-- 大于等于安全库存 -->
                <![CDATA[ and prod.stock_count >= prod.safety_count ]]>
            </if>
            <if test="productId != null and productId != ''">
                and wp.product_id = #{productId}
            </if>
            <if test="code != null and code != ''">
                and prod.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and prod.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="spec != null and spec != ''">
                and prod.spec LIKE CONCAT(CONCAT('%', #{spec}),'%')
            </if>
            <if test="genreName != null and genreName != ''">
                and genre.name LIKE CONCAT(CONCAT('%', #{genreName}),'%')
            </if>
            <if test="unitName != null and unitName != ''">
                and unit.name LIKE CONCAT(CONCAT('%', #{unitName}),'%')
            </if>
            <if test="typeName != null and typeName != ''">
                and type.name LIKE CONCAT(CONCAT('%', #{typeName}),'%')
            </if>
            <if test="warehouseId != null and warehouseId != ''">
                and warehouse.path_id LIKE CONCAT(CONCAT('%', #{warehouseId}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and wp.company_id = #{currentCompanyId}
            </if>
            and wp.product_id is not null and wp.stock_count is not null and wp.stock_count > 0
        </where>

        <if test="orderByStock == 0"><!-- 由多到少 -->
            order by prod.stock_count desc
        </if>
        <if test="orderByStock == 1"><!-- 由少到多 -->
            order by prod.stock_count asc
        </if>
    </select>


    <!-- 自动创建，可以修改 -->
    <select id="warehouseProductMove"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        distinct
        warehouse.path_id pathId,
        warehouse.path_name pathName,
        prod.code,
        prod.name,
        prod.spec,
        prod.genre genre,
        genre.name genreName,
        produnit.unit unit,
        unit.name unitName,
        prod.type,
        type.name typeName,
        round(wp.stock_count,2) stockCount,
        wp.code wpCode,
        wp.id
        from vmes_warehouse_product wp
        left join vmes_product prod on wp.product_id = prod.id
        left join vmes_product_unit produnit on produnit.product_id = prod.id and produnit.type = 1
        left join vmes_dictionary genre on prod.genre = genre.id
        left join vmes_dictionary unit on produnit.unit = unit.id
        left join vmes_dictionary type on prod.type = type.id
        left join vmes_warehouse warehouse on warehouse.id = wp.warehouse_id

        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="isSafeStock == 0"> <!-- 小于安全库存 -->
                <![CDATA[ and prod.stock_count < prod.safety_count ]]>
            </if>
            <if test="isSafeStock == 1">  <!-- 大于等于安全库存 -->
                <![CDATA[ and prod.stock_count >= prod.safety_count ]]>
            </if>
            <if test="productId != null and productId != ''">
                and wp.product_id = #{productId}
            </if>
            <if test="code != null and code != ''">
                and prod.code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and prod.name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="spec != null and spec != ''">
                and prod.spec LIKE CONCAT(CONCAT('%', #{spec}),'%')
            </if>
            <if test="genreName != null and genreName != ''">
                and genre.name LIKE CONCAT(CONCAT('%', #{genreName}),'%')
            </if>
            <if test="unitName != null and unitName != ''">
                and unit.name LIKE CONCAT(CONCAT('%', #{unitName}),'%')
            </if>
            <if test="typeName != null and typeName != ''">
                and type.name LIKE CONCAT(CONCAT('%', #{typeName}),'%')
            </if>
            <if test="warehouseId != null and warehouseId != ''">
                and warehouse.path_id LIKE CONCAT(CONCAT('%', #{warehouseId}),'%')
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and wp.company_id = #{currentCompanyId}
            </if>
            <![CDATA[ and (prod.stock_count > 0 or prod.stock_count < 0) ]]>
        </where>

        <if test="orderByStock == 0"><!-- 由多到少 -->
            order by prod.stock_count desc
        </if>
        <if test="orderByStock == 1"><!-- 由少到多 -->
            order by prod.stock_count asc
        </if>
    </select>


    <!-- 自动创建，可以修改 -->
    <select id="getDataListPageDispatch"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
        product.id id,
        product.company_id companyId,
        product.warehouse_id warehouseId,
        product.product_id productId,
        product.code code,
        round(product.stock_count,2) stockCount,
        product.isdisable isdisable,

        warehouse.path_name name

        from vmes_warehouse_product product
        left join vmes_warehouse warehouse on warehouse.id = product.warehouse_id
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="name != null and name != ''">
                and warehouse.path_name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="code != null and code != ''">
                and product.code = #{code}
            </if>
            <if test="productId != null and productId != ''">
                and product.product_id = #{productId}
            </if>
            <if test="warehouseId != null and warehouseId != ''">
                and product.warehouse_id = #{warehouseId}
            </if>
            <if test="currentCompanyId != null and currentCompanyId != ''">
                and product.company_id = #{currentCompanyId}
            </if>
            <if test="'true' == isNeedWarehouse and (parentWarehouseId != null and parentWarehouseId != '') ">
                and (warehouse.layer > 1 and warehouse.path_id like ${parentWarehouseId})
            </if>

            <!--备件库 自定义sql查询语句-->
            <if test="'true' == isNeedSpare">
                and warehouse.name = '备件库'
            </if>
            <if test="'true' == isNotNeedSpare">
                <![CDATA[ and warehouse.name <> '备件库' ]]>
            </if>

            <![CDATA[ and product.stock_count > 0 ]]>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>



    <!-- 自动创建，可以修改 -->
    <select id="getDataListPage"  parameterType="com.yvan.PageData"  resultType="java.util.Map">
        select
            id id,
            qrcode qrcode,
            company_id companyId,
            warehouse_id warehouseId,
            product_id productId,

            code code,
            stock_count stockCount,
            cuser cuser,
            cdate cdate,
            uuser uuser,

            udate udate,
            remark remark,
            isdisable isdisable,
            version version
        from vmes_warehouse_product
        <where>
            <!--queryStr 自定义sql查询语句-->
            <if test="queryStr != null and queryStr != ''" >
                and ${queryStr}
            </if>
            <if test="code != null and code != ''">
                and code LIKE CONCAT(CONCAT('%', #{code}),'%')
            </if>
            <if test="name != null and name != ''">
                and name LIKE CONCAT(CONCAT('%', #{name}),'%')
            </if>
        </where>
        <if test="orderStr != null and orderStr != ''" >
            order by ${orderStr}
        </if>
    </select>

    <!--vmes_warehouse_product,vmes_product 关联查询 -->
    <select id="findWarehouseProductMapList" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            a.id id,
            a.qrcode qrcode,
            a.company_id companyId,
            a.warehouse_id warehouseId,
            a.product_id productId,

            a.code code,
            a.stock_count stockCount,
            a.remark remark,
            a.isdisable isdisable,
            a.version version,

            b.code productCode,
            b.name productName,
            b.name_en productNameEn,
            b.spec productSpec,
            b.genre productGenre,
            genre.name productGenreName,


            b.type productType,
            produnit.unit productUnit,
            productUnit.name productUnitName,
            b.last_unit productLastUnit,
            b.last_ratio productLastRatio,
            b.price productPrice,

            b.validity_date productValidityDate,
            b.isdisable productIsdisable,
            b.stock_count productStockCount,
            b.safety_count productSafetyCount

        from vmes_warehouse_product a
            left join vmes_product b on a.product_id = b.id
            left join vmes_product_unit produnit on b.id = produnit.product_id and produnit.type = 1
            left join vmes_dictionary genre on b.genre = genre.id
            left join vmes_dictionary productUnit on produnit.unit = productUnit.id
        <where>
            <if test="companyId != null and companyId != ''" >
                and a.company_id=#{companyId}
            </if>
            <if test="code != null and code != ''" >
                and a.code=#{code}
            </if>
            <if test="isdisable != null and isdisable != ''" >
                and a.isdisable=#{isdisable}
            </if>

            <if test="productType != null and productType != ''" >
                and b.type=#{productType}
            </if>
            <if test="productIsdisable != null and productIsdisable != ''" >
                and b.isdisable=#{productIsdisable}
            </if>

            <if test="queryText != null and queryText != ''" >
                and (a.code LIKE CONCAT(CONCAT(#{queryText}),'%')
                  or b.code LIKE CONCAT(CONCAT(#{queryText}),'%')
                  or b.name LIKE CONCAT(CONCAT(#{queryText}),'%')
                )
            </if>
        </where>
    </select>


    <!--库存数量-并发(version)控制-->
    <update id="updateSynStockCount" parameterType="com.yvan.PageData">
        update vmes_product t set t.stock_count = ifnull((select
        round(sum(ifnull(wp.stock_count,0)),2) stockCount
        from vmes_warehouse_product wp
        WHERE
        wp.product_id = t.id
        ),0)
        <where>
            <if test="id != null and id != ''" >
                and t.id=#{id}
            </if>

            <if test="currentCompanyId != null and currentCompanyId != ''">
                and t.company_id = #{currentCompanyId}
            </if>
        </where>
    </update>

    <!--库存数量-并发(version)控制-->
    <update id="updateStockCount" parameterType="com.yvan.PageData">
        update vmes_warehouse_product
        set
            stock_count = ${stockCount},
            uuser = #{uuser},
            udate = now(),
            version = version + 1
        <where>
            <if test="id != null and id != ''" >
                and id=#{id}
            </if>

            <if test="code != null and code != ''" >
                and code=#{code}
            </if>
            <if test="productId != null and productId != ''" >
                and product_id=#{productId}
            </if>
            <if test="warehouseId != null and warehouseId != ''" >
                and warehouse_id=#{warehouseId}
            </if>

            <if test="version != null and version != ''" >
                and version=${version}
            </if>
        </where>
    </update>

    <!--手机端库存详情接口-->
    <select id="findListPageWarehouseByProduct" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
        prod.code code,
        prod.cdate cDate,
        prod.stock_count stockCount,
        prod.company_id companyId,
        prod.product_id productId,
        warehouse.path_name path

        from vmes_warehouse_product prod
        LEFT JOIN vmes_warehouse warehouse ON prod.warehouse_id = warehouse.id
        <where>
            <if test="companyId != null and companyId != ''" >
                and prod.company_id=#{companyId}
            </if>
            <if test="productId != null and productId != ''" >
                and prod.product_id=#{productId}
            </if>
        </where>
        order by prod.stock_count desc
    </select>

    <!--(仓库id或仓库货位id)下面所有仓库或货位是否有货品-->
    <select id="findWarehouseProductByWarehouse" parameterType="com.yvan.PageData" resultType="java.util.Map">
        select
            id id,
            company_id companyId,
            warehouse_id warehouseId,
            product_id productId,
            code code
        from vmes_warehouse_product
        <where>
            <if test="warehouseId != null and warehouseId != ''" >
                and warehouse_id in (
                    select id
                    from vmes_warehouse
                    <where>
                        <if test="warehouseId != null and warehouseId != ''" >
                            and path_id LIKE CONCAT(CONCAT('%', #{warehouseId}),'%')
                        </if>
                        <if test="companyId != null and companyId != ''" >
                            and company_id=#{companyId}
                        </if>
                    </where>
                )
            </if>
            <if test="companyId != null and companyId != ''" >
                and company_id=#{companyId}
            </if>
            and stock_count > 0
            and isdisable = '1'
        </where>
    </select>

</mapper>